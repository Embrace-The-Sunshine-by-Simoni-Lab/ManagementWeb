{"ast":null,"code":"import _toConsumableArray from \"/Users/zhaoyuliu/Desktop/matx-pro-3.3.0/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _objectSpread from \"/Users/zhaoyuliu/Desktop/matx-pro-3.3.0/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _slicedToArray from \"/Users/zhaoyuliu/Desktop/matx-pro-3.3.0/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _defineProperty from \"/Users/zhaoyuliu/Desktop/matx-pro-3.3.0/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\n\nvar _jsxFileName = \"/Users/zhaoyuliu/Desktop/matx-pro-3.3.0/src/app/views/scrum-board/CardEditorDialog.jsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Dialog, TextField, Icon, Avatar, Button, Divider, IconButton, Grid, Card, MenuItem, Input, FormControlLabel, Checkbox, Tooltip, useMediaQuery } from '@mui/material';\nimport { getTimeDifference, generateRandomId } from 'app/utils/utils.js';\nimport Scrollbar from 'react-perfect-scrollbar';\nimport { MatxMenu } from 'app/components';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { updateCardInList } from '../../redux/actions/ScrumBoardActions';\nimport { Box, styled, useTheme } from '@mui/system';\nimport { H6, Paragraph, Small, Span } from 'app/components/Typography';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar FlexBox = styled(Box)(function () {\n  return {\n    display: 'flex',\n    alignItems: 'center'\n  };\n});\nvar JustifyBox = styled(FlexBox)(function () {\n  return {\n    justifyContent: 'space-between'\n  };\n});\nvar StyledAvatar = styled(Avatar)(function () {\n  return {\n    height: '32px',\n    width: '32px'\n  };\n});\nvar StyledInput = styled(Input)(function () {\n  return {\n    flexGrow: 1,\n    fontSize: '16px',\n    fontWeight: '500',\n    paddingLeft: '3px',\n    paddingRight: '8px',\n    marginLeft: '12px',\n    textTransform: 'capitalize'\n  };\n});\nvar Heading = styled(H6)(function (_ref) {\n  var theme = _ref.theme;\n  return {\n    textTransform: 'uppercase',\n    color: theme.palette.text.secondary\n  };\n});\nvar StyledScrollBar = styled(Scrollbar)(function () {\n  return {\n    maxHeight: 380,\n    position: 'relative',\n    paddingTop: '16px',\n    marginBottom: '16px'\n  };\n});\nvar ScrollContent = styled('div')(function (_ref2) {\n  var theme = _ref2.theme;\n  return _defineProperty({\n    padding: '0px 24px !important',\n    paddingTop: '24px !important'\n  }, theme.breakpoints.down('sm'), {\n    padding: '0px 12px !important',\n    paddingTop: '16px !important'\n  });\n});\nvar ContentBox = styled(Box)(function (_ref4) {\n  var theme = _ref4.theme;\n  return _defineProperty({\n    padding: '0px 24px !important',\n    paddingTop: '16px !important'\n  }, theme.breakpoints.down('sm'), {\n    padding: '0px 12px !important'\n  });\n});\nvar StyledItem = styled(MenuItem)(function () {\n  return {\n    minWidth: 164,\n    display: 'flex',\n    alignItems: 'center'\n  };\n});\nvar StyledCard = styled(Card)(function (_ref6) {\n  var theme = _ref6.theme;\n  return {\n    height: '100%',\n    padding: '16px',\n    display: 'flex',\n    alignItems: 'center',\n    paddingTop: '16px !important',\n    background: theme.palette.background.default\n  };\n});\nvar IMG = styled('img')(function (_ref7) {\n  var theme = _ref7.theme;\n  return {\n    width: '100%'\n  };\n});\n\nvar CardEditorDialog = function CardEditorDialog(_ref8) {\n  _s();\n\n  var open = _ref8.open,\n      card = _ref8.card,\n      handleClose = _ref8.handleClose;\n\n  var _useState = useState({}),\n      _useState2 = _slicedToArray(_useState, 2),\n      state = _useState2[0],\n      setState = _useState2[1];\n\n  var dispatch = useDispatch();\n  var theme = useTheme();\n  var isMobile = useMediaQuery(theme.breakpoints.down('sm'));\n\n  var _useSelector = useSelector(function (state) {\n    return state;\n  }),\n      _useSelector$user = _useSelector.user,\n      user = _useSelector$user === void 0 ? {} : _useSelector$user;\n\n  var _useSelector2 = useSelector(function (state) {\n    return state.scrumboard;\n  }),\n      _useSelector2$board = _useSelector2.board,\n      board = _useSelector2$board === void 0 ? {} : _useSelector2$board,\n      _useSelector2$memberL = _useSelector2.memberList,\n      memberList = _useSelector2$memberL === void 0 ? [] : _useSelector2$memberL,\n      _useSelector2$labelLi = _useSelector2.labelList,\n      labelList = _useSelector2$labelLi === void 0 ? [] : _useSelector2$labelLi;\n\n  var closeDialog = function closeDialog() {\n    handleClose();\n  };\n\n  var makeCoverPhoto = function makeCoverPhoto(coverImage) {\n    setState(_objectSpread(_objectSpread({}, state), {}, {\n      coverImage: coverImage\n    }));\n  };\n\n  var removeAttachments = function removeAttachments(index) {\n    var _state$attachments = state.attachments,\n        attachments = _state$attachments === void 0 ? [] : _state$attachments;\n    attachments.splice(index, 1);\n    setState(_objectSpread(_objectSpread({}, state), {}, {\n      attachments: attachments\n    }));\n  };\n\n  var handleChange = function handleChange(event) {\n    var target = event.target;\n    var id = target.value;\n\n    if (target.name === 'avatar') {\n      var _cardMembers = state.cardMembers,\n          _boardMembers = state.boardMembers;\n\n      var member = _boardMembers.find(function (user) {\n        return user.id === id;\n      });\n\n      if (!target.checked) {\n        _cardMembers.splice(_cardMembers.indexOf(member), 1);\n\n        setState(_objectSpread(_objectSpread({}, state), {}, {\n          cardMembers: _cardMembers\n        }));\n      } else {\n        _cardMembers.push(member);\n\n        setState(_objectSpread(_objectSpread({}, state), {}, {\n          cardMembers: _cardMembers\n        }));\n      }\n    } else if (target.name === 'label') {\n      var _labels = state.labels;\n      var label = labelList.find(function (item) {\n        return item.id === parseInt(id);\n      });\n\n      if (!target.checked) {\n        _labels.splice(_labels.indexOf(label), 1);\n\n        setState(_objectSpread(_objectSpread({}, state), {}, {\n          labels: _labels\n        }));\n      } else {\n        _labels.push(label);\n\n        setState(_objectSpread(_objectSpread({}, state), {}, {\n          labels: _labels\n        }));\n      }\n    } else if (event.key === 'Enter' && !event.shiftKey && target.name === 'commentText') {\n      setState(_objectSpread(_objectSpread({}, state), {}, _defineProperty({}, event.target.name, event.target.value)));\n      sendComment();\n    } else {\n      setState(_objectSpread(_objectSpread({}, state), {}, _defineProperty({}, event.target.name, event.target.value)));\n    }\n  };\n\n  var handleSave = function handleSave() {\n    var id = state.id,\n        title = state.title,\n        coverImage = state.coverImage,\n        _state$cardMembers = state.cardMembers,\n        cardMembers = _state$cardMembers === void 0 ? [] : _state$cardMembers,\n        _state$labels = state.labels,\n        labels = _state$labels === void 0 ? [] : _state$labels,\n        description = state.description,\n        _state$attachments2 = state.attachments,\n        attachments = _state$attachments2 === void 0 ? [] : _state$attachments2,\n        _state$comments = state.comments,\n        comments = _state$comments === void 0 ? [] : _state$comments,\n        listId = state.listId,\n        boardId = state.boardId;\n    var card = {\n      id: id,\n      title: title,\n      coverImage: coverImage,\n      members: cardMembers.map(function (member) {\n        return member.id;\n      }),\n      labels: labels.map(function (item) {\n        return item.id;\n      }),\n      description: description,\n      attachments: attachments,\n      comments: comments\n    };\n    dispatch(updateCardInList(boardId, listId, card));\n    closeDialog();\n  };\n\n  var sendComment = function sendComment() {\n    var _state$comments2 = state.comments,\n        comments = _state$comments2 === void 0 ? [] : _state$comments2,\n        commentText = state.commentText;\n\n    if (commentText.trim() !== '') {\n      comments.push({\n        id: generateRandomId(),\n        uid: user.userId,\n        text: commentText.trim(),\n        time: new Date()\n      });\n      commentText = '';\n    }\n\n    setState(_objectSpread(_objectSpread({}, state), {}, {\n      comments: comments,\n      commentText: commentText\n    }));\n  };\n\n  useEffect(function () {\n    var _card$members = card.members,\n        members = _card$members === void 0 ? [] : _card$members,\n        _card$labels = card.labels,\n        labels = _card$labels === void 0 ? [] : _card$labels;\n    var cardMembers = members.map(function (boardMemberId) {\n      return memberList.find(function (member) {\n        return member.id === boardMemberId;\n      });\n    });\n    var modifiedLabelList = labels.map(function (labelId) {\n      return labelList.find(function (label) {\n        return label.id === labelId;\n      });\n    });\n    var boardMembers = board.members.map(function (boardMember) {\n      return memberList.find(function (member) {\n        return member.id === boardMember.id;\n      });\n    });\n    setState(function (state) {\n      return _objectSpread(_objectSpread(_objectSpread({}, state), card), {}, {\n        boardId: board.id,\n        cardMembers: cardMembers,\n        boardMembers: boardMembers,\n        labels: _toConsumableArray(modifiedLabelList)\n      });\n    });\n  }, [card, labelList, memberList, board.id, board.members]);\n  var title = state.title,\n      _state$cardMembers2 = state.cardMembers,\n      cardMembers = _state$cardMembers2 === void 0 ? [] : _state$cardMembers2,\n      _state$boardMembers = state.boardMembers,\n      boardMembers = _state$boardMembers === void 0 ? [] : _state$boardMembers,\n      _state$labels2 = state.labels,\n      labels = _state$labels2 === void 0 ? [] : _state$labels2,\n      description = state.description,\n      _state$attachments3 = state.attachments,\n      attachments = _state$attachments3 === void 0 ? [] : _state$attachments3,\n      _state$comments3 = state.comments,\n      comments = _state$comments3 === void 0 ? [] : _state$comments3,\n      commentText = state.commentText;\n\n  var _useTheme = useTheme(),\n      palette = _useTheme.palette;\n\n  var textMuted = palette.text.secondary;\n  var textPrimary = palette.primary.main;\n  var bgPrimary = palette.primary.main;\n  var bgLightGrey = 'rgba(0, 0, 0, 0.01)';\n  return /*#__PURE__*/_jsxDEV(Dialog, {\n    onClose: closeDialog,\n    open: open,\n    fullScreen: isMobile,\n    fullWidth: true,\n    scroll: \"body\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"scrum-board\",\n      children: [/*#__PURE__*/_jsxDEV(ContentBox, {\n        children: [/*#__PURE__*/_jsxDEV(FlexBox, {\n          children: [/*#__PURE__*/_jsxDEV(FlexBox, {\n            flexGrow: 1,\n            children: [/*#__PURE__*/_jsxDEV(Icon, {\n              sx: {\n                color: textMuted\n              },\n              children: \"assignment\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 279,\n              columnNumber: 29\n            }, _this), /*#__PURE__*/_jsxDEV(StyledInput, {\n              type: \"text\",\n              autoFocus: true,\n              name: \"title\",\n              onChange: handleChange,\n              value: title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 280,\n              columnNumber: 29\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 278,\n            columnNumber: 25\n          }, _this), /*#__PURE__*/_jsxDEV(IconButton, {\n            size: \"small\",\n            onClick: closeDialog,\n            children: /*#__PURE__*/_jsxDEV(Icon, {\n              children: \"clear\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 289,\n              columnNumber: 29\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 288,\n            columnNumber: 25\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 21\n        }, _this), /*#__PURE__*/_jsxDEV(Box, {\n          ml: 5,\n          children: [/*#__PURE__*/_jsxDEV(Paragraph, {\n            sx: {\n              mb: 2,\n              fontSize: '0.8125rem',\n              color: textMuted\n            },\n            children: \"Tech Startup Board Hot Backlog\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 294,\n            columnNumber: 25\n          }, _this), /*#__PURE__*/_jsxDEV(JustifyBox, {\n            mb: 2,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(Heading, {\n                sx: {\n                  mb: 1\n                },\n                children: \"Card Members\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 306,\n                columnNumber: 33\n              }, _this), /*#__PURE__*/_jsxDEV(Box, {\n                ml: \"-0.875rem\",\n                display: \"flex\",\n                position: \"relative\",\n                children: [cardMembers.map(function (member) {\n                  return /*#__PURE__*/_jsxDEV(StyledAvatar, {\n                    src: member.avatar\n                  }, member.id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 313,\n                    columnNumber: 41\n                  }, _this);\n                }), /*#__PURE__*/_jsxDEV(MatxMenu, {\n                  horizontalPosition: \"center\",\n                  shouldCloseOnItemClick: false,\n                  menuButton: /*#__PURE__*/_jsxDEV(Tooltip, {\n                    title: 'Add',\n                    fontSize: \"large\",\n                    children: /*#__PURE__*/_jsxDEV(StyledAvatar, {\n                      sx: {\n                        ml: '-12px',\n                        cursor: 'pointer'\n                      },\n                      children: \"+\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 326,\n                      columnNumber: 49\n                    }, _this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 322,\n                    columnNumber: 45\n                  }, _this),\n                  children: boardMembers.map(function (user) {\n                    return /*#__PURE__*/_jsxDEV(FormControlLabel, {\n                      sx: {\n                        ml: 0\n                      },\n                      control: /*#__PURE__*/_jsxDEV(Checkbox, {\n                        name: \"avatar\",\n                        checked: cardMembers.some(function (member) {\n                          return member.id === user.id;\n                        }),\n                        onChange: handleChange,\n                        value: user.id\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 342,\n                        columnNumber: 53\n                      }, _this),\n                      label: /*#__PURE__*/_jsxDEV(FlexBox, {\n                        children: [/*#__PURE__*/_jsxDEV(Avatar, {\n                          src: user.avatar,\n                          sx: {\n                            width: 24,\n                            height: 24\n                          }\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 355,\n                          columnNumber: 57\n                        }, _this), /*#__PURE__*/_jsxDEV(Span, {\n                          sx: {\n                            ml: '12px'\n                          },\n                          children: user.name\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 362,\n                          columnNumber: 57\n                        }, _this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 354,\n                        columnNumber: 53\n                      }, _this)\n                    }, user.id, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 338,\n                      columnNumber: 45\n                    }, _this);\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 318,\n                  columnNumber: 37\n                }, _this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 307,\n                columnNumber: 33\n              }, _this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 305,\n              columnNumber: 29\n            }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(Heading, {\n                sx: {\n                  mb: 1\n                },\n                children: \"labels\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 375,\n                columnNumber: 33\n              }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"button-group\",\n                children: [labels.map(function (label) {\n                  return /*#__PURE__*/_jsxDEV(Button, {\n                    size: \"small\",\n                    variant: \"contained\",\n                    sx: {\n                      mr: '4px',\n                      color: '#fff',\n                      fontSize: '0.8125rem',\n                      textTransform: 'capitalize'\n                    },\n                    children: label.title\n                  }, label.id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 378,\n                    columnNumber: 41\n                  }, _this);\n                }), /*#__PURE__*/_jsxDEV(MatxMenu, {\n                  horizontalPosition: \"right\",\n                  shouldCloseOnItemClick: false,\n                  menuButton: /*#__PURE__*/_jsxDEV(Tooltip, {\n                    title: 'Add',\n                    fontSize: \"large\",\n                    children: /*#__PURE__*/_jsxDEV(Button, {\n                      sx: {\n                        background: bgLightGrey\n                      },\n                      size: \"small\",\n                      children: \"+\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 400,\n                      columnNumber: 49\n                    }, _this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 396,\n                    columnNumber: 45\n                  }, _this),\n                  children: labelList.map(function (label) {\n                    return /*#__PURE__*/_jsxDEV(FormControlLabel, {\n                      sx: {\n                        ml: 0\n                      },\n                      control: /*#__PURE__*/_jsxDEV(Checkbox, {\n                        checked: labels.some(function (item) {\n                          return item.id === label.id;\n                        }),\n                        onChange: handleChange,\n                        value: label.id,\n                        name: \"label\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 416,\n                        columnNumber: 53\n                      }, _this),\n                      label: /*#__PURE__*/_jsxDEV(FlexBox, {\n                        children: [/*#__PURE__*/_jsxDEV(Box, {\n                          sx: {\n                            background: bgPrimary,\n                            fontSize: '24px',\n                            borderRadius: '4px'\n                          }\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 429,\n                          columnNumber: 57\n                        }, _this), /*#__PURE__*/_jsxDEV(Span, {\n                          sx: {\n                            ml: '12px'\n                          },\n                          children: label.title\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 439,\n                          columnNumber: 57\n                        }, _this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 428,\n                        columnNumber: 53\n                      }, _this)\n                    }, label.id, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 412,\n                      columnNumber: 45\n                    }, _this);\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 392,\n                  columnNumber: 37\n                }, _this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 376,\n                columnNumber: 33\n              }, _this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 374,\n              columnNumber: 29\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 304,\n            columnNumber: 25\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 21\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 455,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(StyledScrollBar, {\n        children: [/*#__PURE__*/_jsxDEV(ScrollContent, {\n          children: [/*#__PURE__*/_jsxDEV(FlexBox, {\n            mb: 1,\n            children: [/*#__PURE__*/_jsxDEV(Icon, {\n              sx: {\n                color: textMuted\n              },\n              children: \"description\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 460,\n              columnNumber: 29\n            }, _this), /*#__PURE__*/_jsxDEV(Heading, {\n              sx: {\n                ml: 2\n              },\n              children: \"description\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 461,\n              columnNumber: 29\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 459,\n            columnNumber: 25\n          }, _this), /*#__PURE__*/_jsxDEV(Box, {\n            ml: 5,\n            mb: 2,\n            display: \"flex\",\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              sx: {\n                color: textMuted\n              },\n              onChange: handleChange,\n              name: \"description\",\n              value: description,\n              variant: \"outlined\",\n              fullWidth: true,\n              multiline: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 464,\n              columnNumber: 29\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 463,\n            columnNumber: 25\n          }, _this), /*#__PURE__*/_jsxDEV(JustifyBox, {\n            children: [/*#__PURE__*/_jsxDEV(FlexBox, {\n              children: [/*#__PURE__*/_jsxDEV(Icon, {\n                sx: {\n                  color: textMuted\n                },\n                children: \"attach_file\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 477,\n                columnNumber: 33\n              }, _this), /*#__PURE__*/_jsxDEV(Heading, {\n                sx: {\n                  ml: 2\n                },\n                children: \"attachments\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 480,\n                columnNumber: 33\n              }, _this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 476,\n              columnNumber: 29\n            }, _this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"upload-file\",\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                component: \"span\",\n                sx: {\n                  color: textPrimary,\n                  fontWeight: '500',\n                  textTransform: 'uppercase'\n                },\n                children: \"+ add an attachment\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 484,\n                columnNumber: 33\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 483,\n              columnNumber: 29\n            }, _this), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"hidden\",\n              id: \"upload-file\",\n              type: \"file\",\n              multiple: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 495,\n              columnNumber: 29\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 475,\n            columnNumber: 25\n          }, _this), /*#__PURE__*/_jsxDEV(Box, {\n            ml: 5,\n            mb: 2,\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              spacing: 2,\n              children: attachments.map(function (file, id) {\n                return /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  lg: 6,\n                  md: 6,\n                  sm: 12,\n                  xs: 12,\n                  children: /*#__PURE__*/_jsxDEV(StyledCard, {\n                    elevation: 2,\n                    children: [/*#__PURE__*/_jsxDEV(FlexBox, {\n                      borderRadius: \"8px\",\n                      children: /*#__PURE__*/_jsxDEV(IMG, {\n                        src: file.url,\n                        alt: \"cover\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 516,\n                        columnNumber: 49\n                      }, _this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 515,\n                      columnNumber: 45\n                    }, _this), /*#__PURE__*/_jsxDEV(Box, {\n                      ml: 2,\n                      children: [/*#__PURE__*/_jsxDEV(Heading, {\n                        sx: {\n                          textTransform: 'capitalize'\n                        },\n                        children: file.name\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 522,\n                        columnNumber: 49\n                      }, _this), /*#__PURE__*/_jsxDEV(Small, {\n                        sx: {\n                          color: textMuted,\n                          fontSize: '0.8125rem',\n                          textTransform: 'capitalize'\n                        },\n                        children: file.size\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 530,\n                        columnNumber: 49\n                      }, _this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 521,\n                      columnNumber: 45\n                    }, _this), /*#__PURE__*/_jsxDEV(MatxMenu, {\n                      horizontalPosition: \"center\",\n                      menuButton: /*#__PURE__*/_jsxDEV(IconButton, {\n                        sx: {\n                          ml: 2\n                        },\n                        children: /*#__PURE__*/_jsxDEV(Icon, {\n                          children: \"more_vert\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 545,\n                          columnNumber: 57\n                        }, _this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 544,\n                        columnNumber: 53\n                      }, _this),\n                      children: [/*#__PURE__*/_jsxDEV(StyledItem, {\n                        onClick: function onClick() {\n                          return makeCoverPhoto(file.url);\n                        },\n                        children: [/*#__PURE__*/_jsxDEV(Icon, {\n                          children: \" insert_photo \"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 554,\n                          columnNumber: 53\n                        }, _this), /*#__PURE__*/_jsxDEV(Span, {\n                          sx: {\n                            pl: 2\n                          },\n                          children: \"Make Cover\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 555,\n                          columnNumber: 53\n                        }, _this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 549,\n                        columnNumber: 49\n                      }, _this), /*#__PURE__*/_jsxDEV(StyledItem, {\n                        onClick: function onClick() {\n                          return removeAttachments(id);\n                        },\n                        children: [/*#__PURE__*/_jsxDEV(Icon, {\n                          children: \" delete \"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 564,\n                          columnNumber: 53\n                        }, _this), /*#__PURE__*/_jsxDEV(Span, {\n                          sx: {\n                            pl: 2\n                          },\n                          children: \"Remove\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 565,\n                          columnNumber: 53\n                        }, _this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 559,\n                        columnNumber: 49\n                      }, _this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 541,\n                      columnNumber: 45\n                    }, _this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 514,\n                    columnNumber: 41\n                  }, _this)\n                }, id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 506,\n                  columnNumber: 37\n                }, _this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 504,\n              columnNumber: 29\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 503,\n            columnNumber: 25\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 458,\n          columnNumber: 21\n        }, _this), /*#__PURE__*/_jsxDEV(Divider, {\n          sx: {\n            my: 2\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 577,\n          columnNumber: 21\n        }, _this), /*#__PURE__*/_jsxDEV(ContentBox, {\n          pt: 0,\n          children: [/*#__PURE__*/_jsxDEV(FlexBox, {\n            mb: 1,\n            children: [/*#__PURE__*/_jsxDEV(Icon, {\n              sx: {\n                color: textMuted\n              },\n              children: \"message\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 581,\n              columnNumber: 29\n            }, _this), /*#__PURE__*/_jsxDEV(Heading, {\n              sx: {\n                ml: 2\n              },\n              children: \"comments\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 582,\n              columnNumber: 29\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 580,\n            columnNumber: 25\n          }, _this), /*#__PURE__*/_jsxDEV(Box, {\n            ml: 5,\n            className: \"comments\",\n            children: [comments.map(function (comment) {\n              var user = memberList.find(function (user) {\n                return user.id === comment.uid;\n              });\n              return /*#__PURE__*/_jsxDEV(Box, {\n                mb: 2,\n                children: [/*#__PURE__*/_jsxDEV(FlexBox, {\n                  mb: 1,\n                  children: [/*#__PURE__*/_jsxDEV(StyledAvatar, {\n                    src: user.avatar,\n                    sizes: 36\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 592,\n                    columnNumber: 45\n                  }, _this), /*#__PURE__*/_jsxDEV(Box, {\n                    ml: \"12px\",\n                    children: [/*#__PURE__*/_jsxDEV(H6, {\n                      children: user.name\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 597,\n                      columnNumber: 49\n                    }, _this), /*#__PURE__*/_jsxDEV(\"small\", {\n                      children: [getTimeDifference(new Date(comment.time)), ' ', \"ago\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 598,\n                      columnNumber: 49\n                    }, _this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 596,\n                    columnNumber: 45\n                  }, _this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 591,\n                  columnNumber: 41\n                }, _this), /*#__PURE__*/_jsxDEV(Paragraph, {\n                  sx: {\n                    color: textMuted\n                  },\n                  children: comment.text\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 606,\n                  columnNumber: 41\n                }, _this)]\n              }, comment.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 590,\n                columnNumber: 37\n              }, _this);\n            }), /*#__PURE__*/_jsxDEV(FlexBox, {\n              mb: 2,\n              children: [/*#__PURE__*/_jsxDEV(StyledAvatar, {\n                src: user.photoURL,\n                sizes: 36\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 614,\n                columnNumber: 33\n              }, _this), /*#__PURE__*/_jsxDEV(Box, {\n                display: \"flex\",\n                flexGrow: 1,\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  onChange: handleChange,\n                  onKeyDown: handleChange,\n                  variant: \"outlined\",\n                  name: \"commentText\",\n                  value: commentText || '',\n                  fullWidth: true,\n                  inputProps: {\n                    style: {\n                      padding: '10px'\n                    }\n                  },\n                  sx: {\n                    m: '12px',\n                    color: textMuted\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 616,\n                  columnNumber: 37\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 615,\n                columnNumber: 33\n              }, _this), /*#__PURE__*/_jsxDEV(Button, {\n                onClick: sendComment,\n                children: \"Send\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 631,\n                columnNumber: 33\n              }, _this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 613,\n              columnNumber: 29\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 584,\n            columnNumber: 25\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 579,\n          columnNumber: 21\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 457,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(ContentBox, {\n        pt: 0,\n        mb: \"12px\",\n        display: \"flex\",\n        justifyContent: \"flex-end\",\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          sx: {\n            mr: '12px'\n          },\n          onClick: closeDialog,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 643,\n          columnNumber: 21\n        }, _this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleSave,\n          variant: \"contained\",\n          color: \"primary\",\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 646,\n          columnNumber: 21\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 637,\n        columnNumber: 17\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 13\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 268,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(CardEditorDialog, \"rBygdSIXBEH+AbGkg61/6NeCcFQ=\", false, function () {\n  return [useDispatch, useTheme, useMediaQuery, useSelector, useSelector, useTheme];\n});\n\n_c = CardEditorDialog;\nexport default CardEditorDialog;\n\nvar _c;\n\n$RefreshReg$(_c, \"CardEditorDialog\");","map":{"version":3,"sources":["/Users/zhaoyuliu/Desktop/matx-pro-3.3.0/src/app/views/scrum-board/CardEditorDialog.jsx"],"names":["React","useState","useEffect","Dialog","TextField","Icon","Avatar","Button","Divider","IconButton","Grid","Card","MenuItem","Input","FormControlLabel","Checkbox","Tooltip","useMediaQuery","getTimeDifference","generateRandomId","Scrollbar","MatxMenu","useDispatch","useSelector","updateCardInList","Box","styled","useTheme","H6","Paragraph","Small","Span","FlexBox","display","alignItems","JustifyBox","justifyContent","StyledAvatar","height","width","StyledInput","flexGrow","fontSize","fontWeight","paddingLeft","paddingRight","marginLeft","textTransform","Heading","theme","color","palette","text","secondary","StyledScrollBar","maxHeight","position","paddingTop","marginBottom","ScrollContent","padding","breakpoints","down","ContentBox","StyledItem","minWidth","StyledCard","background","default","IMG","CardEditorDialog","open","card","handleClose","state","setState","dispatch","isMobile","user","scrumboard","board","memberList","labelList","closeDialog","makeCoverPhoto","coverImage","removeAttachments","index","attachments","splice","handleChange","event","target","id","value","name","cardMembers","boardMembers","member","find","checked","indexOf","push","labels","label","item","parseInt","key","shiftKey","sendComment","handleSave","title","description","comments","listId","boardId","members","map","commentText","trim","uid","userId","time","Date","boardMemberId","modifiedLabelList","labelId","boardMember","textMuted","textPrimary","primary","main","bgPrimary","bgLightGrey","mb","avatar","ml","cursor","some","mr","borderRadius","file","url","size","pl","my","comment","photoURL","style","m"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport {\r\n    Dialog,\r\n    TextField,\r\n    Icon,\r\n    Avatar,\r\n    Button,\r\n    Divider,\r\n    IconButton,\r\n    Grid,\r\n    Card,\r\n    MenuItem,\r\n    Input,\r\n    FormControlLabel,\r\n    Checkbox,\r\n    Tooltip,\r\n    useMediaQuery,\r\n} from '@mui/material'\r\nimport { getTimeDifference, generateRandomId } from 'app/utils/utils.js'\r\nimport Scrollbar from 'react-perfect-scrollbar'\r\nimport { MatxMenu } from 'app/components'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { updateCardInList } from '../../redux/actions/ScrumBoardActions'\r\nimport { Box, styled, useTheme } from '@mui/system'\r\nimport { H6, Paragraph, Small, Span } from 'app/components/Typography'\r\n\r\nconst FlexBox = styled(Box)(() => ({\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n}))\r\n\r\nconst JustifyBox = styled(FlexBox)(() => ({\r\n    justifyContent: 'space-between',\r\n}))\r\n\r\nconst StyledAvatar = styled(Avatar)(() => ({\r\n    height: '32px',\r\n    width: '32px',\r\n}))\r\n\r\nconst StyledInput = styled(Input)(() => ({\r\n    flexGrow: 1,\r\n    fontSize: '16px',\r\n    fontWeight: '500',\r\n    paddingLeft: '3px',\r\n    paddingRight: '8px',\r\n    marginLeft: '12px',\r\n    textTransform: 'capitalize',\r\n}))\r\n\r\nconst Heading = styled(H6)(({ theme }) => ({\r\n    textTransform: 'uppercase',\r\n    color: theme.palette.text.secondary,\r\n}))\r\n\r\nconst StyledScrollBar = styled(Scrollbar)(() => ({\r\n    maxHeight: 380,\r\n    position: 'relative',\r\n    paddingTop: '16px',\r\n    marginBottom: '16px',\r\n}))\r\n\r\nconst ScrollContent = styled('div')(({ theme }) => ({\r\n    padding: '0px 24px !important',\r\n    paddingTop: '24px !important',\r\n    [theme.breakpoints.down('sm')]: {\r\n        padding: '0px 12px !important',\r\n        paddingTop: '16px !important',\r\n    },\r\n}))\r\n\r\nconst ContentBox = styled(Box)(({ theme }) => ({\r\n    padding: '0px 24px !important',\r\n    paddingTop: '16px !important',\r\n    [theme.breakpoints.down('sm')]: {\r\n        padding: '0px 12px !important',\r\n    },\r\n}))\r\n\r\nconst StyledItem = styled(MenuItem)(() => ({\r\n    minWidth: 164,\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n}))\r\n\r\nconst StyledCard = styled(Card)(({ theme }) => ({\r\n    height: '100%',\r\n    padding: '16px',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    paddingTop: '16px !important',\r\n    background: theme.palette.background.default,\r\n}))\r\n\r\nconst IMG = styled('img')(({ theme }) => ({\r\n    width: '100%',\r\n}))\r\n\r\nconst CardEditorDialog = ({ open, card, handleClose }) => {\r\n    const [state, setState] = useState({})\r\n\r\n    const dispatch = useDispatch()\r\n    const theme = useTheme()\r\n    const isMobile = useMediaQuery(theme.breakpoints.down('sm'))\r\n    const { user = {} } = useSelector((state) => state)\r\n    const {\r\n        board = {},\r\n        memberList = [],\r\n        labelList = [],\r\n    } = useSelector((state) => state.scrumboard)\r\n\r\n    const closeDialog = () => {\r\n        handleClose()\r\n    }\r\n\r\n    const makeCoverPhoto = (coverImage) => {\r\n        setState({\r\n            ...state,\r\n            coverImage,\r\n        })\r\n    }\r\n\r\n    const removeAttachments = (index) => {\r\n        let { attachments = [] } = state\r\n        attachments.splice(index, 1)\r\n        setState({\r\n            ...state,\r\n            attachments,\r\n        })\r\n    }\r\n\r\n    const handleChange = (event) => {\r\n        let target = event.target\r\n        let id = target.value\r\n\r\n        if (target.name === 'avatar') {\r\n            let { cardMembers, boardMembers } = state\r\n            let member = boardMembers.find((user) => user.id === id)\r\n\r\n            if (!target.checked) {\r\n                cardMembers.splice(cardMembers.indexOf(member), 1)\r\n                setState({ ...state, cardMembers })\r\n            } else {\r\n                cardMembers.push(member)\r\n                setState({ ...state, cardMembers })\r\n            }\r\n        } else if (target.name === 'label') {\r\n            let { labels } = state\r\n            let label = labelList.find((item) => item.id === parseInt(id))\r\n\r\n            if (!target.checked) {\r\n                labels.splice(labels.indexOf(label), 1)\r\n                setState({ ...state, labels })\r\n            } else {\r\n                labels.push(label)\r\n                setState({ ...state, labels })\r\n            }\r\n        } else if (\r\n            event.key === 'Enter' &&\r\n            !event.shiftKey &&\r\n            target.name === 'commentText'\r\n        ) {\r\n            setState({\r\n                ...state,\r\n                [event.target.name]: event.target.value,\r\n            })\r\n            sendComment()\r\n        } else {\r\n            setState({\r\n                ...state,\r\n                [event.target.name]: event.target.value,\r\n            })\r\n        }\r\n    }\r\n\r\n    const handleSave = () => {\r\n        let {\r\n            id,\r\n            title,\r\n            coverImage,\r\n            cardMembers = [],\r\n            labels = [],\r\n            description,\r\n            attachments = [],\r\n            comments = [],\r\n            listId,\r\n            boardId,\r\n        } = state\r\n\r\n        let card = {\r\n            id,\r\n            title,\r\n            coverImage,\r\n            members: cardMembers.map((member) => member.id),\r\n            labels: labels.map((item) => item.id),\r\n            description,\r\n            attachments,\r\n            comments,\r\n        }\r\n\r\n        dispatch(updateCardInList(boardId, listId, card))\r\n        closeDialog()\r\n    }\r\n\r\n    const sendComment = () => {\r\n        let { comments = [], commentText } = state\r\n\r\n        if (commentText.trim() !== '') {\r\n            comments.push({\r\n                id: generateRandomId(),\r\n                uid: user.userId,\r\n                text: commentText.trim(),\r\n                time: new Date(),\r\n            })\r\n            commentText = ''\r\n        }\r\n        setState({\r\n            ...state,\r\n            comments,\r\n            commentText,\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        let {\r\n            members = [], //members in card\r\n            labels = [],\r\n        } = card\r\n\r\n        let cardMembers = members.map((boardMemberId) =>\r\n            memberList.find((member) => member.id === boardMemberId)\r\n        )\r\n        let modifiedLabelList = labels.map((labelId) =>\r\n            labelList.find((label) => label.id === labelId)\r\n        )\r\n        let boardMembers = board.members.map((boardMember) =>\r\n            memberList.find((member) => member.id === boardMember.id)\r\n        )\r\n\r\n        setState((state) => ({\r\n            ...state,\r\n            ...card,\r\n            boardId: board.id,\r\n            cardMembers,\r\n            boardMembers,\r\n            labels: [...modifiedLabelList],\r\n        }))\r\n    }, [card, labelList, memberList, board.id, board.members])\r\n\r\n    let {\r\n        title,\r\n        cardMembers = [],\r\n        boardMembers = [],\r\n        labels = [],\r\n        description,\r\n        attachments = [],\r\n        comments = [],\r\n        commentText,\r\n    } = state\r\n\r\n    const { palette } = useTheme()\r\n    const textMuted = palette.text.secondary\r\n    const textPrimary = palette.primary.main\r\n    const bgPrimary = palette.primary.main\r\n    const bgLightGrey = 'rgba(0, 0, 0, 0.01)'\r\n\r\n    return (\r\n        <Dialog\r\n            onClose={closeDialog}\r\n            open={open}\r\n            fullScreen={isMobile}\r\n            fullWidth={true}\r\n            scroll=\"body\"\r\n        >\r\n            <div className=\"scrum-board\">\r\n                <ContentBox>\r\n                    <FlexBox>\r\n                        <FlexBox flexGrow={1}>\r\n                            <Icon sx={{ color: textMuted }}>assignment</Icon>\r\n                            <StyledInput\r\n                                type=\"text\"\r\n                                autoFocus\r\n                                name=\"title\"\r\n                                onChange={handleChange}\r\n                                value={title}\r\n                            />\r\n                        </FlexBox>\r\n                        <IconButton size=\"small\" onClick={closeDialog}>\r\n                            <Icon>clear</Icon>\r\n                        </IconButton>\r\n                    </FlexBox>\r\n\r\n                    <Box ml={5}>\r\n                        <Paragraph\r\n                            sx={{\r\n                                mb: 2,\r\n                                fontSize: '0.8125rem',\r\n                                color: textMuted,\r\n                            }}\r\n                        >\r\n                            Tech Startup Board Hot Backlog\r\n                        </Paragraph>\r\n\r\n                        <JustifyBox mb={2}>\r\n                            <div>\r\n                                <Heading sx={{ mb: 1 }}>Card Members</Heading>\r\n                                <Box\r\n                                    ml=\"-0.875rem\"\r\n                                    display=\"flex\"\r\n                                    position=\"relative\"\r\n                                >\r\n                                    {cardMembers.map((member) => (\r\n                                        <StyledAvatar\r\n                                            key={member.id}\r\n                                            src={member.avatar}\r\n                                        />\r\n                                    ))}\r\n                                    <MatxMenu\r\n                                        horizontalPosition=\"center\"\r\n                                        shouldCloseOnItemClick={false}\r\n                                        menuButton={\r\n                                            <Tooltip\r\n                                                title={'Add'}\r\n                                                fontSize=\"large\"\r\n                                            >\r\n                                                <StyledAvatar\r\n                                                    sx={{\r\n                                                        ml: '-12px',\r\n                                                        cursor: 'pointer',\r\n                                                    }}\r\n                                                >\r\n                                                    +\r\n                                                </StyledAvatar>\r\n                                            </Tooltip>\r\n                                        }\r\n                                    >\r\n                                        {boardMembers.map((user) => (\r\n                                            <FormControlLabel\r\n                                                sx={{ ml: 0 }}\r\n                                                key={user.id}\r\n                                                control={\r\n                                                    <Checkbox\r\n                                                        name=\"avatar\"\r\n                                                        checked={cardMembers.some(\r\n                                                            (member) =>\r\n                                                                member.id ===\r\n                                                                user.id\r\n                                                        )}\r\n                                                        onChange={handleChange}\r\n                                                        value={user.id}\r\n                                                    />\r\n                                                }\r\n                                                label={\r\n                                                    <FlexBox>\r\n                                                        <Avatar\r\n                                                            src={user.avatar}\r\n                                                            sx={{\r\n                                                                width: 24,\r\n                                                                height: 24,\r\n                                                            }}\r\n                                                        />\r\n                                                        <Span\r\n                                                            sx={{ ml: '12px' }}\r\n                                                        >\r\n                                                            {user.name}\r\n                                                        </Span>\r\n                                                    </FlexBox>\r\n                                                }\r\n                                            />\r\n                                        ))}\r\n                                    </MatxMenu>\r\n                                </Box>\r\n                            </div>\r\n                            <div>\r\n                                <Heading sx={{ mb: 1 }}>labels</Heading>\r\n                                <div className=\"button-group\">\r\n                                    {labels.map((label) => (\r\n                                        <Button\r\n                                            key={label.id}\r\n                                            size=\"small\"\r\n                                            variant=\"contained\"\r\n                                            sx={{\r\n                                                mr: '4px',\r\n                                                color: '#fff',\r\n                                                fontSize: '0.8125rem',\r\n                                                textTransform: 'capitalize',\r\n                                            }}\r\n                                        >\r\n                                            {label.title}\r\n                                        </Button>\r\n                                    ))}\r\n                                    <MatxMenu\r\n                                        horizontalPosition=\"right\"\r\n                                        shouldCloseOnItemClick={false}\r\n                                        menuButton={\r\n                                            <Tooltip\r\n                                                title={'Add'}\r\n                                                fontSize=\"large\"\r\n                                            >\r\n                                                <Button\r\n                                                    sx={{\r\n                                                        background: bgLightGrey,\r\n                                                    }}\r\n                                                    size=\"small\"\r\n                                                >\r\n                                                    +\r\n                                                </Button>\r\n                                            </Tooltip>\r\n                                        }\r\n                                    >\r\n                                        {labelList.map((label) => (\r\n                                            <FormControlLabel\r\n                                                sx={{ ml: 0 }}\r\n                                                key={label.id}\r\n                                                control={\r\n                                                    <Checkbox\r\n                                                        checked={labels.some(\r\n                                                            (item) =>\r\n                                                                item.id ===\r\n                                                                label.id\r\n                                                        )}\r\n                                                        onChange={handleChange}\r\n                                                        value={label.id}\r\n                                                        name=\"label\"\r\n                                                    />\r\n                                                }\r\n                                                label={\r\n                                                    <FlexBox>\r\n                                                        <Box\r\n                                                            sx={{\r\n                                                                background:\r\n                                                                    bgPrimary,\r\n                                                                fontSize:\r\n                                                                    '24px',\r\n                                                                borderRadius:\r\n                                                                    '4px',\r\n                                                            }}\r\n                                                        />\r\n                                                        <Span\r\n                                                            sx={{ ml: '12px' }}\r\n                                                        >\r\n                                                            {label.title}\r\n                                                        </Span>\r\n                                                    </FlexBox>\r\n                                                }\r\n                                            />\r\n                                        ))}\r\n                                    </MatxMenu>\r\n                                </div>\r\n                            </div>\r\n                        </JustifyBox>\r\n                    </Box>\r\n                </ContentBox>\r\n\r\n                <Divider></Divider>\r\n\r\n                <StyledScrollBar>\r\n                    <ScrollContent>\r\n                        <FlexBox mb={1}>\r\n                            <Icon sx={{ color: textMuted }}>description</Icon>\r\n                            <Heading sx={{ ml: 2 }}>description</Heading>\r\n                        </FlexBox>\r\n                        <Box ml={5} mb={2} display=\"flex\">\r\n                            <TextField\r\n                                sx={{ color: textMuted }}\r\n                                onChange={handleChange}\r\n                                name=\"description\"\r\n                                value={description}\r\n                                variant=\"outlined\"\r\n                                fullWidth\r\n                                multiline\r\n                            />\r\n                        </Box>\r\n\r\n                        <JustifyBox>\r\n                            <FlexBox>\r\n                                <Icon sx={{ color: textMuted }}>\r\n                                    attach_file\r\n                                </Icon>\r\n                                <Heading sx={{ ml: 2 }}>attachments</Heading>\r\n                            </FlexBox>\r\n\r\n                            <label htmlFor=\"upload-file\">\r\n                                <Button\r\n                                    component=\"span\"\r\n                                    sx={{\r\n                                        color: textPrimary,\r\n                                        fontWeight: '500',\r\n                                        textTransform: 'uppercase',\r\n                                    }}\r\n                                >\r\n                                    + add an attachment\r\n                                </Button>\r\n                            </label>\r\n                            <input\r\n                                className=\"hidden\"\r\n                                id=\"upload-file\"\r\n                                type=\"file\"\r\n                                multiple\r\n                            />\r\n                        </JustifyBox>\r\n\r\n                        <Box ml={5} mb={2}>\r\n                            <Grid container spacing={2}>\r\n                                {attachments.map((file, id) => (\r\n                                    <Grid\r\n                                        key={id}\r\n                                        item\r\n                                        lg={6}\r\n                                        md={6}\r\n                                        sm={12}\r\n                                        xs={12}\r\n                                    >\r\n                                        <StyledCard elevation={2}>\r\n                                            <FlexBox borderRadius=\"8px\">\r\n                                                <IMG\r\n                                                    src={file.url}\r\n                                                    alt=\"cover\"\r\n                                                />\r\n                                            </FlexBox>\r\n                                            <Box ml={2}>\r\n                                                <Heading\r\n                                                    sx={{\r\n                                                        textTransform:\r\n                                                            'capitalize',\r\n                                                    }}\r\n                                                >\r\n                                                    {file.name}\r\n                                                </Heading>\r\n                                                <Small\r\n                                                    sx={{\r\n                                                        color: textMuted,\r\n                                                        fontSize: '0.8125rem',\r\n                                                        textTransform:\r\n                                                            'capitalize',\r\n                                                    }}\r\n                                                >\r\n                                                    {file.size}\r\n                                                </Small>\r\n                                            </Box>\r\n                                            <MatxMenu\r\n                                                horizontalPosition=\"center\"\r\n                                                menuButton={\r\n                                                    <IconButton sx={{ ml: 2 }}>\r\n                                                        <Icon>more_vert</Icon>\r\n                                                    </IconButton>\r\n                                                }\r\n                                            >\r\n                                                <StyledItem\r\n                                                    onClick={() =>\r\n                                                        makeCoverPhoto(file.url)\r\n                                                    }\r\n                                                >\r\n                                                    <Icon> insert_photo </Icon>\r\n                                                    <Span sx={{ pl: 2 }}>\r\n                                                        Make Cover\r\n                                                    </Span>\r\n                                                </StyledItem>\r\n                                                <StyledItem\r\n                                                    onClick={() =>\r\n                                                        removeAttachments(id)\r\n                                                    }\r\n                                                >\r\n                                                    <Icon> delete </Icon>\r\n                                                    <Span sx={{ pl: 2 }}>\r\n                                                        Remove\r\n                                                    </Span>\r\n                                                </StyledItem>\r\n                                            </MatxMenu>\r\n                                        </StyledCard>\r\n                                    </Grid>\r\n                                ))}\r\n                            </Grid>\r\n                        </Box>\r\n                    </ScrollContent>\r\n\r\n                    <Divider sx={{ my: 2 }} />\r\n\r\n                    <ContentBox pt={0}>\r\n                        <FlexBox mb={1}>\r\n                            <Icon sx={{ color: textMuted }}>message</Icon>\r\n                            <Heading sx={{ ml: 2 }}>comments</Heading>\r\n                        </FlexBox>\r\n                        <Box ml={5} className=\"comments\">\r\n                            {comments.map((comment) => {\r\n                                let user = memberList.find(\r\n                                    (user) => user.id === comment.uid\r\n                                )\r\n                                return (\r\n                                    <Box mb={2} key={comment.id}>\r\n                                        <FlexBox mb={1}>\r\n                                            <StyledAvatar\r\n                                                src={user.avatar}\r\n                                                sizes={36}\r\n                                            />\r\n                                            <Box ml=\"12px\">\r\n                                                <H6>{user.name}</H6>\r\n                                                <small>\r\n                                                    {getTimeDifference(\r\n                                                        new Date(comment.time)\r\n                                                    )}{' '}\r\n                                                    ago\r\n                                                </small>\r\n                                            </Box>\r\n                                        </FlexBox>\r\n                                        <Paragraph sx={{ color: textMuted }}>\r\n                                            {comment.text}\r\n                                        </Paragraph>\r\n                                    </Box>\r\n                                )\r\n                            })}\r\n\r\n                            <FlexBox mb={2}>\r\n                                <StyledAvatar src={user.photoURL} sizes={36} />\r\n                                <Box display=\"flex\" flexGrow={1}>\r\n                                    <TextField\r\n                                        onChange={handleChange}\r\n                                        onKeyDown={handleChange}\r\n                                        variant=\"outlined\"\r\n                                        name=\"commentText\"\r\n                                        value={commentText || ''}\r\n                                        fullWidth\r\n                                        inputProps={{\r\n                                            style: {\r\n                                                padding: '10px',\r\n                                            },\r\n                                        }}\r\n                                        sx={{ m: '12px', color: textMuted }}\r\n                                    />\r\n                                </Box>\r\n                                <Button onClick={sendComment}>Send</Button>\r\n                            </FlexBox>\r\n                        </Box>\r\n                    </ContentBox>\r\n                </StyledScrollBar>\r\n\r\n                <ContentBox\r\n                    pt={0}\r\n                    mb=\"12px\"\r\n                    display=\"flex\"\r\n                    justifyContent=\"flex-end\"\r\n                >\r\n                    <Button sx={{ mr: '12px' }} onClick={closeDialog}>\r\n                        Cancel\r\n                    </Button>\r\n                    <Button\r\n                        onClick={handleSave}\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                    >\r\n                        Save\r\n                    </Button>\r\n                </ContentBox>\r\n            </div>\r\n        </Dialog>\r\n    )\r\n}\r\n\r\nexport default CardEditorDialog\r\n"]},"metadata":{},"sourceType":"module"}