{"ast":null,"code":"import _slicedToArray from \"/Users/zhaoyuliu/Desktop/matx-basic/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\n\nvar _jsxFileName = \"/Users/zhaoyuliu/Desktop/matx-basic/src/app/views/chat-box/ChatContainer.jsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { Fragment } from 'react';\nimport { IconButton, Icon, Divider, Fab, TextField, MenuItem, Hidden } from '@mui/material';\nimport Scrollbar from 'react-perfect-scrollbar';\nimport EmptyMessage from './EmptyMessage';\nimport { getTimeDifference } from 'app/utils/utils';\nimport shortid from 'shortid';\nimport { Box, styled, useTheme } from '@mui/system';\nimport { useState } from 'react';\nimport { Paragraph, Small, Span } from 'app/components/Typography';\nimport ChatAvatar from 'app/components/ChatAvatar/ChatAvatar';\nimport MatxMenu from 'app/components/MatxMenu/MatxMenu';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar ChatRoot = styled('div')(function () {\n  return {\n    height: 450,\n    position: 'relative',\n    display: 'flex',\n    flexDirection: 'column',\n    background: 'rgba(0, 0, 0, 0.05)'\n  };\n});\nvar LeftContent = styled('div')(function (_ref) {\n  var theme = _ref.theme;\n  return {\n    padding: '4px',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    background: theme.palette.primary.main\n  };\n});\nvar UserName = styled('h5')(function () {\n  return {\n    color: '#fff',\n    fontSize: '18px',\n    fontWeight: '500',\n    whiteSpace: 'pre',\n    marginLeft: '16px'\n  };\n});\nvar UserStatus = styled('div')(function (_ref2) {\n  var theme = _ref2.theme,\n      userId = _ref2.userId,\n      contactId = _ref2.contactId;\n  return {\n    padding: '8px 16px',\n    marginBottom: '8px',\n    borderRadius: '4px',\n    color: userId === contactId && '#fff',\n    background: userId === contactId ? theme.palette.primary.main : theme.palette.background.paper\n  };\n});\nvar StyledItem = styled(MenuItem)(function (_ref3) {\n  var theme = _ref3.theme;\n  return {\n    display: 'flex',\n    alignItems: 'center',\n    '& .icon': {\n      marginRight: '16px'\n    }\n  };\n});\nvar ScrollBox = styled(Scrollbar)(function (_ref4) {\n  var theme = _ref4.theme;\n  return {\n    flexGrow: 1,\n    position: 'relative'\n  };\n});\nvar MessageBox = styled('div')(function (_ref5) {\n  var theme = _ref5.theme;\n  return {\n    height: '100%',\n    flexGrow: 1,\n    display: 'flex',\n    alignItems: 'center',\n    flexDirection: 'column',\n    justifyContent: 'center'\n  };\n});\nvar Message = styled('div')(function (_ref6) {\n  var theme = _ref6.theme;\n  return {\n    display: 'flex',\n    alignItems: 'flex-start',\n    padding: '12px 16px'\n  };\n});\n\nvar ChatContainer = function ChatContainer(_ref7) {\n  _s();\n\n  var currentUserId = _ref7.id,\n      toggleSidenav = _ref7.toggleSidenav,\n      currentChatRoom = _ref7.currentChatRoom,\n      opponentUser = _ref7.opponentUser,\n      _ref7$messageList = _ref7.messageList,\n      messageList = _ref7$messageList === void 0 ? [] : _ref7$messageList,\n      handleMessageSend = _ref7.handleMessageSend;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      message = _useState2[0],\n      setMessage = _useState2[1];\n\n  var sendMessageOnEnter = function sendMessageOnEnter(event) {\n    if (event.key === 'Enter' && !event.shiftKey) {\n      var tempMessage = message.trim();\n      if (tempMessage !== '') handleMessageSend(tempMessage);\n      setMessage('');\n    }\n  };\n\n  var theme = useTheme();\n  var secondary = theme.palette.text.secondary;\n  return /*#__PURE__*/_jsxDEV(ChatRoot, {\n    children: [/*#__PURE__*/_jsxDEV(LeftContent, {\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        display: \"flex\",\n        alignItems: \"center\",\n        children: [/*#__PURE__*/_jsxDEV(Hidden, {\n          mdUp: true,\n          children: /*#__PURE__*/_jsxDEV(IconButton, {\n            size: \"large\",\n            onClick: toggleSidenav,\n            children: /*#__PURE__*/_jsxDEV(Icon, {\n              sx: {\n                color: '#fff'\n              },\n              children: \"short_text\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 29\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 25\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 21\n        }, _this), /*#__PURE__*/_jsxDEV(Hidden, {\n          smDown: true,\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            pl: \"12px\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 25\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 21\n        }, _this), opponentUser && /*#__PURE__*/_jsxDEV(Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(ChatAvatar, {\n            src: opponentUser.avatar,\n            status: opponentUser.status\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 29\n          }, _this), /*#__PURE__*/_jsxDEV(UserName, {\n            children: opponentUser.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 29\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 25\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(MatxMenu, {\n        menuButton: /*#__PURE__*/_jsxDEV(IconButton, {\n          size: \"large\",\n          children: /*#__PURE__*/_jsxDEV(Icon, {\n            sx: {\n              color: '#fff'\n            },\n            children: \"more_vert\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 29\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 25\n        }, _this),\n        children: [/*#__PURE__*/_jsxDEV(StyledItem, {\n          children: [/*#__PURE__*/_jsxDEV(Icon, {\n            className: \"icon\",\n            children: \"account_circle\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 25\n          }, _this), \" Contact\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 21\n        }, _this), /*#__PURE__*/_jsxDEV(StyledItem, {\n          children: [/*#__PURE__*/_jsxDEV(Icon, {\n            className: \"icon\",\n            children: \"volume_mute\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 25\n          }, _this), \" Mute\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 21\n        }, _this), /*#__PURE__*/_jsxDEV(StyledItem, {\n          children: [/*#__PURE__*/_jsxDEV(Icon, {\n            className: \"icon\",\n            children: \"delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 25\n          }, _this), \" Clear Chat\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 21\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 17\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 13\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(ChatContainer, \"BShMsy5+JkwSl21k/Q/lgEjhMxY=\", false, function () {\n  return [useTheme];\n});\n\n_c = ChatContainer;\nexport default ChatContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChatContainer\");","map":{"version":3,"sources":["/Users/zhaoyuliu/Desktop/matx-basic/src/app/views/chat-box/ChatContainer.jsx"],"names":["React","Fragment","IconButton","Icon","Divider","Fab","TextField","MenuItem","Hidden","Scrollbar","EmptyMessage","getTimeDifference","shortid","Box","styled","useTheme","useState","Paragraph","Small","Span","ChatAvatar","MatxMenu","ChatRoot","height","position","display","flexDirection","background","LeftContent","theme","padding","alignItems","justifyContent","palette","primary","main","UserName","color","fontSize","fontWeight","whiteSpace","marginLeft","UserStatus","userId","contactId","marginBottom","borderRadius","paper","StyledItem","marginRight","ScrollBox","flexGrow","MessageBox","Message","ChatContainer","currentUserId","id","toggleSidenav","currentChatRoom","opponentUser","messageList","handleMessageSend","message","setMessage","sendMessageOnEnter","event","key","shiftKey","tempMessage","trim","secondary","text","avatar","status","name"],"mappings":"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","sourcesContent":["import React, { Fragment } from 'react'\r\nimport {\r\n    IconButton,\r\n    Icon,\r\n    Divider,\r\n    Fab,\r\n    TextField,\r\n    MenuItem,\r\n    Hidden,\r\n} from '@mui/material'\r\nimport Scrollbar from 'react-perfect-scrollbar'\r\nimport EmptyMessage from './EmptyMessage'\r\nimport { getTimeDifference } from 'app/utils/utils'\r\nimport shortid from 'shortid'\r\nimport { Box, styled, useTheme } from '@mui/system'\r\nimport { useState } from 'react'\r\nimport { Paragraph, Small, Span } from 'app/components/Typography'\r\nimport ChatAvatar from 'app/components/ChatAvatar/ChatAvatar'\r\nimport MatxMenu from 'app/components/MatxMenu/MatxMenu'\r\n\r\nconst ChatRoot = styled('div')(() => ({\r\n    height: 450,\r\n    position: 'relative',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    background: 'rgba(0, 0, 0, 0.05)',\r\n}))\r\n\r\nconst LeftContent = styled('div')(({ theme }) => ({\r\n    padding: '4px',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'space-between',\r\n    background: theme.palette.primary.main,\r\n}))\r\n\r\nconst UserName = styled('h5')(() => ({\r\n    color: '#fff',\r\n    fontSize: '18px',\r\n    fontWeight: '500',\r\n    whiteSpace: 'pre',\r\n    marginLeft: '16px',\r\n}))\r\n\r\nconst UserStatus = styled('div')(({ theme, userId, contactId }) => ({\r\n    padding: '8px 16px',\r\n    marginBottom: '8px',\r\n    borderRadius: '4px',\r\n    color: userId === contactId && '#fff',\r\n    background:\r\n        userId === contactId\r\n            ? theme.palette.primary.main\r\n            : theme.palette.background.paper,\r\n}))\r\n\r\nconst StyledItem = styled(MenuItem)(({ theme }) => ({\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    '& .icon': {\r\n        marginRight: '16px',\r\n    },\r\n}))\r\n\r\nconst ScrollBox = styled(Scrollbar)(({ theme }) => ({\r\n    flexGrow: 1,\r\n    position: 'relative',\r\n}))\r\n\r\nconst MessageBox = styled('div')(({ theme }) => ({\r\n    height: '100%',\r\n    flexGrow: 1,\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    flexDirection: 'column',\r\n    justifyContent: 'center',\r\n}))\r\n\r\nconst Message = styled('div')(({ theme }) => ({\r\n    display: 'flex',\r\n    alignItems: 'flex-start',\r\n    padding: '12px 16px',\r\n}))\r\n\r\nconst ChatContainer = ({\r\n    id: currentUserId,\r\n    toggleSidenav,\r\n    currentChatRoom,\r\n    opponentUser,\r\n    messageList = [],\r\n    handleMessageSend,\r\n}) => {\r\n    const [message, setMessage] = useState('')\r\n    const sendMessageOnEnter = (event) => {\r\n        if (event.key === 'Enter' && !event.shiftKey)\r\n        {\r\n            let tempMessage = message.trim()\r\n            if (tempMessage !== '') handleMessageSend(tempMessage)\r\n            setMessage('')\r\n        }\r\n    }\r\n    const theme = useTheme()\r\n    const secondary = theme.palette.text.secondary\r\n\r\n    return (\r\n        <ChatRoot>\r\n            <LeftContent>\r\n                <Box display=\"flex\" alignItems=\"center\">\r\n                    <Hidden mdUp>\r\n                        <IconButton size=\"large\" onClick={toggleSidenav}>\r\n                            <Icon sx={{ color: '#fff' }}>short_text</Icon>\r\n                        </IconButton>\r\n                    </Hidden>\r\n\r\n                    <Hidden smDown>\r\n                        <Box pl=\"12px\" />\r\n                    </Hidden>\r\n\r\n                    {opponentUser && (\r\n                        <Fragment>\r\n                            <ChatAvatar\r\n                                src={opponentUser.avatar}\r\n                                status={opponentUser.status}\r\n                            />\r\n                            <UserName>{opponentUser.name}</UserName>\r\n                        </Fragment>\r\n                    )}\r\n                </Box>\r\n                <MatxMenu\r\n                    menuButton={\r\n                        <IconButton size=\"large\">\r\n                            <Icon sx={{ color: '#fff' }}>more_vert</Icon>\r\n                        </IconButton>\r\n                    }\r\n                >\r\n                    <StyledItem>\r\n                        <Icon className=\"icon\">account_circle</Icon> Contact\r\n                    </StyledItem>\r\n                    <StyledItem>\r\n                        <Icon className=\"icon\">volume_mute</Icon> Mute\r\n                    </StyledItem>\r\n                    <StyledItem>\r\n                        <Icon className=\"icon\">delete</Icon> Clear Chat\r\n                    </StyledItem>\r\n                </MatxMenu>\r\n            </LeftContent>\r\n\r\n            {/* <ScrollBox id=\"chat-message-list\">\r\n                {currentChatRoom === '' && (\r\n                    <MessageBox>\r\n                        <EmptyMessage />\r\n                        <p>Select a contact</p>\r\n                    </MessageBox>\r\n                )}\r\n                {messageList.map((message, index) => (\r\n                    <Message key={shortid.generate()}>\r\n                        <ChatAvatar\r\n                            src={message.avatar}\r\n                            status={message.status}\r\n                        />\r\n                        <Box ml={2}>\r\n                            <Paragraph sx={{ m: 0, mb: 1, color: secondary }}>\r\n                                {message.name}\r\n                            </Paragraph>\r\n                            <UserStatus\r\n                                userId={currentUserId}\r\n                                contactId={message.contactId}\r\n                            >\r\n                                <Span\r\n                                    sx={{\r\n                                        whiteSpace: 'pre-wrap',\r\n                                        wordBreak: 'break-word',\r\n                                    }}\r\n                                >\r\n                                    {message.text}\r\n                                </Span>\r\n                            </UserStatus>\r\n                            <Small sx={{ m: 0, color: secondary }}>\r\n                                {getTimeDifference(new Date(message.time))} ago\r\n                            </Small>\r\n                        </Box>\r\n                    </Message>\r\n                ))}\r\n            </ScrollBox> */}\r\n\r\n            <Divider />\r\n\r\n            {/* {currentChatRoom !== '' && (\r\n                <Box px={2} py={1} display=\"flex\" alignItems=\"center\">\r\n                    <TextField\r\n                        label=\"Type your message here*\"\r\n                        value={message}\r\n                        onChange={(e) => setMessage(e.target.value)}\r\n                        onKeyUp={sendMessageOnEnter}\r\n                        fullWidth\r\n                        multiline={true}\r\n                        rows={1}\r\n                        variant=\"outlined\"\r\n                    />\r\n                    <div>\r\n                        <Fab\r\n                            onClick={() => {\r\n                                if (message.trim() !== '')\r\n                                    handleMessageSend(message)\r\n                                setMessage('')\r\n                            }}\r\n                            color=\"primary\"\r\n                            sx={{ ml: 2 }}\r\n                        >\r\n                            <Icon>send</Icon>\r\n                        </Fab>\r\n                    </div>\r\n                </Box>\r\n            )} */}\r\n        </ChatRoot>\r\n    )\r\n}\r\n\r\nexport default ChatContainer\r\n"]},"metadata":{},"sourceType":"module"}