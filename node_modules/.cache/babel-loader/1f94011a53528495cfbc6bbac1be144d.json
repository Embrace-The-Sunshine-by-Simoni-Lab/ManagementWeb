{"ast":null,"code":"import _objectSpread from \"/Users/zhaoyuliu/Desktop/matx-basic/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _toConsumableArray from \"/Users/zhaoyuliu/Desktop/matx-basic/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _asyncToGenerator from \"/Users/zhaoyuliu/Desktop/matx-basic/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _slicedToArray from \"/Users/zhaoyuliu/Desktop/matx-basic/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _defineProperty from \"/Users/zhaoyuliu/Desktop/matx-basic/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\n\nvar _jsxFileName = \"/Users/zhaoyuliu/Desktop/matx-basic/src/app/views/todo/TodoList.jsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport _regeneratorRuntime from \"/Users/zhaoyuliu/Desktop/matx-basic/node_modules/@babel/runtime/regenerator/index.js\";\nimport { getAllTodo, updateTodoById, reorderTodoList, getAllTodoTag } from './TodoService';\nimport TodoItem from './TodoItem';\nimport { debounce } from 'lodash';\nimport { MatxMenu } from 'app/components';\nimport { Box, styled } from '@mui/system';\nimport { useNavigate } from 'react-router-dom';\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { Droppable, Draggable, DragDropContext } from 'react-beautiful-dnd';\nimport { Icon, IconButton, MenuItem, Button, Card } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar StyledCard = styled(Card)(function (_ref) {\n  var theme = _ref.theme;\n  return _defineProperty({\n    margin: '30px',\n    position: 'relative'\n  }, theme.breakpoints.down('sm'), {\n    margin: '16px'\n  });\n});\nvar ContentBox = styled(Box)(function () {\n  return {\n    paddingTop: '8px',\n    paddingBottom: '8px',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    background: 'rgba(0, 0, 0, 0.01)'\n  };\n});\n\nvar TodoList = function TodoList(_ref3) {\n  _s();\n\n  var query = _ref3.query;\n\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      isAlive = _useState2[0],\n      setIsAlive = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      todoList = _useState4[0],\n      setTodoList = _useState4[1];\n\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      tagList = _useState6[0],\n      setTagList = _useState6[1];\n\n  var _useState7 = useState([]),\n      _useState8 = _slicedToArray(_useState7, 2),\n      filteredTodoList = _useState8[0],\n      setFilteredTodoList = _useState8[1];\n\n  console.log(filteredTodoList);\n  var navigate = useNavigate();\n  var getAllTodoAndTagList = useCallback( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n    var _yield$Promise$all, _yield$Promise$all2, todoList, tagList;\n\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return Promise.all([getAllTodo(), getAllTodoTag()]);\n\n          case 2:\n            _yield$Promise$all = _context.sent;\n            _yield$Promise$all2 = _slicedToArray(_yield$Promise$all, 2);\n            todoList = _yield$Promise$all2[0].data;\n            tagList = _yield$Promise$all2[1].data;\n\n            if (isAlive) {\n              setFilteredTodoList(todoList);\n              setTodoList(todoList);\n              setTagList(tagList);\n            }\n\n          case 7:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  })), [isAlive]); // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  var search = useCallback(debounce(function (query) {\n    query = query.trim().toLowerCase();\n\n    if (query !== '') {\n      var _filteredTodoList = todoList.filter(function (todo) {\n        return todo.title.toLowerCase().match(query) || todo.note.toLowerCase().match(query);\n      });\n\n      setFilteredTodoList(_toConsumableArray(_filteredTodoList));\n    } else {\n      setFilteredTodoList(todoList);\n    }\n  }, 250), [todoList]);\n  useEffect(function () {\n    getAllTodoAndTagList();\n    return function () {\n      return setIsAlive(false);\n    };\n  }, [getAllTodoAndTagList]);\n  useEffect(function () {\n    search(query);\n  }, [query, search]);\n\n  var updateTodo = /*#__PURE__*/function () {\n    var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(todo) {\n      var _yield$updateTodoById, updatedTodo, list1, list2;\n\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return updateTodoById(todo);\n\n            case 2:\n              _yield$updateTodoById = _context2.sent;\n              updatedTodo = _yield$updateTodoById.data;\n\n              if (isAlive) {\n                list1 = todoList.map(function (item) {\n                  if (item.id === updatedTodo.id) return updatedTodo;\n                  return item;\n                });\n                list2 = filteredTodoList.map(function (item) {\n                  if (item.id === updatedTodo.id) return updatedTodo;\n                  return item;\n                });\n                setTodoList(_toConsumableArray(list1));\n                setFilteredTodoList(_toConsumableArray(list2));\n              }\n\n            case 5:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function updateTodo(_x) {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n\n  var reorder = function reorder(list, startIndex, endIndex) {\n    var result = Array.from(list);\n\n    var _result$splice = result.splice(startIndex, 1),\n        _result$splice2 = _slicedToArray(_result$splice, 1),\n        removed = _result$splice2[0];\n\n    result.splice(endIndex, 0, removed);\n    return result;\n  };\n\n  var handleDragEnd = /*#__PURE__*/function () {\n    var _ref6 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(result) {\n      var todoList, _yield$reorderTodoLis, data;\n\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              if (result.destination) {\n                _context3.next = 2;\n                break;\n              }\n\n              return _context3.abrupt(\"return\");\n\n            case 2:\n              todoList = reorder(filteredTodoList, result.source.index, result.destination.index);\n              _context3.next = 5;\n              return reorderTodoList(todoList);\n\n            case 5:\n              _yield$reorderTodoLis = _context3.sent;\n              data = _yield$reorderTodoLis.data;\n\n              if (isAlive) {\n                setFilteredTodoList(data);\n                setTodoList(data);\n              }\n\n            case 8:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    return function handleDragEnd(_x2) {\n      return _ref6.apply(this, arguments);\n    };\n  }();\n\n  var filterTodoListByProperty = function filterTodoListByProperty(queryField, queryValue) {\n    if (queryField !== 'all') {\n      var list = todoList.filter(function (todo) {\n        return todo[queryField] === queryValue;\n      });\n      setFilteredTodoList(_toConsumableArray(list));\n    } else {\n      setFilteredTodoList(_toConsumableArray(todoList));\n    }\n  };\n\n  var filterTodoListByTag = function filterTodoListByTag(tagId) {\n    if (tagId !== 'all') {\n      var list = todoList.filter(function (todo) {\n        return todo.tag.includes(tagId);\n      });\n      setFilteredTodoList(_toConsumableArray(list));\n    } else {\n      setFilteredTodoList(_toConsumableArray(todoList));\n    }\n  }; // New Drag and Drop data logic\n\n\n  var _useState9 = useState([]),\n      _useState10 = _slicedToArray(_useState9, 2),\n      dragAbleItem = _useState10[0],\n      setDragAbleItem = _useState10[1];\n\n  var getItems = function getItems(count) {\n    return count.map(function (k, i) {\n      return {\n        done: k.done,\n        dueDate: k.dueDate,\n        id: \"\".concat(k.id),\n        important: k.important,\n        note: k.note,\n        read: k.read,\n        selected: k.selected,\n        starred: k.starred,\n        startDate: k.startDate,\n        tag: k.tag,\n        title: k.title\n      };\n    });\n  };\n\n  useEffect(function () {\n    if (filteredTodoList.length > 0) {\n      setDragAbleItem(getItems(filteredTodoList));\n    }\n  }, [filteredTodoList]);\n\n  var onDragEnd = function onDragEnd(result) {\n    if (!result.destination) {\n      return;\n    }\n\n    var tempItems = reorder(dragAbleItem, result.source.index, result.destination.index);\n    setDragAbleItem(tempItems);\n  };\n\n  return /*#__PURE__*/_jsxDEV(StyledCard, {\n    className: \"todo\",\n    children: [/*#__PURE__*/_jsxDEV(ContentBox, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(MatxMenu, {\n          menuButton: /*#__PURE__*/_jsxDEV(IconButton, {\n            size: \"large\",\n            children: /*#__PURE__*/_jsxDEV(Icon, {\n              children: \"arrow_drop_down\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 33\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 29\n          }, _this),\n          children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n            onClick: function onClick() {\n              return filterTodoListByProperty('all');\n            },\n            children: \"All\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 25\n          }, _this), /*#__PURE__*/_jsxDEV(MenuItem, {\n            onClick: function onClick() {\n              return filterTodoListByProperty('read', true);\n            },\n            children: \"Read\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 25\n          }, _this), /*#__PURE__*/_jsxDEV(MenuItem, {\n            onClick: function onClick() {\n              return filterTodoListByProperty('read', false);\n            },\n            children: \"Unread\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 25\n          }, _this), /*#__PURE__*/_jsxDEV(MenuItem, {\n            onClick: function onClick() {\n              return filterTodoListByProperty('done', true);\n            },\n            children: \"Done\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 25\n          }, _this), /*#__PURE__*/_jsxDEV(MenuItem, {\n            onClick: function onClick() {\n              return filterTodoListByProperty('done', false);\n            },\n            children: \"Undone\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 25\n          }, _this), /*#__PURE__*/_jsxDEV(MenuItem, {\n            onClick: function onClick() {\n              return filterTodoListByProperty('important', true);\n            },\n            children: \"Important\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 25\n          }, _this), /*#__PURE__*/_jsxDEV(MenuItem, {\n            onClick: function onClick() {\n              return filterTodoListByProperty('important', false);\n            },\n            children: \"Unimportant\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 25\n          }, _this), /*#__PURE__*/_jsxDEV(MenuItem, {\n            onClick: function onClick() {\n              return filterTodoListByProperty('starred', true);\n            },\n            children: \"Starred\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 25\n          }, _this), /*#__PURE__*/_jsxDEV(MenuItem, {\n            onClick: function onClick() {\n              return filterTodoListByProperty('starred', false);\n            },\n            children: \"Unstarred\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 25\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 21\n        }, _this), /*#__PURE__*/_jsxDEV(MatxMenu, {\n          menuButton: /*#__PURE__*/_jsxDEV(IconButton, {\n            size: \"large\",\n            children: /*#__PURE__*/_jsxDEV(Icon, {\n              children: \"label\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 255,\n              columnNumber: 33\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 29\n          }, _this),\n          children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n            sx: {\n              textTransform: 'capitalize'\n            },\n            onClick: function onClick() {\n              return filterTodoListByTag('all');\n            },\n            children: \"all\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 25\n          }, _this), tagList.map(function (tag) {\n            return /*#__PURE__*/_jsxDEV(MenuItem, {\n              sx: {\n                textTransform: 'capitalize'\n              },\n              onClick: function onClick() {\n                return filterTodoListByTag(tag.id);\n              },\n              children: tag.name\n            }, tag.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 266,\n              columnNumber: 29\n            }, _this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 21\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(Box, {\n        pr: 2,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          onClick: function onClick() {\n            return navigate('/todo/list/add');\n          },\n          children: \"Create Todo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 21\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 17\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"todo-list\",\n      children: [/*#__PURE__*/_jsxDEV(DragDropContext, {\n        onDragEnd: handleDragEnd,\n        children: /*#__PURE__*/_jsxDEV(Droppable, {\n          droppableId: \"droppable\",\n          children: function children(provided, snapshot) {\n            return /*#__PURE__*/_jsxDEV(\"div\", _objectSpread(_objectSpread({}, provided.droppableProps), {}, {\n              ref: provided.innerRef,\n              children: [filteredTodoList.map(function (todo, index) {\n                return /*#__PURE__*/_jsxDEV(Draggable, {\n                  draggableId: parseFloat(todo.id),\n                  index: index,\n                  children: function children(provided, snapshot) {\n                    return /*#__PURE__*/_jsxDEV(\"div\", _objectSpread(_objectSpread(_objectSpread({\n                      ref: provided.innerRef\n                    }, provided.draggableProps), provided.dragHandleProps), {}, {\n                      style: provided.draggableProps.style,\n                      children: /*#__PURE__*/_jsxDEV(TodoItem, {\n                        tagList: tagList,\n                        updateTodo: updateTodo,\n                        todo: todo\n                      }, index, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 312,\n                        columnNumber: 49\n                      }, _this)\n                    }), void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 303,\n                      columnNumber: 45\n                    }, _this);\n                  }\n                }, todo.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 297,\n                  columnNumber: 37\n                }, _this);\n              }), provided.placeholder]\n            }), void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 292,\n              columnNumber: 29\n            }, _this);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 21\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"New Drag and Drop Start From Here for testing\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 330,\n          columnNumber: 21\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 329,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(DragDropContext, {\n        onDragEnd: onDragEnd,\n        children: /*#__PURE__*/_jsxDEV(Droppable, {\n          droppableId: \"droppable\",\n          children: function children(provided, snapshot) {\n            return /*#__PURE__*/_jsxDEV(\"div\", _objectSpread(_objectSpread({}, provided.droppableProps), {}, {\n              ref: provided.innerRef,\n              children: [dragAbleItem.map(function (item, index) {\n                return /*#__PURE__*/_jsxDEV(Draggable, {\n                  draggableId: item.id,\n                  index: index,\n                  children: function children(provided, snapshot) {\n                    return /*#__PURE__*/_jsxDEV(\"div\", _objectSpread(_objectSpread(_objectSpread({\n                      ref: provided.innerRef\n                    }, provided.draggableProps), provided.dragHandleProps), {}, {\n                      children: /*#__PURE__*/_jsxDEV(TodoItem, {\n                        tagList: tagList,\n                        updateTodo: updateTodo,\n                        todo: item\n                      }, index, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 352,\n                        columnNumber: 49\n                      }, _this)\n                    }), void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 347,\n                      columnNumber: 45\n                    }, _this);\n                  }\n                }, item.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 341,\n                  columnNumber: 37\n                }, _this);\n              }), provided.placeholder]\n            }), void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 336,\n              columnNumber: 29\n            }, _this);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 334,\n          columnNumber: 21\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 333,\n        columnNumber: 17\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 13\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 180,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(TodoList, \"NGfGik9I6+tPdjdmqRZ8sX/eV1I=\", false, function () {\n  return [useNavigate];\n});\n\n_c = TodoList;\nexport default TodoList;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"sources":["/Users/zhaoyuliu/Desktop/matx-basic/src/app/views/todo/TodoList.jsx"],"names":["getAllTodo","updateTodoById","reorderTodoList","getAllTodoTag","TodoItem","debounce","MatxMenu","Box","styled","useNavigate","React","useState","useEffect","useCallback","Droppable","Draggable","DragDropContext","Icon","IconButton","MenuItem","Button","Card","StyledCard","theme","margin","position","breakpoints","down","ContentBox","paddingTop","paddingBottom","display","alignItems","justifyContent","background","TodoList","query","isAlive","setIsAlive","todoList","setTodoList","tagList","setTagList","filteredTodoList","setFilteredTodoList","console","log","navigate","getAllTodoAndTagList","Promise","all","data","search","trim","toLowerCase","filter","todo","title","match","note","updateTodo","updatedTodo","list1","map","item","id","list2","reorder","list","startIndex","endIndex","result","Array","from","splice","removed","handleDragEnd","destination","source","index","filterTodoListByProperty","queryField","queryValue","filterTodoListByTag","tagId","tag","includes","dragAbleItem","setDragAbleItem","getItems","count","k","i","done","dueDate","important","read","selected","starred","startDate","length","onDragEnd","tempItems","textTransform","name","provided","snapshot","droppableProps","innerRef","parseFloat","draggableProps","dragHandleProps","style","placeholder"],"mappings":"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","sourcesContent":["import {\n    getAllTodo,\n    updateTodoById,\n    reorderTodoList,\n    getAllTodoTag,\n} from './TodoService'\nimport TodoItem from './TodoItem'\nimport { debounce } from 'lodash'\nimport { MatxMenu } from 'app/components'\nimport { Box, styled } from '@mui/system'\nimport { useNavigate } from 'react-router-dom'\nimport React, { useState, useEffect, useCallback } from 'react'\nimport { Droppable, Draggable, DragDropContext } from 'react-beautiful-dnd'\nimport { Icon, IconButton, MenuItem, Button, Card } from '@mui/material'\n\nconst StyledCard = styled(Card)(({ theme }) => ({\n    margin: '30px',\n    position: 'relative',\n    [theme.breakpoints.down('sm')]: {\n        margin: '16px',\n    },\n}))\n\nconst ContentBox = styled(Box)(() => ({\n    paddingTop: '8px',\n    paddingBottom: '8px',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    background: 'rgba(0, 0, 0, 0.01)',\n}))\n\nconst TodoList = ({ query }) => {\n    const [isAlive, setIsAlive] = useState(true)\n    const [todoList, setTodoList] = useState([])\n    const [tagList, setTagList] = useState([])\n    const [filteredTodoList, setFilteredTodoList] = useState([])\n    console.log(filteredTodoList)\n    const navigate = useNavigate()\n\n    const getAllTodoAndTagList = useCallback(async () => {\n        let [{ data: todoList }, { data: tagList }] = await Promise.all([\n            getAllTodo(),\n            getAllTodoTag(),\n        ])\n        if (isAlive) {\n            setFilteredTodoList(todoList)\n            setTodoList(todoList)\n            setTagList(tagList)\n        }\n    }, [isAlive])\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    const search = useCallback(\n        debounce((query) => {\n            query = query.trim().toLowerCase()\n            if (query !== '') {\n                let filteredTodoList = todoList.filter(\n                    (todo) =>\n                        todo.title.toLowerCase().match(query) ||\n                        todo.note.toLowerCase().match(query)\n                )\n                setFilteredTodoList([...filteredTodoList])\n            } else {\n                setFilteredTodoList(todoList)\n            }\n        }, 250),\n        [todoList]\n    )\n\n    useEffect(() => {\n        getAllTodoAndTagList()\n        return () => setIsAlive(false)\n    }, [getAllTodoAndTagList])\n\n    useEffect(() => {\n        search(query)\n    }, [query, search])\n\n    const updateTodo = async (todo) => {\n        const { data: updatedTodo } = await updateTodoById(todo)\n        if (isAlive) {\n            let list1 = todoList.map((item) => {\n                if (item.id === updatedTodo.id) return updatedTodo\n                return item\n            })\n            let list2 = filteredTodoList.map((item) => {\n                if (item.id === updatedTodo.id) return updatedTodo\n                return item\n            })\n            setTodoList([...list1])\n            setFilteredTodoList([...list2])\n        }\n    }\n\n    const reorder = (list, startIndex, endIndex) => {\n        const result = Array.from(list)\n        const [removed] = result.splice(startIndex, 1)\n        result.splice(endIndex, 0, removed)\n\n        return result\n    }\n\n    const handleDragEnd = async (result) => {\n        // dropped outside the list\n        if (!result.destination) {\n            return\n        }\n\n        let todoList = reorder(\n            filteredTodoList,\n            result.source.index,\n            result.destination.index\n        )\n\n        let { data } = await reorderTodoList(todoList)\n\n        if (isAlive) {\n            setFilteredTodoList(data)\n            setTodoList(data)\n        }\n    }\n\n    const filterTodoListByProperty = (queryField, queryValue) => {\n        if (queryField !== 'all') {\n            let list = todoList.filter(\n                (todo) => todo[queryField] === queryValue\n            )\n            setFilteredTodoList([...list])\n        } else {\n            setFilteredTodoList([...todoList])\n        }\n    }\n\n    const filterTodoListByTag = (tagId) => {\n        if (tagId !== 'all') {\n            let list = todoList.filter((todo) => todo.tag.includes(tagId))\n            setFilteredTodoList([...list])\n        } else {\n            setFilteredTodoList([...todoList])\n        }\n    }\n\n    // New Drag and Drop data logic\n    const [dragAbleItem, setDragAbleItem] = useState([])\n    const getItems = (count) =>\n        count.map((k, i) => ({\n            done: k.done,\n            dueDate: k.dueDate,\n            id: `${k.id}`,\n            important: k.important,\n            note: k.note,\n            read: k.read,\n            selected: k.selected,\n            starred: k.starred,\n            startDate: k.startDate,\n            tag: k.tag,\n            title: k.title,\n        }))\n\n    useEffect(() => {\n        if (filteredTodoList.length > 0) {\n            setDragAbleItem(getItems(filteredTodoList))\n        }\n    }, [filteredTodoList])\n\n    const onDragEnd = (result) => {\n        if (!result.destination) {\n            return\n        }\n        const tempItems = reorder(\n            dragAbleItem,\n            result.source.index,\n            result.destination.index\n        )\n        setDragAbleItem(tempItems)\n    }\n\n    return (\n        <StyledCard className=\"todo\">\n            <ContentBox>\n                <div>\n                    <MatxMenu\n                        menuButton={\n                            <IconButton size=\"large\">\n                                <Icon>arrow_drop_down</Icon>\n                            </IconButton>\n                        }\n                    >\n                        <MenuItem\n                            onClick={() => filterTodoListByProperty('all')}\n                        >\n                            All\n                        </MenuItem>\n                        <MenuItem\n                            onClick={() =>\n                                filterTodoListByProperty('read', true)\n                            }\n                        >\n                            Read\n                        </MenuItem>\n                        <MenuItem\n                            onClick={() =>\n                                filterTodoListByProperty('read', false)\n                            }\n                        >\n                            Unread\n                        </MenuItem>\n                        <MenuItem\n                            onClick={() =>\n                                filterTodoListByProperty('done', true)\n                            }\n                        >\n                            Done\n                        </MenuItem>\n                        <MenuItem\n                            onClick={() =>\n                                filterTodoListByProperty('done', false)\n                            }\n                        >\n                            Undone\n                        </MenuItem>\n                        <MenuItem\n                            onClick={() =>\n                                filterTodoListByProperty('important', true)\n                            }\n                        >\n                            Important\n                        </MenuItem>\n                        <MenuItem\n                            onClick={() =>\n                                filterTodoListByProperty('important', false)\n                            }\n                        >\n                            Unimportant\n                        </MenuItem>\n                        <MenuItem\n                            onClick={() =>\n                                filterTodoListByProperty('starred', true)\n                            }\n                        >\n                            Starred\n                        </MenuItem>\n                        <MenuItem\n                            onClick={() =>\n                                filterTodoListByProperty('starred', false)\n                            }\n                        >\n                            Unstarred\n                        </MenuItem>\n                    </MatxMenu>\n                    <MatxMenu\n                        menuButton={\n                            <IconButton size=\"large\">\n                                <Icon>label</Icon>\n                            </IconButton>\n                        }\n                    >\n                        <MenuItem\n                            sx={{ textTransform: 'capitalize' }}\n                            onClick={() => filterTodoListByTag('all')}\n                        >\n                            all\n                        </MenuItem>\n                        {tagList.map((tag) => (\n                            <MenuItem\n                                key={tag.id}\n                                sx={{ textTransform: 'capitalize' }}\n                                onClick={() => filterTodoListByTag(tag.id)}\n                            >\n                                {tag.name}\n                            </MenuItem>\n                        ))}\n                    </MatxMenu>\n                </div>\n                <Box pr={2}>\n                    <Button\n                        variant=\"contained\"\n                        color=\"primary\"\n                        onClick={() => navigate('/todo/list/add')}\n                    >\n                        Create Todo\n                    </Button>\n                </Box>\n            </ContentBox>\n\n            <div className=\"todo-list\">\n                {/* Previous Drag and Drop Code Start*/}\n                <DragDropContext onDragEnd={handleDragEnd}>\n                    <Droppable droppableId=\"droppable\">\n                        {(provided, snapshot) => (\n                            <div\n                                {...provided.droppableProps}\n                                ref={provided.innerRef}\n                            >\n                                {filteredTodoList.map((todo, index) => (\n                                    <Draggable\n                                        key={todo.id}\n                                        draggableId={parseFloat(todo.id)}\n                                        index={index}\n                                    >\n                                        {(provided, snapshot) => (\n                                            <div\n                                                ref={provided.innerRef}\n                                                {...provided.draggableProps}\n                                                {...provided.dragHandleProps}\n                                                style={\n                                                    provided.draggableProps\n                                                        .style\n                                                }\n                                            >\n                                                <TodoItem\n                                                    tagList={tagList}\n                                                    updateTodo={updateTodo}\n                                                    key={index}\n                                                    todo={todo}\n                                                />\n                                            </div>\n                                        )}\n                                    </Draggable>\n                                ))}\n                                {provided.placeholder}\n                            </div>\n                        )}\n                    </Droppable>\n                </DragDropContext>\n                {/* Previous Drag and Drop Code End*/}\n\n                <div>\n                    <h2>New Drag and Drop Start From Here for testing</h2>\n                </div>\n                {/* New Drag and Drop Code Start*/}\n                <DragDropContext onDragEnd={onDragEnd}>\n                    <Droppable droppableId=\"droppable\">\n                        {(provided, snapshot) => (\n                            <div\n                                {...provided.droppableProps}\n                                ref={provided.innerRef}\n                            >\n                                {dragAbleItem.map((item, index) => (\n                                    <Draggable\n                                        key={item.id}\n                                        draggableId={item.id}\n                                        index={index}\n                                    >\n                                        {(provided, snapshot) => (\n                                            <div\n                                                ref={provided.innerRef}\n                                                {...provided.draggableProps}\n                                                {...provided.dragHandleProps}\n                                            >\n                                                <TodoItem\n                                                    tagList={tagList}\n                                                    updateTodo={updateTodo}\n                                                    key={index}\n                                                    todo={item}\n                                                />\n                                            </div>\n                                        )}\n                                    </Draggable>\n                                ))}\n                                {provided.placeholder}\n                            </div>\n                        )}\n                    </Droppable>\n                </DragDropContext>\n                {/* New Drag and Drop Code End*/}\n            </div>\n        </StyledCard>\n    )\n}\n\nexport default TodoList\n"]},"metadata":{},"sourceType":"module"}