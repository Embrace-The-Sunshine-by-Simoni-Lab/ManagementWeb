{"ast":null,"code":"import _objectSpread from \"/Users/zhaoyuliu/Desktop/matx-pro-3.3.0/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\n\nvar _jsxFileName = \"/Users/zhaoyuliu/Desktop/matx-pro-3.3.0/src/app/components/MatxLayout/Layout1/Layout1Sidenav.jsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport Brand from '../../Brand/Brand';\nimport { convertHexToRGB } from 'app/utils/utils';\nimport { Box, styled, useTheme } from '@mui/system';\nimport Sidenav from '../../Sidenav/Sidenav';\nimport useSettings from 'app/hooks/useSettings';\nimport { Switch, Hidden } from '@mui/material';\nimport { themeShadows } from 'app/components/MatxTheme/themeColors';\nimport { sidenavCompactWidth, sideNavWidth } from 'app/utils/constant';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar SidebarNavRoot = styled(Box)(function (_ref) {\n  var theme = _ref.theme,\n      width = _ref.width,\n      primaryBg = _ref.primaryBg,\n      bgImgURL = _ref.bgImgURL;\n  return {\n    position: 'fixed',\n    top: 0,\n    left: 0,\n    height: '100vh',\n    width: width,\n    boxShadow: themeShadows[8],\n    // backgroundRepeat: 'no-repeat',\n    backgroundPosition: 'top',\n    // backgroundSize: 'cover',\n    zIndex: 111,\n    overflow: 'hidden',\n    color: theme.palette.text.primary,\n    transition: 'all 250ms ease-in-out',\n    backgroundImage: \" url(\".concat(bgImgURL, \")\"),\n    // backgroundImage: `linear-gradient(to bottom, rgba(${primaryBg}, 0.96), rgba(${primaryBg}, 0.96)), url(${bgImgURL})`,\n    '&:hover': {\n      width: sideNavWidth,\n      '& .sidenavHoverShow': {\n        display: 'block'\n      },\n      '& .compactNavItem': {\n        width: '100%',\n        maxWidth: '100%',\n        '& .nav-bullet': {\n          display: 'block'\n        },\n        '& .nav-bullet-text': {\n          display: 'none'\n        }\n      }\n    }\n  };\n});\nvar NavListBox = styled(Box)(function () {\n  return {\n    height: '100%',\n    display: 'flex',\n    flexDirection: 'column'\n  };\n});\n\nvar Layout1Sidenav = function Layout1Sidenav() {\n  _s();\n\n  var theme = useTheme();\n\n  var _useSettings = useSettings(),\n      settings = _useSettings.settings,\n      updateSettings = _useSettings.updateSettings;\n\n  var leftSidebar = settings.layout1Settings.leftSidebar;\n  var mode = leftSidebar.mode,\n      bgImgURL = leftSidebar.bgImgURL;\n\n  var getSidenavWidth = function getSidenavWidth() {\n    switch (mode) {\n      case 'compact':\n        return sidenavCompactWidth;\n\n      default:\n        return sideNavWidth;\n    }\n  };\n\n  var primaryRGB = convertHexToRGB(theme.palette.primary.main);\n\n  var updateSidebarMode = function updateSidebarMode(sidebarSettings) {\n    updateSettings({\n      layout1Settings: {\n        leftSidebar: _objectSpread({}, sidebarSettings)\n      }\n    });\n  };\n\n  var handleSidenavToggle = function handleSidenavToggle() {\n    updateSidebarMode({\n      mode: mode === 'compact' ? 'full' : 'compact'\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(SidebarNavRoot, {\n    bgImgURL: bgImgURL,\n    primaryBg: primaryRGB,\n    width: getSidenavWidth(),\n    children: /*#__PURE__*/_jsxDEV(NavListBox, {\n      children: [/*#__PURE__*/_jsxDEV(Brand, {\n        children: /*#__PURE__*/_jsxDEV(Hidden, {\n          smDown: true,\n          children: /*#__PURE__*/_jsxDEV(Switch, {\n            onChange: handleSidenavToggle,\n            checked: leftSidebar.mode !== 'full',\n            color: \"secondary\",\n            size: \"small\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 25\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 21\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(Sidenav, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(Layout1Sidenav, \"PRYeSfes8c6MlKbmvqyE+1XV5FY=\", false, function () {\n  return [useTheme, useSettings];\n});\n\n_c = Layout1Sidenav;\nexport default _c2 = /*#__PURE__*/React.memo(Layout1Sidenav);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Layout1Sidenav\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/Users/zhaoyuliu/Desktop/matx-pro-3.3.0/src/app/components/MatxLayout/Layout1/Layout1Sidenav.jsx"],"names":["React","Brand","convertHexToRGB","Box","styled","useTheme","Sidenav","useSettings","Switch","Hidden","themeShadows","sidenavCompactWidth","sideNavWidth","SidebarNavRoot","theme","width","primaryBg","bgImgURL","position","top","left","height","boxShadow","backgroundPosition","zIndex","overflow","color","palette","text","primary","transition","backgroundImage","display","maxWidth","NavListBox","flexDirection","Layout1Sidenav","settings","updateSettings","leftSidebar","layout1Settings","mode","getSidenavWidth","primaryRGB","main","updateSidebarMode","sidebarSettings","handleSidenavToggle","memo"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport Brand from '../../Brand/Brand'\r\nimport { convertHexToRGB } from 'app/utils/utils'\r\nimport { Box, styled, useTheme } from '@mui/system'\r\nimport Sidenav from '../../Sidenav/Sidenav'\r\nimport useSettings from 'app/hooks/useSettings'\r\nimport { Switch, Hidden } from '@mui/material'\r\nimport { themeShadows } from 'app/components/MatxTheme/themeColors'\r\nimport { sidenavCompactWidth, sideNavWidth } from 'app/utils/constant'\r\n\r\nconst SidebarNavRoot = styled(Box)(({ theme, width, primaryBg, bgImgURL }) => ({\r\n    position: 'fixed',\r\n    top: 0,\r\n    left: 0,\r\n    height: '100vh',\r\n    width: width,\r\n    boxShadow: themeShadows[8],\r\n    // backgroundRepeat: 'no-repeat',\r\n    backgroundPosition: 'top',\r\n    // backgroundSize: 'cover',\r\n    zIndex: 111,\r\n    overflow: 'hidden',\r\n    color: theme.palette.text.primary,\r\n    transition: 'all 250ms ease-in-out',\r\n    backgroundImage: ` url(${bgImgURL})`,\r\n    // backgroundImage: `linear-gradient(to bottom, rgba(${primaryBg}, 0.96), rgba(${primaryBg}, 0.96)), url(${bgImgURL})`,\r\n    '&:hover': {\r\n        width: sideNavWidth,\r\n        '& .sidenavHoverShow': {\r\n            display: 'block',\r\n        },\r\n        '& .compactNavItem': {\r\n            width: '100%',\r\n            maxWidth: '100%',\r\n            '& .nav-bullet': {\r\n                display: 'block',\r\n            },\r\n            '& .nav-bullet-text': {\r\n                display: 'none',\r\n            },\r\n        },\r\n    },\r\n}))\r\n\r\nconst NavListBox = styled(Box)(() => ({\r\n    height: '100%',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n}))\r\n\r\nconst Layout1Sidenav = () => {\r\n    const theme = useTheme()\r\n    const { settings, updateSettings } = useSettings()\r\n    const leftSidebar = settings.layout1Settings.leftSidebar\r\n    const { mode, bgImgURL } = leftSidebar\r\n\r\n    const getSidenavWidth = () => {\r\n        switch (mode)\r\n        {\r\n            case 'compact':\r\n                return sidenavCompactWidth\r\n            default:\r\n                return sideNavWidth\r\n        }\r\n    }\r\n    const primaryRGB = convertHexToRGB(theme.palette.primary.main)\r\n\r\n    const updateSidebarMode = (sidebarSettings) => {\r\n        updateSettings({\r\n            layout1Settings: {\r\n                leftSidebar: {\r\n                    ...sidebarSettings,\r\n                },\r\n            },\r\n        })\r\n    }\r\n\r\n    const handleSidenavToggle = () => {\r\n        updateSidebarMode({ mode: mode === 'compact' ? 'full' : 'compact' })\r\n    }\r\n\r\n    return (\r\n        <SidebarNavRoot\r\n            bgImgURL={bgImgURL}\r\n            primaryBg={primaryRGB}\r\n            width={getSidenavWidth()}\r\n        >\r\n            <NavListBox>\r\n                <Brand>\r\n                    <Hidden smDown>\r\n                        <Switch\r\n                            onChange={handleSidenavToggle}\r\n                            checked={leftSidebar.mode !== 'full'}\r\n                            color=\"secondary\"\r\n                            size=\"small\"\r\n                        />\r\n                    </Hidden>\r\n                </Brand>\r\n                <Sidenav />\r\n            </NavListBox>\r\n        </SidebarNavRoot>\r\n    )\r\n}\r\n\r\nexport default React.memo(Layout1Sidenav)\r\n"]},"metadata":{},"sourceType":"module"}