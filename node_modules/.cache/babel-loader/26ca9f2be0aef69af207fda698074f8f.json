{"ast":null,"code":"import _slicedToArray from \"/Users/zhaoyuliu/Desktop/matx-pro-3.3.0/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\n\nvar _jsxFileName = \"/Users/zhaoyuliu/Desktop/matx-pro-3.3.0/src/app/views/forms/invoice-form/InvoiceItemTable.jsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Table, TableHead, TableRow, TableCell, TableBody, TextField, Button, IconButton, Icon, Select, MenuItem, Autocomplete } from '@mui/material';\nimport { Formik, Form, Field, FieldArray } from 'formik';\nimport { getProductList, calculateAmount } from './InvoiceFormService';\nimport { Box, styled } from '@mui/system';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar FlexBox = styled('div')(function () {\n  return {\n    display: 'flex',\n    alignItems: 'center'\n  };\n});\nvar IMG = styled('img')(function () {\n  return {\n    width: 48\n  };\n});\nvar StyledCell = styled(TableCell)(function () {\n  return {\n    padding: 0\n  };\n});\n\nvar InvoiceItemTable = function InvoiceItemTable(_ref) {\n  _s();\n\n  var values = _ref.values,\n      handleChange = _ref.handleChange,\n      setFieldValue = _ref.setFieldValue;\n\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      isAlive = _useState2[0],\n      setIsAlive = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      productList = _useState4[0],\n      setProductList = _useState4[1];\n\n  useEffect(function () {\n    getProductList().then(function (_ref2) {\n      var data = _ref2.data;\n      if (isAlive) setProductList(data);\n    });\n    return function () {\n      return setIsAlive(false);\n    };\n  }, [isAlive]);\n\n  var handleSubmit = function handleSubmit() {\n    console.log(123);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Friend List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: {\n        friends: ['jared', 'ian', 'brent']\n      },\n      onSubmit: handleSubmit,\n      render: function render(formikProps) {\n        return /*#__PURE__*/_jsxDEV(FieldArray, {\n          name: \"friends\",\n          children: function children(_ref3) {\n            var move = _ref3.move,\n                swap = _ref3.swap,\n                push = _ref3.push,\n                insert = _ref3.insert,\n                unshift = _ref3.unshift,\n                pop = _ref3.pop,\n                form = _ref3.form;\n            return /*#__PURE__*/_jsxDEV(Form, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 33\n            }, _this);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, _this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, _this) // <FieldArray name=\"items\">\n  //     {(arrayHelpers) => (\n  //         <Box overflow=\"auto\">\n  //             <Table sx={{ whiteSpace: 'pre', minWidth: 750 }}>\n  //                 <TableHead>\n  //                     <TableRow>\n  //                         <TableCell colSpan={7}>Item Details</TableCell>\n  //                         <TableCell colSpan={2}>Quantity </TableCell>\n  //                         <TableCell colSpan={2}>Rate</TableCell>\n  //                         <TableCell colSpan={2}>Discount</TableCell>\n  //                         <TableCell colSpan={2} align=\"center\">\n  //                             Amount\n  //                         </TableCell>\n  //                         <StyledCell colSpan={1} align=\"center\" />\n  //                     </TableRow>\n  //                 </TableHead>\n  //                 <TableBody>\n  //                     {values.items?.map((item, ind) => (\n  //                         <TableRow\n  //                             key={ind}\n  //                             sx={{ position: 'relative' }}\n  //                         >\n  //                             <StyledCell colSpan={7} align=\"left\">\n  //                                 <FlexBox>\n  //                                     <IMG alt=\"\" src={item?.imgUrl} />\n  //                                     <Autocomplete\n  //                                         size=\"small\"\n  //                                         sx={{ width: '100%' }}\n  //                                         options={productList}\n  //                                         getOptionLabel={(option) =>\n  //                                             option.title\n  //                                         }\n  //                                         renderInput={(params) => (\n  //                                             <TextField\n  //                                                 {...params}\n  //                                                 variant=\"outlined\"\n  //                                                 fullWidth\n  //                                             />\n  //                                         )}\n  //                                         onChange={(event, newValue) => {\n  //                                             handleChange({\n  //                                                 target: {\n  //                                                     name: `items[${ind}]`,\n  //                                                     value: newValue,\n  //                                                 },\n  //                                             })\n  //                                         }}\n  //                                     />\n  //                                 </FlexBox>\n  //                             </StyledCell>\n  //                             <StyledCell colSpan={2} align=\"left\">\n  //                                 <TextField\n  //                                     name={`items[${ind}].quantity`}\n  //                                     size=\"small\"\n  //                                     variant=\"outlined\"\n  //                                     type=\"number\"\n  //                                     fullWidth\n  //                                     defaultValue={item.quantity || ''}\n  //                                     onChange={handleChange}\n  //                                 />\n  //                             </StyledCell>\n  //                             <StyledCell colSpan={2} align=\"left\">\n  //                                 <TextField\n  //                                     name={`items[${ind}].price`}\n  //                                     size=\"small\"\n  //                                     variant=\"outlined\"\n  //                                     type=\"number\"\n  //                                     fullWidth\n  //                                     value={item.price || ''}\n  //                                     onChange={handleChange}\n  //                                 />\n  //                             </StyledCell>\n  //                             <StyledCell colSpan={2} align=\"left\">\n  //                                 <TextField\n  //                                     name={`items[${ind}].discount`}\n  //                                     size=\"small\"\n  //                                     variant=\"outlined\"\n  //                                     type=\"number\"\n  //                                     fullWidth\n  //                                     value={item.discount || ''}\n  //                                     onChange={handleChange}\n  //                                     InputProps={{\n  //                                         style: {\n  //                                             paddingRight: 0,\n  //                                         },\n  //                                         endAdornment: (\n  //                                             <Select\n  //                                                 name={`items[${ind}].discountType`}\n  //                                                 margin=\"none\"\n  //                                                 variant=\"standard\"\n  //                                                 value={\n  //                                                     item.discountType ||\n  //                                                     '%'\n  //                                                 }\n  //                                                 onChange={handleChange}\n  //                                             >\n  //                                                 <MenuItem value=\"$\">\n  //                                                     $\n  //                                                 </MenuItem>\n  //                                                 <MenuItem value=\"%\">\n  //                                                     %\n  //                                                 </MenuItem>\n  //                                             </Select>\n  //                                         ),\n  //                                     }}\n  //                                 />\n  //                             </StyledCell>\n  //                             <StyledCell colSpan={2} align=\"center\">\n  //                                 {calculateAmount(item).toFixed(2)}\n  //                             </StyledCell>\n  //                             <StyledCell colSpan={1} align=\"center\">\n  //                                 <IconButton\n  //                                     size=\"small\"\n  //                                     onClick={() =>\n  //                                         arrayHelpers.remove(ind)\n  //                                     }\n  //                                 >\n  //                                     <Icon\n  //                                         color=\"error\"\n  //                                         fontSize=\"small\"\n  //                                     >\n  //                                         clear\n  //                                     </Icon>\n  //                                 </IconButton>\n  //                             </StyledCell>\n  //                         </TableRow>\n  //                     ))}\n  //                 </TableBody>\n  //             </Table>\n  //             <Button\n  //                 sx={{ mt: '16px !important' }}\n  //                 color=\"primary\"\n  //                 variant=\"contained\"\n  //                 onClick={() => arrayHelpers.push({})}\n  //             >\n  //                 + Add New Item\n  //             </Button>\n  //         </Box>\n  //     )}\n  // </FieldArray>\n  ;\n};\n\n_s(InvoiceItemTable, \"mi5GO3gxLbyIvIpSDenPmgDY0J0=\");\n\n_c = InvoiceItemTable;\nexport default InvoiceItemTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"InvoiceItemTable\");","map":{"version":3,"sources":["/Users/zhaoyuliu/Desktop/matx-pro-3.3.0/src/app/views/forms/invoice-form/InvoiceItemTable.jsx"],"names":["React","useState","useEffect","Table","TableHead","TableRow","TableCell","TableBody","TextField","Button","IconButton","Icon","Select","MenuItem","Autocomplete","Formik","Form","Field","FieldArray","getProductList","calculateAmount","Box","styled","FlexBox","display","alignItems","IMG","width","StyledCell","padding","InvoiceItemTable","values","handleChange","setFieldValue","isAlive","setIsAlive","productList","setProductList","then","data","handleSubmit","console","log","friends","formikProps","move","swap","push","insert","unshift","pop","form"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport {\n    Table,\n    TableHead,\n    TableRow,\n    TableCell,\n    TableBody,\n    TextField,\n    Button,\n    IconButton,\n    Icon,\n    Select,\n    MenuItem,\n    Autocomplete\n} from '@mui/material'\nimport { Formik, Form, Field, FieldArray } from 'formik'\nimport { getProductList, calculateAmount } from './InvoiceFormService'\nimport { Box, styled } from '@mui/system'\n\nconst FlexBox = styled('div')(() => ({\n    display: 'flex',\n    alignItems: 'center',\n}))\n\nconst IMG = styled('img')(() => ({ width: 48 }))\n\nconst StyledCell = styled(TableCell)(() => ({\n    padding: 0,\n}))\n\nconst InvoiceItemTable = ({ values, handleChange, setFieldValue }) => {\n    const [isAlive, setIsAlive] = useState(true)\n    const [productList, setProductList] = useState([])\n\n    useEffect(() => {\n        getProductList().then(({ data }) => {\n            if (isAlive) setProductList(data)\n        })\n\n        return () => setIsAlive(false)\n    }, [isAlive])\n\n    const handleSubmit = () => {\n        console.log(123)\n    }\n    return (\n        <div>\n            <h1>Friend List</h1>\n            <Formik\n                initialValues={{ friends: ['jared', 'ian', 'brent'] }}\n                onSubmit={handleSubmit}\n                render={formikProps => (\n                    <FieldArray name=\"friends\">\n                        {({ move, swap, push, insert, unshift, pop, form }) => {\n                            return (\n                                <Form>\n                                    {/*... use these however you want */}\n                                </Form>\n                            );\n                        }}\n                    </FieldArray>\n                )}\n            />\n        </div>\n        // <FieldArray name=\"items\">\n        //     {(arrayHelpers) => (\n        //         <Box overflow=\"auto\">\n        //             <Table sx={{ whiteSpace: 'pre', minWidth: 750 }}>\n        //                 <TableHead>\n        //                     <TableRow>\n        //                         <TableCell colSpan={7}>Item Details</TableCell>\n        //                         <TableCell colSpan={2}>Quantity </TableCell>\n        //                         <TableCell colSpan={2}>Rate</TableCell>\n        //                         <TableCell colSpan={2}>Discount</TableCell>\n        //                         <TableCell colSpan={2} align=\"center\">\n        //                             Amount\n        //                         </TableCell>\n        //                         <StyledCell colSpan={1} align=\"center\" />\n        //                     </TableRow>\n        //                 </TableHead>\n        //                 <TableBody>\n        //                     {values.items?.map((item, ind) => (\n        //                         <TableRow\n        //                             key={ind}\n        //                             sx={{ position: 'relative' }}\n        //                         >\n        //                             <StyledCell colSpan={7} align=\"left\">\n        //                                 <FlexBox>\n        //                                     <IMG alt=\"\" src={item?.imgUrl} />\n        //                                     <Autocomplete\n        //                                         size=\"small\"\n        //                                         sx={{ width: '100%' }}\n        //                                         options={productList}\n        //                                         getOptionLabel={(option) =>\n        //                                             option.title\n        //                                         }\n        //                                         renderInput={(params) => (\n        //                                             <TextField\n        //                                                 {...params}\n        //                                                 variant=\"outlined\"\n        //                                                 fullWidth\n        //                                             />\n        //                                         )}\n        //                                         onChange={(event, newValue) => {\n        //                                             handleChange({\n        //                                                 target: {\n        //                                                     name: `items[${ind}]`,\n        //                                                     value: newValue,\n        //                                                 },\n        //                                             })\n        //                                         }}\n        //                                     />\n        //                                 </FlexBox>\n        //                             </StyledCell>\n\n        //                             <StyledCell colSpan={2} align=\"left\">\n        //                                 <TextField\n        //                                     name={`items[${ind}].quantity`}\n        //                                     size=\"small\"\n        //                                     variant=\"outlined\"\n        //                                     type=\"number\"\n        //                                     fullWidth\n        //                                     defaultValue={item.quantity || ''}\n        //                                     onChange={handleChange}\n        //                                 />\n        //                             </StyledCell>\n        //                             <StyledCell colSpan={2} align=\"left\">\n        //                                 <TextField\n        //                                     name={`items[${ind}].price`}\n        //                                     size=\"small\"\n        //                                     variant=\"outlined\"\n        //                                     type=\"number\"\n        //                                     fullWidth\n        //                                     value={item.price || ''}\n        //                                     onChange={handleChange}\n        //                                 />\n        //                             </StyledCell>\n        //                             <StyledCell colSpan={2} align=\"left\">\n        //                                 <TextField\n        //                                     name={`items[${ind}].discount`}\n        //                                     size=\"small\"\n        //                                     variant=\"outlined\"\n        //                                     type=\"number\"\n        //                                     fullWidth\n        //                                     value={item.discount || ''}\n        //                                     onChange={handleChange}\n        //                                     InputProps={{\n        //                                         style: {\n        //                                             paddingRight: 0,\n        //                                         },\n        //                                         endAdornment: (\n        //                                             <Select\n        //                                                 name={`items[${ind}].discountType`}\n        //                                                 margin=\"none\"\n        //                                                 variant=\"standard\"\n        //                                                 value={\n        //                                                     item.discountType ||\n        //                                                     '%'\n        //                                                 }\n        //                                                 onChange={handleChange}\n        //                                             >\n        //                                                 <MenuItem value=\"$\">\n        //                                                     $\n        //                                                 </MenuItem>\n        //                                                 <MenuItem value=\"%\">\n        //                                                     %\n        //                                                 </MenuItem>\n        //                                             </Select>\n        //                                         ),\n        //                                     }}\n        //                                 />\n        //                             </StyledCell>\n        //                             <StyledCell colSpan={2} align=\"center\">\n        //                                 {calculateAmount(item).toFixed(2)}\n        //                             </StyledCell>\n        //                             <StyledCell colSpan={1} align=\"center\">\n        //                                 <IconButton\n        //                                     size=\"small\"\n        //                                     onClick={() =>\n        //                                         arrayHelpers.remove(ind)\n        //                                     }\n        //                                 >\n        //                                     <Icon\n        //                                         color=\"error\"\n        //                                         fontSize=\"small\"\n        //                                     >\n        //                                         clear\n        //                                     </Icon>\n        //                                 </IconButton>\n        //                             </StyledCell>\n        //                         </TableRow>\n        //                     ))}\n        //                 </TableBody>\n        //             </Table>\n        //             <Button\n        //                 sx={{ mt: '16px !important' }}\n        //                 color=\"primary\"\n        //                 variant=\"contained\"\n        //                 onClick={() => arrayHelpers.push({})}\n        //             >\n        //                 + Add New Item\n        //             </Button>\n        //         </Box>\n        //     )}\n        // </FieldArray>\n    )\n}\n\nexport default InvoiceItemTable\n"]},"metadata":{},"sourceType":"module"}