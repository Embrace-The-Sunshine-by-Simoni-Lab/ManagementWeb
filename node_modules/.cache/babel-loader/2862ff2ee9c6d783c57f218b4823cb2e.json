{"ast":null,"code":"import _objectSpread from \"/Users/zhaoyuliu/Desktop/matx-basic/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _slicedToArray from \"/Users/zhaoyuliu/Desktop/matx-basic/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\n\nvar _jsxFileName = \"/Users/zhaoyuliu/Desktop/matx-basic/src/app/views/scrum-board/BoardList.jsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { Card, Icon, MenuItem, IconButton, TextField, InputAdornment, ClickAwayListener, Button } from '@mui/material';\nimport { renameListInBoard, deleteListFromBoard, addNewCardInList } from '../../redux/actions/ScrumBoardActions';\nimport ScrumBoardCard from './ScrumBoardCard';\nimport Scrollbar from 'react-perfect-scrollbar';\nimport { MatxMenu } from 'app/components';\nimport { useDispatch, useSelector } from 'react-redux';\nimport React, { useState, useEffect } from 'react';\nimport { Droppable, Draggable } from 'react-beautiful-dnd';\nimport { Box, styled } from '@mui/system';\nimport { H4 } from 'app/components/Typography';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar FlexBox = styled(Box)(function () {\n  return {\n    display: 'flex',\n    alignItems: 'center'\n  };\n});\nvar JustifyBox = styled(FlexBox)(function () {\n  return {\n    justifyContent: 'space-between'\n  };\n});\nvar StyledItem = styled(MenuItem)(function () {\n  return {\n    minWidth: 148,\n    display: 'flex',\n    alignItems: 'center',\n    '& span': {\n      paddingLeft: '16px'\n    }\n  };\n});\nvar StyledScrollBar = styled(Scrollbar)(function () {\n  return {\n    height: 380,\n    position: 'relative',\n    paddingLeft: '16px',\n    paddingRight: '16px'\n  };\n});\nvar StyledCard = styled(Card)(function () {\n  return {\n    padding: '16px',\n    width: '100%',\n    borderRadius: 0,\n    cursor: 'pointer',\n    position: 'absolute',\n    bottom: '0'\n  };\n});\n\nvar BoardList = function BoardList(_ref) {\n  _s();\n\n  var data = _ref.data,\n      handleCardClick = _ref.handleCardClick;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      shouldOpenTitleEditor = _useState2[0],\n      setShouldOpenTitleEditor = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      shouldOpenAddCard = _useState4[0],\n      setShouldOpenAddCard = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      cardTitleText = _useState6[0],\n      setCardTitleText = _useState6[1];\n\n  var _useState7 = useState(''),\n      _useState8 = _slicedToArray(_useState7, 2),\n      columnTitleText = _useState8[0],\n      setColumnTitleText = _useState8[1];\n\n  var dispatch = useDispatch();\n\n  var _useSelector = useSelector(function (state) {\n    return state.scrumboard;\n  }),\n      _useSelector$board = _useSelector.board,\n      board = _useSelector$board === void 0 ? {} : _useSelector$board;\n\n  var handleChange = function handleChange(event) {\n    var targetName = event.target.name;\n    var value = event.target.value;\n\n    if (targetName === 'cardTitleText') {\n      if (event.key === 'Enter' && !event.shiftKey) handleAddNewCard();else setCardTitleText(value);\n    } else {\n      if (event.key === 'Enter' && !event.shiftKey) handleRenameList();else setColumnTitleText(value);\n    }\n  };\n\n  var handleRenameList = function handleRenameList() {\n    dispatch(renameListInBoard({\n      boardId: board.id,\n      listId: data.column.id,\n      listTitle: columnTitleText\n    }));\n    openTitleEditor(false);\n  };\n\n  var openTitleEditor = function openTitleEditor(value) {\n    setShouldOpenTitleEditor(value);\n  };\n\n  var openAddCard = function openAddCard(value) {\n    setShouldOpenAddCard(value);\n  };\n\n  var handleAddNewCard = function handleAddNewCard() {\n    if (cardTitleText.trim() !== '') {\n      dispatch(addNewCardInList({\n        boardId: board.id,\n        listId: data.column.id,\n        cardTitle: cardTitleText\n      }));\n      setCardTitleText('');\n    }\n  };\n\n  var handleListDelete = function handleListDelete() {\n    dispatch(deleteListFromBoard({\n      boardId: board.id,\n      listId: data.column.id\n    }));\n  };\n\n  useEffect(function () {\n    var _data$column;\n\n    var listTitle = data === null || data === void 0 ? void 0 : (_data$column = data.column) === null || _data$column === void 0 ? void 0 : _data$column.title;\n    if (listTitle) setColumnTitleText(listTitle);\n  }, [data]);\n  var provided = data.provided,\n      snapshot = data.snapshot,\n      column = data.column;\n  var bgLightGrey = 'rgba(0, 0, 0, 0.01)';\n  return /*#__PURE__*/_jsxDEV(Card, _objectSpread(_objectSpread(_objectSpread({\n    elevation: snapshot.isDragging ? 10 : 3,\n    ref: provided.innerRef\n  }, provided.draggableProps), provided.dragHandleProps), {}, {\n    style: _objectSpread({}, provided.draggableProps.style),\n    sx: {\n      mx: '12px',\n      pt: 1,\n      width: 288,\n      position: 'relative'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Droppable, {\n      droppableId: column.id,\n      direction: \"vertical\",\n      type: \"card\",\n      children: function children(provided, snapshot) {\n        return /*#__PURE__*/_jsxDEV(Box, {\n          ref: provided.innerRef,\n          position: \"relative\",\n          children: [/*#__PURE__*/_jsxDEV(JustifyBox, {\n            pb: 1,\n            children: [shouldOpenTitleEditor ? /*#__PURE__*/_jsxDEV(ClickAwayListener, {\n              onClickAway: function onClickAway() {\n                return openTitleEditor(false);\n              },\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                size: \"small\",\n                sx: {\n                  pl: 2\n                },\n                variant: \"outlined\",\n                value: columnTitleText,\n                onChange: handleChange,\n                onKeyDown: handleChange,\n                name: \"columnTitleText\",\n                InputProps: {\n                  endAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n                    position: \"end\",\n                    children: /*#__PURE__*/_jsxDEV(IconButton, {\n                      size: \"small\",\n                      onClick: handleRenameList,\n                      children: /*#__PURE__*/_jsxDEV(Icon, {\n                        fontSize: \"small\",\n                        children: \"done\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 168,\n                        columnNumber: 57\n                      }, _this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 162,\n                      columnNumber: 53\n                    }, _this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 161,\n                    columnNumber: 49\n                  }, _this)\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 151,\n                columnNumber: 37\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 33\n            }, _this) : /*#__PURE__*/_jsxDEV(H4, {\n              onClick: function onClick() {\n                return openTitleEditor(true);\n              },\n              sx: {\n                py: '4px',\n                pl: 2,\n                flexGrow: 1,\n                textTransform: 'capitalize'\n              },\n              children: column.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 37\n            }, _this), /*#__PURE__*/_jsxDEV(MatxMenu, {\n              horizontalPosition: \"right\",\n              menuButton: /*#__PURE__*/_jsxDEV(IconButton, {\n                children: /*#__PURE__*/_jsxDEV(Icon, {\n                  children: \"more_vert\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 194,\n                  columnNumber: 41\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 193,\n                columnNumber: 37\n              }, _this),\n              children: [/*#__PURE__*/_jsxDEV(StyledItem, {\n                children: [/*#__PURE__*/_jsxDEV(Icon, {\n                  children: \" settings \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 199,\n                  columnNumber: 37\n                }, _this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: \" Settings \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 200,\n                  columnNumber: 37\n                }, _this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 198,\n                columnNumber: 33\n              }, _this), /*#__PURE__*/_jsxDEV(StyledItem, {\n                onClick: handleListDelete,\n                children: [/*#__PURE__*/_jsxDEV(Icon, {\n                  children: \" delete \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 203,\n                  columnNumber: 37\n                }, _this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: \" Delete \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 204,\n                  columnNumber: 37\n                }, _this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 202,\n                columnNumber: 33\n              }, _this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 29\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 25\n          }, _this), /*#__PURE__*/_jsxDEV(StyledScrollBar, {\n            children: column.cardList.map(function (card, index) {\n              return /*#__PURE__*/_jsxDEV(Draggable, {\n                draggableId: card.id,\n                index: index,\n                type: \"card\",\n                children: function children(provided, snapshot) {\n                  return /*#__PURE__*/_jsxDEV(Card, _objectSpread(_objectSpread(_objectSpread({\n                    sx: {\n                      mb: 2,\n                      borderRadius: '4px',\n                      background: bgLightGrey\n                    },\n                    elevation: snapshot.isDragging ? 10 : 3,\n                    onClick: function onClick() {\n                      return handleCardClick(_objectSpread(_objectSpread({}, card), {}, {\n                        listId: column.id\n                      }));\n                    },\n                    ref: provided.innerRef\n                  }, provided.draggableProps), provided.dragHandleProps), {}, {\n                    style: _objectSpread({}, provided.draggableProps.style),\n                    children: /*#__PURE__*/_jsxDEV(ScrumBoardCard, {\n                      card: card\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 241,\n                      columnNumber: 45\n                    }, _this)\n                  }), void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 218,\n                    columnNumber: 41\n                  }, _this);\n                }\n              }, card.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 211,\n                columnNumber: 33\n              }, _this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 25\n          }, _this), provided.placeholder]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 21\n        }, _this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 13\n    }, _this), shouldOpenAddCard ? /*#__PURE__*/_jsxDEV(ClickAwayListener, {\n      onClickAway: function onClickAway() {\n        return openAddCard(false);\n      },\n      children: /*#__PURE__*/_jsxDEV(StyledCard, {\n        elevation: 5,\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          size: \"small\",\n          sx: {\n            mb: '12px'\n          },\n          variant: \"outlined\",\n          name: \"cardTitleText\",\n          value: cardTitleText,\n          fullWidth: true,\n          onChange: handleChange,\n          onKeyDown: handleChange,\n          InputProps: {\n            endAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n              position: \"end\",\n              children: /*#__PURE__*/_jsxDEV(IconButton, {\n                size: \"small\",\n                onClick: function onClick() {\n                  return openAddCard(false);\n                },\n                children: /*#__PURE__*/_jsxDEV(Icon, {\n                  fontSize: \"small\",\n                  children: \"clear\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 274,\n                  columnNumber: 45\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 270,\n                columnNumber: 41\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 269,\n              columnNumber: 37\n            }, _this)\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 25\n        }, _this), /*#__PURE__*/_jsxDEV(Box, {\n          display: \"flex\",\n          justifyContent: \"flex-end\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            onClick: handleAddNewCard,\n            variant: \"contained\",\n            color: \"primary\",\n            children: \"Add\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 281,\n            columnNumber: 29\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 25\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 21\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 17\n    }, _this) : /*#__PURE__*/_jsxDEV(Box, {\n      display: \"flex\",\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: function onClick() {\n          return openAddCard(true);\n        },\n        sx: {\n          flexGrow: 1,\n          borderRadius: 0,\n          fontWeight: '500'\n        },\n        children: \"+ Add Card\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 25\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 21\n    }, _this)]\n  }), void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 133,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(BoardList, \"B+e5HBX2GUxOFz5iCmLDbSG6BtQ=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = BoardList;\nexport default BoardList;\n\nvar _c;\n\n$RefreshReg$(_c, \"BoardList\");","map":{"version":3,"sources":["/Users/zhaoyuliu/Desktop/matx-basic/src/app/views/scrum-board/BoardList.jsx"],"names":["Card","Icon","MenuItem","IconButton","TextField","InputAdornment","ClickAwayListener","Button","renameListInBoard","deleteListFromBoard","addNewCardInList","ScrumBoardCard","Scrollbar","MatxMenu","useDispatch","useSelector","React","useState","useEffect","Droppable","Draggable","Box","styled","H4","FlexBox","display","alignItems","JustifyBox","justifyContent","StyledItem","minWidth","paddingLeft","StyledScrollBar","height","position","paddingRight","StyledCard","padding","width","borderRadius","cursor","bottom","BoardList","data","handleCardClick","shouldOpenTitleEditor","setShouldOpenTitleEditor","shouldOpenAddCard","setShouldOpenAddCard","cardTitleText","setCardTitleText","columnTitleText","setColumnTitleText","dispatch","state","scrumboard","board","handleChange","event","targetName","target","name","value","key","shiftKey","handleAddNewCard","handleRenameList","boardId","id","listId","column","listTitle","openTitleEditor","openAddCard","trim","cardTitle","handleListDelete","title","provided","snapshot","bgLightGrey","isDragging","innerRef","draggableProps","dragHandleProps","style","mx","pt","pl","endAdornment","py","flexGrow","textTransform","cardList","map","card","index","mb","background","placeholder","fontWeight"],"mappings":"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","sourcesContent":["import {\n    Card,\n    Icon,\n    MenuItem,\n    IconButton,\n    TextField,\n    InputAdornment,\n    ClickAwayListener,\n    Button,\n} from '@mui/material'\nimport {\n    renameListInBoard,\n    deleteListFromBoard,\n    addNewCardInList,\n} from '../../redux/actions/ScrumBoardActions'\nimport ScrumBoardCard from './ScrumBoardCard'\nimport Scrollbar from 'react-perfect-scrollbar'\nimport { MatxMenu } from 'app/components'\nimport { useDispatch, useSelector } from 'react-redux'\nimport React, { useState, useEffect } from 'react'\nimport { Droppable, Draggable } from 'react-beautiful-dnd'\nimport { Box, styled } from '@mui/system'\nimport { H4 } from 'app/components/Typography'\n\nconst FlexBox = styled(Box)(() => ({\n    display: 'flex',\n    alignItems: 'center',\n}))\n\nconst JustifyBox = styled(FlexBox)(() => ({\n    justifyContent: 'space-between',\n}))\n\nconst StyledItem = styled(MenuItem)(() => ({\n    minWidth: 148,\n    display: 'flex',\n    alignItems: 'center',\n    '& span': { paddingLeft: '16px' },\n}))\n\nconst StyledScrollBar = styled(Scrollbar)(() => ({\n    height: 380,\n    position: 'relative',\n    paddingLeft: '16px',\n    paddingRight: '16px',\n}))\n\nconst StyledCard = styled(Card)(() => ({\n    padding: '16px',\n    width: '100%',\n    borderRadius: 0,\n    cursor: 'pointer',\n    position: 'absolute',\n    bottom: '0',\n}))\n\nconst BoardList = ({ data, handleCardClick }) => {\n    const [shouldOpenTitleEditor, setShouldOpenTitleEditor] = useState(false)\n    const [shouldOpenAddCard, setShouldOpenAddCard] = useState(false)\n    const [cardTitleText, setCardTitleText] = useState('')\n    const [columnTitleText, setColumnTitleText] = useState('')\n\n    const dispatch = useDispatch()\n    const { board = {} } = useSelector((state) => state.scrumboard)\n\n    const handleChange = (event) => {\n        let targetName = event.target.name\n        let value = event.target.value\n\n        if (targetName === 'cardTitleText')\n        {\n            if (event.key === 'Enter' && !event.shiftKey) handleAddNewCard()\n            else setCardTitleText(value)\n        } else\n        {\n            if (event.key === 'Enter' && !event.shiftKey) handleRenameList()\n            else setColumnTitleText(value)\n        }\n    }\n\n    const handleRenameList = () => {\n        dispatch(\n            renameListInBoard({\n                boardId: board.id,\n                listId: data.column.id,\n                listTitle: columnTitleText,\n            })\n        )\n        openTitleEditor(false)\n    }\n\n    const openTitleEditor = (value) => {\n        setShouldOpenTitleEditor(value)\n    }\n\n    const openAddCard = (value) => {\n        setShouldOpenAddCard(value)\n    }\n\n    const handleAddNewCard = () => {\n        if (cardTitleText.trim() !== '')\n        {\n            dispatch(\n                addNewCardInList({\n                    boardId: board.id,\n                    listId: data.column.id,\n                    cardTitle: cardTitleText,\n                })\n            )\n            setCardTitleText('')\n        }\n    }\n\n    const handleListDelete = () => {\n        dispatch(\n            deleteListFromBoard({\n                boardId: board.id,\n                listId: data.column.id,\n            })\n        )\n    }\n\n    useEffect(() => {\n        let listTitle = data?.column?.title\n        if (listTitle) setColumnTitleText(listTitle)\n    }, [data])\n\n    let { provided, snapshot, column } = data\n\n    const bgLightGrey = 'rgba(0, 0, 0, 0.01)'\n\n    return (\n        <Card\n            elevation={snapshot.isDragging ? 10 : 3}\n            ref={provided.innerRef}\n            {...provided.draggableProps}\n            {...provided.dragHandleProps}\n            style={{\n                ...provided.draggableProps.style,\n            }}\n            sx={{ mx: '12px', pt: 1, width: 288, position: 'relative' }}\n        >\n            <Droppable droppableId={column.id} direction=\"vertical\" type=\"card\">\n                {(provided, snapshot) => (\n                    <Box ref={provided.innerRef} position=\"relative\">\n                        <JustifyBox pb={1}>\n                            {shouldOpenTitleEditor ? (\n                                <ClickAwayListener\n                                    onClickAway={() => openTitleEditor(false)}\n                                >\n                                    <TextField\n                                        size=\"small\"\n                                        sx={{ pl: 2 }}\n                                        variant=\"outlined\"\n                                        value={columnTitleText}\n                                        onChange={handleChange}\n                                        onKeyDown={handleChange}\n                                        name=\"columnTitleText\"\n                                        InputProps={{\n                                            endAdornment: (\n                                                <InputAdornment position=\"end\">\n                                                    <IconButton\n                                                        size=\"small\"\n                                                        onClick={\n                                                            handleRenameList\n                                                        }\n                                                    >\n                                                        <Icon fontSize=\"small\">\n                                                            done\n                                                        </Icon>\n                                                    </IconButton>\n                                                </InputAdornment>\n                                            ),\n                                        }}\n                                    />\n                                </ClickAwayListener>\n                            ) : (\n                                    <H4\n                                        onClick={() => openTitleEditor(true)}\n                                        sx={{\n                                            py: '4px',\n                                            pl: 2,\n                                            flexGrow: 1,\n                                            textTransform: 'capitalize',\n                                        }}\n                                    >\n                                        {column.title}\n                                    </H4>\n                                )}\n                            <MatxMenu\n                                horizontalPosition=\"right\"\n                                menuButton={\n                                    <IconButton>\n                                        <Icon>more_vert</Icon>\n                                    </IconButton>\n                                }\n                            >\n                                <StyledItem>\n                                    <Icon> settings </Icon>\n                                    <span> Settings </span>\n                                </StyledItem>\n                                <StyledItem onClick={handleListDelete}>\n                                    <Icon> delete </Icon>\n                                    <span> Delete </span>\n                                </StyledItem>\n                            </MatxMenu>\n                        </JustifyBox>\n\n                        <StyledScrollBar>\n                            {column.cardList.map((card, index) => (\n                                <Draggable\n                                    key={card.id}\n                                    draggableId={card.id}\n                                    index={index}\n                                    type=\"card\"\n                                >\n                                    {(provided, snapshot) => (\n                                        <Card\n                                            sx={{\n                                                mb: 2,\n                                                borderRadius: '4px',\n                                                background: bgLightGrey,\n                                            }}\n                                            elevation={\n                                                snapshot.isDragging ? 10 : 3\n                                            }\n                                            onClick={() =>\n                                                handleCardClick({\n                                                    ...card,\n                                                    listId: column.id,\n                                                })\n                                            }\n                                            ref={provided.innerRef}\n                                            {...provided.draggableProps}\n                                            {...provided.dragHandleProps}\n                                            style={{\n                                                ...provided.draggableProps\n                                                    .style,\n                                            }}\n                                        >\n                                            <ScrumBoardCard\n                                                card={card}\n                                            ></ScrumBoardCard>\n                                        </Card>\n                                    )}\n                                </Draggable>\n                            ))}\n                        </StyledScrollBar>\n                        {provided.placeholder}\n                    </Box>\n                )}\n            </Droppable>\n\n            {/* ===================================================== */}\n            {shouldOpenAddCard ? (\n                <ClickAwayListener onClickAway={() => openAddCard(false)}>\n                    <StyledCard elevation={5}>\n                        <TextField\n                            size=\"small\"\n                            sx={{ mb: '12px' }}\n                            variant=\"outlined\"\n                            name=\"cardTitleText\"\n                            value={cardTitleText}\n                            fullWidth\n                            onChange={handleChange}\n                            onKeyDown={handleChange}\n                            InputProps={{\n                                endAdornment: (\n                                    <InputAdornment position=\"end\">\n                                        <IconButton\n                                            size=\"small\"\n                                            onClick={() => openAddCard(false)}\n                                        >\n                                            <Icon fontSize=\"small\">clear</Icon>\n                                        </IconButton>\n                                    </InputAdornment>\n                                ),\n                            }}\n                        />\n                        <Box display=\"flex\" justifyContent=\"flex-end\">\n                            <Button\n                                onClick={handleAddNewCard}\n                                variant=\"contained\"\n                                color=\"primary\"\n                            >\n                                Add\n                            </Button>\n                        </Box>\n                    </StyledCard>\n                </ClickAwayListener>\n            ) : (\n                    <Box display=\"flex\">\n                        <Button\n                            variant=\"contained\"\n                            color=\"primary\"\n                            onClick={() => openAddCard(true)}\n                            sx={{ flexGrow: 1, borderRadius: 0, fontWeight: '500' }}\n                        >\n                            + Add Card\n                    </Button>\n                    </Box>\n                )}\n        </Card>\n    )\n}\n\nexport default BoardList\n"]},"metadata":{},"sourceType":"module"}