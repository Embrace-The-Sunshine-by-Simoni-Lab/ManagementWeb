{"ast":null,"code":"import _toConsumableArray from \"/Users/zhaoyuliu/Desktop/matx-basic/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _objectSpread from \"/Users/zhaoyuliu/Desktop/matx-basic/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _slicedToArray from \"/Users/zhaoyuliu/Desktop/matx-basic/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _defineProperty from \"/Users/zhaoyuliu/Desktop/matx-basic/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\n\nvar _jsxFileName = \"/Users/zhaoyuliu/Desktop/matx-basic/src/app/views/invoice/InvoiceEditor.jsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { Button, Radio, FormControl, FormControlLabel, Divider, RadioGroup, Grid, Table, TableHead, TableRow, TableCell, TableBody, TextField } from '@mui/material';\nimport { useCallback } from 'react';\nimport { Box, styled } from '@mui/system';\nimport React, { useState, useEffect } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { getInvoiceById, addInvoice, updateInvoice } from './InvoiceService';\nimport { ValidatorForm, TextValidator } from 'react-material-ui-form-validator';\nimport { Paragraph } from 'app/components/Typography';\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\nimport DatePicker from '@mui/lab/DatePicker';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar StyledH5 = styled('h5')(function () {\n  return {\n    fontSize: 15\n  };\n});\nvar FlexEndBox = styled(Box)(function () {\n  return {\n    display: 'flex',\n    justifyContent: 'flex-end'\n  };\n});\nvar FormBox = styled(Box)(function () {\n  return {\n    display: 'flex',\n    justifyContent: 'space-between',\n    '& .label': {\n      height: 32\n    }\n  };\n});\nvar StyledTable = styled(Table)(function (_ref) {\n  var theme = _ref.theme;\n  return {\n    marginBottom: 2,\n    '& thead': {\n      '& tr': {\n        background: theme.palette.background.default,\n        '& th': {\n          paddingLeft: 0,\n          paddingRight: 0\n        },\n        '& th:first-of-type': _defineProperty({\n          paddingLeft: '24px !important'\n        }, theme.breakpoints.down('sm'), {\n          paddingLeft: '16px !important'\n        })\n      }\n    },\n    '& tbody': {\n      '& tr': {\n        '& td': {\n          paddingLeft: 0,\n          textTransform: 'capitalize'\n        },\n        '& td:first-of-type': _defineProperty({\n          textTransform: 'capitalize',\n          paddingLeft: '24px !important'\n        }, theme.breakpoints.down('sm'), {\n          paddingLeft: '16px !important'\n        })\n      }\n    }\n  };\n});\n\nvar InvoiceEditor = function InvoiceEditor(_ref2) {\n  _s();\n\n  var isNewInvoice = _ref2.isNewInvoice,\n      toggleInvoiceEditor = _ref2.toggleInvoiceEditor;\n\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      isAlive = _useState2[0],\n      setIsAlive = _useState2[1];\n\n  var _useState3 = useState(initialValues),\n      _useState4 = _slicedToArray(_useState3, 2),\n      state = _useState4[0],\n      setState = _useState4[1];\n\n  var navigate = useNavigate();\n\n  var _useParams = useParams(),\n      id = _useParams.id;\n\n  var generateRandomId = useCallback(function () {\n    var tempId = Math.random().toString();\n    var id = tempId.substr(2, tempId.length - 1);\n    setState(function (state) {\n      return _objectSpread(_objectSpread({}, state), {}, {\n        id: id\n      });\n    });\n  }, []);\n\n  var handleChange = function handleChange(event) {\n    event.persist();\n    setState(_objectSpread(_objectSpread({}, state), {}, _defineProperty({}, event.target.name, event.target.value)));\n  };\n\n  var handleSellerBuyerChange = function handleSellerBuyerChange(event, fieldName) {\n    event.persist();\n    setState(_objectSpread(_objectSpread({}, state), {}, _defineProperty({}, fieldName, _objectSpread(_objectSpread({}, state[fieldName]), {}, _defineProperty({}, event.target.name, event.target.value)))));\n  };\n\n  var handleIvoiceListChange = function handleIvoiceListChange(event, index) {\n    var tempItemList = _toConsumableArray(state.item);\n\n    tempItemList.map(function (element, i) {\n      if (index === i) element[event.target.name] = event.target.value;\n      return element;\n    });\n    setState(_objectSpread(_objectSpread({}, state), {}, {\n      item: tempItemList\n    }));\n  };\n\n  var addItemToInvoiceList = function addItemToInvoiceList() {\n    var tempItemList = _toConsumableArray(state.item);\n\n    tempItemList.push({\n      name: '',\n      unit: '',\n      price: ''\n    });\n    setState(_objectSpread(_objectSpread({}, state), {}, {\n      item: tempItemList\n    }));\n  };\n\n  var deleteItemFromInvoiceList = function deleteItemFromInvoiceList(index) {\n    var tempItemList = _toConsumableArray(state.item);\n\n    tempItemList.splice(index, 1);\n    setState(_objectSpread(_objectSpread({}, state), {}, {\n      item: tempItemList\n    }));\n  };\n\n  var handleDateChange = function handleDateChange(date) {\n    setState(_objectSpread(_objectSpread({}, state), {}, {\n      date: date\n    }));\n  };\n\n  var handleSubmit = function handleSubmit() {\n    setState(_objectSpread(_objectSpread({}, state), {}, {\n      loading: true\n    }));\n\n    var tempState = _objectSpread({}, state);\n\n    delete tempState.loading;\n    if (isNewInvoice) addInvoice(tempState).then(function () {\n      setState(_objectSpread(_objectSpread({}, state), {}, {\n        loading: false\n      }));\n      navigate(\"/invoice/\".concat(state.id));\n      toggleInvoiceEditor();\n    });else updateInvoice(tempState).then(function () {\n      setState(_objectSpread(_objectSpread({}, state), {}, {\n        loading: false\n      }));\n      toggleInvoiceEditor();\n    });\n  };\n\n  useEffect(function () {\n    if (!isNewInvoice) {\n      getInvoiceById(id).then(function (_ref3) {\n        var data = _ref3.data;\n        if (isAlive) setState(_objectSpread({}, data));\n      });\n    } else {\n      generateRandomId();\n    }\n  }, [id, isNewInvoice, isAlive, generateRandomId]);\n  useEffect(function () {\n    return function () {\n      return setIsAlive(false);\n    };\n  }, []);\n  var subTotalCost = 0;\n  var orderNo = state.orderNo,\n      buyer = state.buyer,\n      seller = state.seller,\n      _state$item = state.item,\n      invoiceItemList = _state$item === void 0 ? [] : _state$item,\n      status = state.status,\n      vat = state.vat,\n      currency = state.currency,\n      loading = state.loading;\n  return /*#__PURE__*/_jsxDEV(Box, {\n    py: 2,\n    className: \"invoice-viewer\",\n    children: /*#__PURE__*/_jsxDEV(ValidatorForm, {\n      onSubmit: handleSubmit,\n      onError: function onError(errors) {\n        return null;\n      },\n      children: [/*#__PURE__*/_jsxDEV(FlexEndBox, {\n        px: 2,\n        className: \"viewer_actions\",\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          mb: 3,\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            type: \"button\",\n            variant: \"text\",\n            sx: {\n              mr: 2,\n              py: 1\n            },\n            onClick: function onClick() {\n              return toggleInvoiceEditor();\n            },\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 25\n          }, _this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            variant: \"contained\",\n            color: \"primary\",\n            sx: {\n              py: 1\n            },\n            disabled: loading,\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 25\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 21\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(FormBox, {\n        px: 2,\n        mb: 2,\n        className: \"viewer__order-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(StyledH5, {\n            sx: {\n              mb: 1\n            },\n            children: \"Order Info\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 25\n          }, _this), /*#__PURE__*/_jsxDEV(Paragraph, {\n            sx: {\n              mb: 2\n            },\n            children: \"Order Number\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 25\n          }, _this), /*#__PURE__*/_jsxDEV(TextValidator, {\n            label: \"Order No.\",\n            type: \"text\",\n            fullWidth: true,\n            name: \"orderNo\",\n            value: orderNo,\n            onChange: handleChange,\n            validators: ['required'],\n            errorMessages: ['this field is required']\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 25\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 21\n        }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(FormControl, {\n            component: \"fieldset\",\n            sx: {\n              mb: 2,\n              width: '100%'\n            },\n            children: /*#__PURE__*/_jsxDEV(RadioGroup, {\n              \"aria-label\": \"status\",\n              name: \"status\",\n              value: status,\n              onChange: handleChange,\n              children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n                className: \"label\",\n                value: \"pending\",\n                control: /*#__PURE__*/_jsxDEV(Radio, {\n                  color: \"secondary\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 242,\n                  columnNumber: 46\n                }, _this),\n                label: \"Pending\",\n                labelPlacement: \"start\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 239,\n                columnNumber: 33\n              }, _this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n                className: \"label\",\n                value: \"processing\",\n                control: /*#__PURE__*/_jsxDEV(Radio, {\n                  color: \"secondary\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 249,\n                  columnNumber: 46\n                }, _this),\n                label: \"Processing\",\n                labelPlacement: \"start\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 246,\n                columnNumber: 33\n              }, _this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n                className: \"label\",\n                value: \"delivered\",\n                control: /*#__PURE__*/_jsxDEV(Radio, {\n                  color: \"secondary\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 256,\n                  columnNumber: 46\n                }, _this),\n                label: \"Delivered\",\n                labelPlacement: \"start\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 253,\n                columnNumber: 33\n              }, _this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 233,\n              columnNumber: 29\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 25\n          }, _this), /*#__PURE__*/_jsxDEV(Box, {\n            textAlign: \"right\",\n            children: /*#__PURE__*/_jsxDEV(StyledH5, {\n              sx: {\n                fontWeight: '500'\n              },\n              children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Order date: \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 265,\n                columnNumber: 33\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 264,\n              columnNumber: 29\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 25\n          }, _this), /*#__PURE__*/_jsxDEV(LocalizationProvider, {\n            dateAdapter: AdapterDateFns,\n            children: /*#__PURE__*/_jsxDEV(DatePicker, {\n              value: new Date(),\n              onChange: handleDateChange,\n              renderInput: function renderInput(props) {\n                return /*#__PURE__*/_jsxDEV(TextField, _objectSpread(_objectSpread({}, props), {}, {\n                  variant: \"standard\",\n                  id: \"mui-pickers-date\",\n                  label: \"Order Date\"\n                }), void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 274,\n                  columnNumber: 37\n                }, _this);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 270,\n              columnNumber: 29\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 269,\n            columnNumber: 25\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 21\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 4,\n        justify: \"space-between\",\n        sx: {\n          px: 2,\n          py: '20px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(StyledH5, {\n              sx: {\n                mb: '20px'\n              },\n              children: \"Bill From\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 296,\n              columnNumber: 29\n            }, _this), /*#__PURE__*/_jsxDEV(TextValidator, {\n              sx: {\n                mb: '20px'\n              },\n              label: \"Seller Name\",\n              onChange: function onChange(event) {\n                return handleSellerBuyerChange(event, 'seller');\n              },\n              type: \"text\",\n              name: \"name\",\n              fullWidth: true,\n              value: seller ? seller.name : null,\n              validators: ['required'],\n              errorMessages: ['this field is required']\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 297,\n              columnNumber: 29\n            }, _this), /*#__PURE__*/_jsxDEV(TextValidator, {\n              label: \"Seller Name\",\n              type: \"text\",\n              onChange: function onChange(event) {\n                return handleSellerBuyerChange(event, 'seller');\n              },\n              name: \"address\",\n              fullWidth: true,\n              multiline: true,\n              rowsMax: 4,\n              value: seller ? seller.address : null,\n              validators: ['required'],\n              errorMessages: ['this field is required']\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 310,\n              columnNumber: 29\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 295,\n            columnNumber: 25\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 21\n        }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            textAlign: \"right\",\n            children: [/*#__PURE__*/_jsxDEV(StyledH5, {\n              sx: {\n                mb: '20px'\n              },\n              children: \"Bill To\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 328,\n              columnNumber: 29\n            }, _this), /*#__PURE__*/_jsxDEV(TextValidator, {\n              sx: {\n                mb: '20px'\n              },\n              label: \"Buyer Name\",\n              onChange: function onChange(event) {\n                return handleSellerBuyerChange(event, 'buyer');\n              },\n              type: \"text\",\n              name: \"name\",\n              fullWidth: true,\n              value: buyer ? buyer.name : null,\n              validators: ['required'],\n              errorMessages: ['this field is required']\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 329,\n              columnNumber: 29\n            }, _this), /*#__PURE__*/_jsxDEV(TextValidator, {\n              label: \"Buyer Address\",\n              onChange: function onChange(event) {\n                return handleSellerBuyerChange(event, 'buyer');\n              },\n              type: \"text\",\n              name: \"address\",\n              fullWidth: true,\n              multiline: true,\n              rowsMax: 4,\n              value: buyer ? buyer.address : null,\n              validators: ['required'],\n              errorMessages: ['this field is required']\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 342,\n              columnNumber: 29\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 327,\n            columnNumber: 25\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 326,\n          columnNumber: 21\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(StyledTable, {\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          children: /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"#\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 364,\n              columnNumber: 29\n            }, _this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Item Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 365,\n              columnNumber: 29\n            }, _this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Unit Price\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 366,\n              columnNumber: 29\n            }, _this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Unit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 367,\n              columnNumber: 29\n            }, _this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Cost\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 368,\n              columnNumber: 29\n            }, _this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Action\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 369,\n              columnNumber: 29\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 363,\n            columnNumber: 25\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 362,\n          columnNumber: 21\n        }, _this), /*#__PURE__*/_jsxDEV(TableBody, {\n          children: invoiceItemList.map(function (item, index) {\n            subTotalCost += item.price * item.unit;\n            return /*#__PURE__*/_jsxDEV(TableRow, {\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"left\",\n                children: index + 1\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 378,\n                columnNumber: 37\n              }, _this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"left\",\n                children: /*#__PURE__*/_jsxDEV(TextValidator, {\n                  label: \"Item Name\",\n                  onChange: function onChange(event) {\n                    return handleIvoiceListChange(event, index);\n                  },\n                  type: \"text\",\n                  name: \"name\",\n                  fullWidth: true,\n                  value: item ? item.name : null,\n                  validators: ['required'],\n                  errorMessages: ['this field is required']\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 383,\n                  columnNumber: 41\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 382,\n                columnNumber: 37\n              }, _this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"left\",\n                children: /*#__PURE__*/_jsxDEV(TextValidator, {\n                  label: \"Item Price\",\n                  onChange: function onChange(event) {\n                    return handleIvoiceListChange(event, index);\n                  },\n                  type: \"number\",\n                  name: \"price\",\n                  fullWidth: true,\n                  value: item ? item.price : null,\n                  validators: ['required'],\n                  errorMessages: ['this field is required']\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 403,\n                  columnNumber: 41\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 402,\n                columnNumber: 37\n              }, _this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"left\",\n                children: /*#__PURE__*/_jsxDEV(TextValidator, {\n                  label: \"Item Unit\",\n                  onChange: function onChange(event) {\n                    return handleIvoiceListChange(event, index);\n                  },\n                  type: \"number\",\n                  name: \"unit\",\n                  fullWidth: true,\n                  value: item ? item.unit : null,\n                  validators: ['required'],\n                  errorMessages: ['this field is required']\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 423,\n                  columnNumber: 41\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 422,\n                columnNumber: 37\n              }, _this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"left\",\n                children: item.unit * item.price\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 442,\n                columnNumber: 37\n              }, _this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"left\",\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  onClick: function onClick() {\n                    return deleteItemFromInvoiceList(index);\n                  },\n                  children: \"Delete\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 447,\n                  columnNumber: 41\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 446,\n                columnNumber: 37\n              }, _this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 377,\n              columnNumber: 33\n            }, _this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 373,\n          columnNumber: 21\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 361,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(FlexEndBox, {\n        px: 2,\n        mb: 2,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          onClick: addItemToInvoiceList,\n          children: \"Add Item\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 461,\n          columnNumber: 21\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 460,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(FlexEndBox, {\n        px: 2,\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          display: \"flex\",\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            pr: 6,\n            children: [/*#__PURE__*/_jsxDEV(Paragraph, {\n              sx: {\n                mb: 4\n              },\n              children: \"Sub Total:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 468,\n              columnNumber: 29\n            }, _this), /*#__PURE__*/_jsxDEV(Paragraph, {\n              sx: {\n                mb: 6\n              },\n              children: \"Vat(%):\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 469,\n              columnNumber: 29\n            }, _this), /*#__PURE__*/_jsxDEV(Paragraph, {\n              sx: {\n                mb: '20px'\n              },\n              children: \"currency:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 470,\n              columnNumber: 29\n            }, _this), /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Grand Total:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 472,\n                columnNumber: 33\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 471,\n              columnNumber: 29\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 467,\n            columnNumber: 25\n          }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(Paragraph, {\n              sx: {\n                mb: 2\n              },\n              children: subTotalCost\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 476,\n              columnNumber: 29\n            }, _this), /*#__PURE__*/_jsxDEV(TextValidator, {\n              sx: {\n                mb: 2\n              },\n              label: \"Vat\",\n              type: \"number\",\n              name: \"vat\",\n              value: vat,\n              onChange: handleChange,\n              validators: ['required'],\n              errorMessages: ['this field is required']\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 477,\n              columnNumber: 29\n            }, _this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 487,\n              columnNumber: 29\n            }, _this), /*#__PURE__*/_jsxDEV(TextValidator, {\n              label: \"Currency\",\n              onChange: handleChange,\n              type: \"text\",\n              name: \"currency\",\n              value: currency,\n              validators: ['required'],\n              errorMessages: ['this field is required']\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 488,\n              columnNumber: 29\n            }, _this), /*#__PURE__*/_jsxDEV(Paragraph, {\n              sx: {\n                mt: 2\n              },\n              children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: [currency, subTotalCost + subTotalCost * vat / 100]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 498,\n                columnNumber: 33\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 497,\n              columnNumber: 29\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 475,\n            columnNumber: 25\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 466,\n          columnNumber: 21\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 465,\n        columnNumber: 17\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 13\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 189,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(InvoiceEditor, \"MGi5dMK6eMTiZ2uRxZN0qvaBplk=\", false, function () {\n  return [useNavigate, useParams];\n});\n\n_c = InvoiceEditor;\nvar initialValues = {\n  id: '',\n  orderNo: '',\n  buyer: {\n    name: '',\n    address: ''\n  },\n  seller: {\n    name: '',\n    address: ''\n  },\n  item: [],\n  status: '',\n  vat: '',\n  date: new Date(),\n  currency: '',\n  loading: false\n};\nexport default InvoiceEditor;\n\nvar _c;\n\n$RefreshReg$(_c, \"InvoiceEditor\");","map":{"version":3,"sources":["/Users/zhaoyuliu/Desktop/matx-basic/src/app/views/invoice/InvoiceEditor.jsx"],"names":["Button","Radio","FormControl","FormControlLabel","Divider","RadioGroup","Grid","Table","TableHead","TableRow","TableCell","TableBody","TextField","useCallback","Box","styled","React","useState","useEffect","useParams","useNavigate","getInvoiceById","addInvoice","updateInvoice","ValidatorForm","TextValidator","Paragraph","AdapterDateFns","LocalizationProvider","DatePicker","StyledH5","fontSize","FlexEndBox","display","justifyContent","FormBox","height","StyledTable","theme","marginBottom","background","palette","default","paddingLeft","paddingRight","breakpoints","down","textTransform","InvoiceEditor","isNewInvoice","toggleInvoiceEditor","isAlive","setIsAlive","initialValues","state","setState","navigate","id","generateRandomId","tempId","Math","random","toString","substr","length","handleChange","event","persist","target","name","value","handleSellerBuyerChange","fieldName","handleIvoiceListChange","index","tempItemList","item","map","element","i","addItemToInvoiceList","push","unit","price","deleteItemFromInvoiceList","splice","handleDateChange","date","handleSubmit","loading","tempState","then","data","subTotalCost","orderNo","buyer","seller","invoiceItemList","status","vat","currency","errors","mr","py","mb","width","fontWeight","Date","props","px","address","mt"],"mappings":"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","sourcesContent":["import {\n    Button,\n    Radio,\n    FormControl,\n    FormControlLabel,\n    Divider,\n    RadioGroup,\n    Grid,\n    Table,\n    TableHead,\n    TableRow,\n    TableCell,\n    TableBody,\n    TextField,\n} from '@mui/material'\nimport { useCallback } from 'react'\nimport { Box, styled } from '@mui/system'\nimport React, { useState, useEffect } from 'react'\nimport { useParams, useNavigate } from 'react-router-dom'\nimport { getInvoiceById, addInvoice, updateInvoice } from './InvoiceService'\nimport { ValidatorForm, TextValidator } from 'react-material-ui-form-validator'\nimport { Paragraph } from 'app/components/Typography'\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\nimport LocalizationProvider from '@mui/lab/LocalizationProvider'\nimport DatePicker from '@mui/lab/DatePicker'\n\n\nconst StyledH5 = styled('h5')(() => ({\n    fontSize: 15,\n}))\n\nconst FlexEndBox = styled(Box)(() => ({\n    display: 'flex',\n    justifyContent: 'flex-end',\n}))\n\nconst FormBox = styled(Box)(() => ({\n    display: 'flex',\n    justifyContent: 'space-between',\n    '& .label': { height: 32 },\n}))\n\nconst StyledTable = styled(Table)(({ theme }) => ({\n    marginBottom: 2,\n    '& thead': {\n        '& tr': {\n            background: theme.palette.background.default,\n            '& th': {\n                paddingLeft: 0,\n                paddingRight: 0,\n            },\n            '& th:first-of-type': {\n                paddingLeft: '24px !important',\n                [theme.breakpoints.down('sm')]: {\n                    paddingLeft: '16px !important',\n                },\n            },\n        },\n    },\n    '& tbody': {\n        '& tr': {\n            '& td': {\n                paddingLeft: 0,\n                textTransform: 'capitalize',\n            },\n            '& td:first-of-type': {\n                textTransform: 'capitalize',\n                paddingLeft: '24px !important',\n                [theme.breakpoints.down('sm')]: {\n                    paddingLeft: '16px !important',\n                },\n            },\n        },\n    },\n}))\n\nconst InvoiceEditor = ({ isNewInvoice, toggleInvoiceEditor }) => {\n    const [isAlive, setIsAlive] = useState(true)\n    const [state, setState] = useState(initialValues)\n    const navigate = useNavigate()\n    const { id } = useParams()\n\n    const generateRandomId = useCallback(() => {\n        let tempId = Math.random().toString()\n        let id = tempId.substr(2, tempId.length - 1)\n        setState((state) => ({ ...state, id }))\n    }, [])\n\n    const handleChange = (event) => {\n        event.persist()\n        setState({ ...state, [event.target.name]: event.target.value })\n    }\n\n    const handleSellerBuyerChange = (event, fieldName) => {\n        event.persist()\n        setState({\n            ...state,\n            [fieldName]: {\n                ...state[fieldName],\n                [event.target.name]: event.target.value,\n            },\n        })\n    }\n\n    const handleIvoiceListChange = (event, index) => {\n        let tempItemList = [...state.item]\n        tempItemList.map((element, i) => {\n            if (index === i) element[event.target.name] = event.target.value\n            return element\n        })\n\n        setState({\n            ...state,\n            item: tempItemList,\n        })\n    }\n\n    const addItemToInvoiceList = () => {\n        let tempItemList = [...state.item]\n        tempItemList.push({\n            name: '',\n            unit: '',\n            price: '',\n        })\n        setState({\n            ...state,\n            item: tempItemList,\n        })\n    }\n\n    const deleteItemFromInvoiceList = (index) => {\n        let tempItemList = [...state.item]\n        tempItemList.splice(index, 1)\n\n        setState({\n            ...state,\n            item: tempItemList,\n        })\n    }\n\n    const handleDateChange = (date) => {\n        setState({ ...state, date })\n    }\n\n    const handleSubmit = () => {\n        setState({ ...state, loading: true })\n        let tempState = { ...state }\n        delete tempState.loading\n        if (isNewInvoice)\n            addInvoice(tempState).then(() => {\n                setState({ ...state, loading: false })\n                navigate(`/invoice/${state.id}`)\n                toggleInvoiceEditor()\n            })\n        else\n            updateInvoice(tempState).then(() => {\n                setState({ ...state, loading: false })\n                toggleInvoiceEditor()\n            })\n    }\n\n    useEffect(() => {\n        if (!isNewInvoice) {\n            getInvoiceById(id).then(({ data }) => {\n                if (isAlive) setState({ ...data })\n            })\n        } else {\n            generateRandomId()\n        }\n    }, [id, isNewInvoice, isAlive, generateRandomId])\n\n    useEffect(() => {\n        return () => setIsAlive(false)\n    }, [])\n\n    let subTotalCost = 0\n    let {\n        orderNo,\n        buyer,\n        seller,\n        item: invoiceItemList = [],\n        status,\n        vat,\n        currency,\n        loading,\n    } = state\n\n    return (\n        <Box py={2} className=\"invoice-viewer\">\n            <ValidatorForm onSubmit={handleSubmit} onError={(errors) => null}>\n                <FlexEndBox px={2} className=\"viewer_actions\">\n                    <Box mb={3}>\n                        <Button\n                            type=\"button\"\n                            variant=\"text\"\n                            sx={{ mr: 2, py: 1 }}\n                            onClick={() => toggleInvoiceEditor()}\n                        >\n                            Cancel\n                        </Button>\n                        <Button\n                            type=\"submit\"\n                            variant=\"contained\"\n                            color=\"primary\"\n                            sx={{ py: 1 }}\n                            disabled={loading}\n                        >\n                            Save\n                        </Button>\n                    </Box>\n                </FlexEndBox>\n\n                <FormBox px={2} mb={2} className=\"viewer__order-info\">\n                    <div>\n                        <StyledH5 sx={{ mb: 1 }}>Order Info</StyledH5>\n                        <Paragraph sx={{ mb: 2 }}>Order Number</Paragraph>\n                        <TextValidator\n                            label=\"Order No.\"\n                            type=\"text\"\n                            fullWidth\n                            name=\"orderNo\"\n                            value={orderNo}\n                            onChange={handleChange}\n                            validators={['required']}\n                            errorMessages={['this field is required']}\n                        />\n                    </div>\n                    <div>\n                        <FormControl\n                            component=\"fieldset\"\n                            sx={{ mb: 2, width: '100%' }}\n                        >\n                            <RadioGroup\n                                aria-label=\"status\"\n                                name=\"status\"\n                                value={status}\n                                onChange={handleChange}\n                            >\n                                <FormControlLabel\n                                    className=\"label\"\n                                    value=\"pending\"\n                                    control={<Radio color=\"secondary\" />}\n                                    label=\"Pending\"\n                                    labelPlacement=\"start\"\n                                />\n                                <FormControlLabel\n                                    className=\"label\"\n                                    value=\"processing\"\n                                    control={<Radio color=\"secondary\" />}\n                                    label=\"Processing\"\n                                    labelPlacement=\"start\"\n                                />\n                                <FormControlLabel\n                                    className=\"label\"\n                                    value=\"delivered\"\n                                    control={<Radio color=\"secondary\" />}\n                                    label=\"Delivered\"\n                                    labelPlacement=\"start\"\n                                />\n                            </RadioGroup>\n                        </FormControl>\n\n                        <Box textAlign=\"right\">\n                            <StyledH5 sx={{ fontWeight: '500' }}>\n                                <strong>Order date: </strong>\n                            </StyledH5>\n                        </Box>\n\n                        <LocalizationProvider dateAdapter={AdapterDateFns}>\n                            <DatePicker\n                                value={new Date()}\n                                onChange={handleDateChange}\n                                renderInput={(props) => (\n                                    <TextField\n                                        {...props}\n                                        variant=\"standard\"\n                                        id=\"mui-pickers-date\"\n                                        label=\"Order Date\"\n                                    />\n                                )}\n                            />\n                        </LocalizationProvider>\n                    </div>\n                </FormBox>\n\n                <Divider />\n\n                <Grid\n                    container\n                    spacing={4}\n                    justify=\"space-between\"\n                    sx={{ px: 2, py: '20px' }}\n                >\n                    <Grid item>\n                        <div>\n                            <StyledH5 sx={{ mb: '20px' }}>Bill From</StyledH5>\n                            <TextValidator\n                                sx={{ mb: '20px' }}\n                                label=\"Seller Name\"\n                                onChange={(event) =>\n                                    handleSellerBuyerChange(event, 'seller')\n                                }\n                                type=\"text\"\n                                name=\"name\"\n                                fullWidth\n                                value={seller ? seller.name : null}\n                                validators={['required']}\n                                errorMessages={['this field is required']}\n                            />\n                            <TextValidator\n                                label=\"Seller Name\"\n                                type=\"text\"\n                                onChange={(event) =>\n                                    handleSellerBuyerChange(event, 'seller')\n                                }\n                                name=\"address\"\n                                fullWidth\n                                multiline={true}\n                                rowsMax={4}\n                                value={seller ? seller.address : null}\n                                validators={['required']}\n                                errorMessages={['this field is required']}\n                            />\n                        </div>\n                    </Grid>\n                    <Grid item>\n                        <Box textAlign=\"right\">\n                            <StyledH5 sx={{ mb: '20px' }}>Bill To</StyledH5>\n                            <TextValidator\n                                sx={{ mb: '20px' }}\n                                label=\"Buyer Name\"\n                                onChange={(event) =>\n                                    handleSellerBuyerChange(event, 'buyer')\n                                }\n                                type=\"text\"\n                                name=\"name\"\n                                fullWidth\n                                value={buyer ? buyer.name : null}\n                                validators={['required']}\n                                errorMessages={['this field is required']}\n                            />\n                            <TextValidator\n                                label=\"Buyer Address\"\n                                onChange={(event) =>\n                                    handleSellerBuyerChange(event, 'buyer')\n                                }\n                                type=\"text\"\n                                name=\"address\"\n                                fullWidth\n                                multiline={true}\n                                rowsMax={4}\n                                value={buyer ? buyer.address : null}\n                                validators={['required']}\n                                errorMessages={['this field is required']}\n                            />\n                        </Box>\n                    </Grid>\n                </Grid>\n\n                {/* Item list for editing */}\n                <StyledTable>\n                    <TableHead>\n                        <TableRow>\n                            <TableCell>#</TableCell>\n                            <TableCell>Item Name</TableCell>\n                            <TableCell>Unit Price</TableCell>\n                            <TableCell>Unit</TableCell>\n                            <TableCell>Cost</TableCell>\n                            <TableCell>Action</TableCell>\n                        </TableRow>\n                    </TableHead>\n\n                    <TableBody>\n                        {invoiceItemList.map((item, index) => {\n                            subTotalCost += item.price * item.unit\n                            return (\n                                <TableRow key={index}>\n                                    <TableCell align=\"left\">\n                                        {index + 1}\n                                    </TableCell>\n\n                                    <TableCell align=\"left\">\n                                        <TextValidator\n                                            label=\"Item Name\"\n                                            onChange={(event) =>\n                                                handleIvoiceListChange(\n                                                    event,\n                                                    index\n                                                )\n                                            }\n                                            type=\"text\"\n                                            name=\"name\"\n                                            fullWidth\n                                            value={item ? item.name : null}\n                                            validators={['required']}\n                                            errorMessages={[\n                                                'this field is required',\n                                            ]}\n                                        />\n                                    </TableCell>\n\n                                    <TableCell align=\"left\">\n                                        <TextValidator\n                                            label=\"Item Price\"\n                                            onChange={(event) =>\n                                                handleIvoiceListChange(\n                                                    event,\n                                                    index\n                                                )\n                                            }\n                                            type=\"number\"\n                                            name=\"price\"\n                                            fullWidth\n                                            value={item ? item.price : null}\n                                            validators={['required']}\n                                            errorMessages={[\n                                                'this field is required',\n                                            ]}\n                                        />\n                                    </TableCell>\n\n                                    <TableCell align=\"left\">\n                                        <TextValidator\n                                            label=\"Item Unit\"\n                                            onChange={(event) =>\n                                                handleIvoiceListChange(\n                                                    event,\n                                                    index\n                                                )\n                                            }\n                                            type=\"number\"\n                                            name=\"unit\"\n                                            fullWidth\n                                            value={item ? item.unit : null}\n                                            validators={['required']}\n                                            errorMessages={[\n                                                'this field is required',\n                                            ]}\n                                        />\n                                    </TableCell>\n\n                                    <TableCell align=\"left\">\n                                        {item.unit * item.price}\n                                    </TableCell>\n\n                                    <TableCell align=\"left\">\n                                        <Button\n                                            onClick={() =>\n                                                deleteItemFromInvoiceList(index)\n                                            }\n                                        >\n                                            Delete\n                                        </Button>\n                                    </TableCell>\n                                </TableRow>\n                            )\n                        })}\n                    </TableBody>\n                </StyledTable>\n                <FlexEndBox px={2} mb={2}>\n                    <Button onClick={addItemToInvoiceList}>Add Item</Button>\n                </FlexEndBox>\n\n                {/* total cost calculation */}\n                <FlexEndBox px={2}>\n                    <Box display=\"flex\">\n                        <Box pr={6}>\n                            <Paragraph sx={{ mb: 4 }}>Sub Total:</Paragraph>\n                            <Paragraph sx={{ mb: 6 }}>Vat(%):</Paragraph>\n                            <Paragraph sx={{ mb: '20px' }}>currency:</Paragraph>\n                            <strong>\n                                <p>Grand Total:</p>\n                            </strong>\n                        </Box>\n                        <div>\n                            <Paragraph sx={{ mb: 2 }}>{subTotalCost}</Paragraph>\n                            <TextValidator\n                                sx={{ mb: 2 }}\n                                label=\"Vat\"\n                                type=\"number\"\n                                name=\"vat\"\n                                value={vat}\n                                onChange={handleChange}\n                                validators={['required']}\n                                errorMessages={['this field is required']}\n                            />\n                            <br />\n                            <TextValidator\n                                label=\"Currency\"\n                                onChange={handleChange}\n                                type=\"text\"\n                                name=\"currency\"\n                                value={currency}\n                                validators={['required']}\n                                errorMessages={['this field is required']}\n                            />\n                            <Paragraph sx={{ mt: 2 }}>\n                                <strong>\n                                    {currency}\n                                    {subTotalCost + (subTotalCost * vat) / 100}\n                                </strong>\n                            </Paragraph>\n                        </div>\n                    </Box>\n                </FlexEndBox>\n            </ValidatorForm>\n        </Box>\n    )\n}\n\nconst initialValues = {\n    id: '',\n    orderNo: '',\n    buyer: {\n        name: '',\n        address: '',\n    },\n    seller: {\n        name: '',\n        address: '',\n    },\n    item: [],\n    status: '',\n    vat: '',\n    date: new Date(),\n    currency: '',\n    loading: false,\n}\n\nexport default InvoiceEditor\n"]},"metadata":{},"sourceType":"module"}