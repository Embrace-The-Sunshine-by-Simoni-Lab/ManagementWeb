{"ast":null,"code":"import _objectSpread from \"/Users/zhaoyuliu/Desktop/matx-pro-3.3.0/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _asyncToGenerator from \"/Users/zhaoyuliu/Desktop/matx-pro-3.3.0/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _defineProperty from \"/Users/zhaoyuliu/Desktop/matx-pro-3.3.0/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\n\nvar _jsxFileName = \"/Users/zhaoyuliu/Desktop/matx-pro-3.3.0/src/app/views/forms/invoice-form/InvoiceForm.jsx\",\n    _this = this;\n\nimport _regeneratorRuntime from \"/Users/zhaoyuliu/Desktop/matx-pro-3.3.0/node_modules/@babel/runtime/regenerator/index.js\";\nimport React from 'react';\nimport { Formik } from 'formik';\nimport { Grid, Card, Divider, TextField, MenuItem, Button, Icon } from '@mui/material';\nimport InvoiceItemTable from './InvoiceItemTable';\nimport { calculateAmount } from './InvoiceFormService';\nimport { Box, styled } from '@mui/system';\nimport { H4, Span } from 'app/components/Typography';\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\nimport PickDate from '@mui/lab/DatePicker';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar FlexBox = styled('div')(function () {\n  return {\n    display: 'flex',\n    alignItems: 'center'\n  };\n});\nvar InvoiceRoot = styled('div')(function (_ref) {\n  var theme = _ref.theme;\n  return _defineProperty({\n    margin: '30px'\n  }, theme.breakpoints.down('sm'), {\n    margin: '16px'\n  });\n});\nvar StyledCard = styled(Card)(function (_ref3) {\n  var theme = _ref3.theme;\n  return {\n    padding: '16px',\n    background: theme.palette.background.default\n  };\n});\nvar StyledInput = styled(TextField)(function () {\n  return {\n    minWidth: '188px !important',\n    '& label': {\n      fontSize: '14px' // marginTop: '-8px',\n\n    },\n    '& label.MuiInputLabel-shrink': {\n      marginTop: '0px'\n    },\n    '& .MuiOutlinedInput-root': {\n      '& .MuiOutlinedInput-input': {\n        fontSize: '14px',\n        padding: '10px 14px !important'\n      }\n    }\n  };\n});\nvar DatePicker = styled(PickDate)(function () {\n  return {\n    margin: '8px !important',\n    '& label': {\n      fontSize: '14px'\n    },\n    '& .MuiOutlinedInput-input': {\n      fontSize: '14px',\n      padding: '10px 14px !important'\n    },\n    '& button': {\n      padding: '6px'\n    }\n  };\n});\n\nvar InvoiceForm = function InvoiceForm() {\n  var calculateSubTotal = function calculateSubTotal() {\n    var itemList = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n    var subTotal = 0;\n    itemList.forEach(function (item) {\n      subTotal += calculateAmount(item);\n    });\n    return subTotal;\n  };\n\n  var calculateTotal = function calculateTotal(values) {\n    var total = 0;\n    total += calculateSubTotal(values.items);\n    total += values.shippingCharge || 0;\n    total += values[values.otherField] || 0;\n    return total;\n  };\n\n  var handleSubmit = /*#__PURE__*/function () {\n    var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(values, _ref4) {\n      var isSubmitting;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              isSubmitting = _ref4.isSubmitting;\n              console.log(values);\n\n            case 2:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function handleSubmit(_x, _x2) {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n\n  return /*#__PURE__*/_jsxDEV(InvoiceRoot, {\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      elevation: 3,\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        p: 2,\n        display: \"flex\",\n        children: /*#__PURE__*/_jsxDEV(H4, {\n          sx: {\n            m: 0\n          },\n          children: \"New Invoice\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 21\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(Divider, {\n        sx: {\n          mb: 1\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(Formik, {\n        initialValues: initialValues,\n        onSubmit: handleSubmit,\n        enableReinitialize: true,\n        children: function children(_ref6) {\n          var values = _ref6.values,\n              errors = _ref6.errors,\n              touched = _ref6.touched,\n              handleChange = _ref6.handleChange,\n              handleBlur = _ref6.handleBlur,\n              handleSubmit = _ref6.handleSubmit,\n              isSubmitting = _ref6.isSubmitting,\n              setSubmitting = _ref6.setSubmitting,\n              setFieldValue = _ref6.setFieldValue;\n          return /*#__PURE__*/_jsxDEV(\"form\", {\n            style: {\n              padding: '16px'\n            },\n            onSubmit: handleSubmit,\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              spacing: 3,\n              alignItems: \"center\",\n              children: [/*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                md: 2,\n                sm: 4,\n                xs: 12,\n                children: \"Customer Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 116,\n                columnNumber: 33\n              }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                md: 10,\n                sm: 8,\n                xs: 12,\n                children: /*#__PURE__*/_jsxDEV(StyledInput, {\n                  select: true,\n                  id: \"inputField\",\n                  label: \"Name\",\n                  name: \"customerName\",\n                  size: \"small\",\n                  variant: \"outlined\",\n                  value: values.customerName || '',\n                  onChange: handleChange,\n                  children: customerList.map(function (item, ind) {\n                    return /*#__PURE__*/_jsxDEV(MenuItem, {\n                      value: item,\n                      children: item\n                    }, item, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 131,\n                      columnNumber: 45\n                    }, _this);\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 120,\n                  columnNumber: 37\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 119,\n                columnNumber: 33\n              }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                md: 2,\n                sm: 4,\n                xs: 12,\n                children: \"Invoice#\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 138,\n                columnNumber: 33\n              }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                md: 10,\n                sm: 8,\n                xs: 12,\n                children: /*#__PURE__*/_jsxDEV(StyledInput, {\n                  label: \"Invoice No\",\n                  name: \"invoiceNo\",\n                  size: \"small\",\n                  variant: \"outlined\",\n                  defaultValue: \"INV-000001\",\n                  value: values.invoiceNo,\n                  onChange: handleChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 142,\n                  columnNumber: 37\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 141,\n                columnNumber: 33\n              }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                md: 2,\n                sm: 4,\n                xs: 12,\n                children: \"Order Number\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 153,\n                columnNumber: 33\n              }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                md: 2,\n                sm: 4,\n                xs: 12,\n                children: \"Invoice Date\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 167,\n                columnNumber: 33\n              }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                md: 10,\n                sm: 8,\n                xs: 12,\n                children: /*#__PURE__*/_jsxDEV(Box, {\n                  m: -1,\n                  display: \"flex\",\n                  flexWrap: 1,\n                  children: [/*#__PURE__*/_jsxDEV(LocalizationProvider, {\n                    dateAdapter: AdapterDateFns,\n                    children: /*#__PURE__*/_jsxDEV(DatePicker, {\n                      value: values.invoiceDate,\n                      inputFormat: \"MMMM dd, yyyy\",\n                      onChange: function onChange(date) {\n                        return setFieldValue('invoiceDate', date);\n                      },\n                      renderInput: function renderInput(props) {\n                        return /*#__PURE__*/_jsxDEV(StyledInput, _objectSpread(_objectSpread({}, props), {}, {\n                          variant: \"outlined\",\n                          label: \"Invoice Date\",\n                          sx: {\n                            m: '8px !important'\n                          }\n                        }), void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 185,\n                          columnNumber: 53\n                        }, _this);\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 175,\n                      columnNumber: 45\n                    }, _this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 172,\n                    columnNumber: 41\n                  }, _this), /*#__PURE__*/_jsxDEV(StyledInput, {\n                    sx: {\n                      m: '8px !important'\n                    },\n                    label: \"Terms\",\n                    name: \"terms\",\n                    size: \"small\",\n                    variant: \"outlined\",\n                    value: values.terms || '',\n                    onChange: handleChange,\n                    select: true,\n                    children: paymentTermList.map(function (item, ind) {\n                      return /*#__PURE__*/_jsxDEV(MenuItem, {\n                        value: item,\n                        children: item\n                      }, item, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 209,\n                        columnNumber: 53\n                      }, _this);\n                    })\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 197,\n                    columnNumber: 41\n                  }, _this), /*#__PURE__*/_jsxDEV(LocalizationProvider, {\n                    dateAdapter: AdapterDateFns,\n                    children: /*#__PURE__*/_jsxDEV(DatePicker, {\n                      value: values.invoiceDate,\n                      inputFormat: \"MMMM dd, yyyy\",\n                      onChange: function onChange(date) {\n                        return setFieldValue('dueDate', date);\n                      },\n                      renderInput: function renderInput(props) {\n                        return /*#__PURE__*/_jsxDEV(StyledInput, _objectSpread(_objectSpread({}, props), {}, {\n                          variant: \"outlined\",\n                          label: \"Due Date\",\n                          sx: {\n                            m: '8px !important'\n                          }\n                        }), void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 232,\n                          columnNumber: 53\n                        }, _this);\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 222,\n                      columnNumber: 45\n                    }, _this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 219,\n                    columnNumber: 41\n                  }, _this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 171,\n                  columnNumber: 37\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 170,\n                columnNumber: 33\n              }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                md: 2,\n                sm: 4,\n                xs: 12,\n                children: \"Salesperson Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 250,\n                columnNumber: 33\n              }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                md: 10,\n                sm: 8,\n                xs: 12,\n                children: /*#__PURE__*/_jsxDEV(StyledInput, {\n                  size: \"small\",\n                  variant: \"outlined\",\n                  name: \"salesPersonName\",\n                  label: \"Salesperson Name\",\n                  value: values.salesPersonName || '',\n                  onChange: handleChange,\n                  select: true,\n                  children: customerList.map(function (item, ind) {\n                    return /*#__PURE__*/_jsxDEV(MenuItem, {\n                      value: item,\n                      children: item\n                    }, item, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 264,\n                      columnNumber: 45\n                    }, _this);\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 254,\n                  columnNumber: 37\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 253,\n                columnNumber: 33\n              }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                children: /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 272,\n                  columnNumber: 37\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 271,\n                columnNumber: 33\n              }, _this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 29\n            }, _this), /*#__PURE__*/_jsxDEV(Box, {\n              mb: 4,\n              children: /*#__PURE__*/_jsxDEV(InvoiceItemTable, {\n                values: values,\n                setFieldValue: setFieldValue,\n                handleChange: handleChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 277,\n                columnNumber: 33\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 276,\n              columnNumber: 29\n            }, _this), /*#__PURE__*/_jsxDEV(Box, {\n              mb: 4,\n              children: /*#__PURE__*/_jsxDEV(Grid, {\n                container: true,\n                spacing: 3,\n                children: [/*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 6,\n                  children: /*#__PURE__*/_jsxDEV(TextField, {\n                    label: \"Custom Notes\",\n                    name: \"notes\",\n                    size: \"small\",\n                    variant: \"outlined\",\n                    multiline: true,\n                    rows: 6,\n                    fullWidth: true,\n                    value: values.notes,\n                    onChange: handleChange\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 287,\n                    columnNumber: 41\n                  }, _this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 286,\n                  columnNumber: 37\n                }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 6,\n                  children: /*#__PURE__*/_jsxDEV(StyledCard, {\n                    elevation: 0,\n                    children: /*#__PURE__*/_jsxDEV(Grid, {\n                      container: true,\n                      spacing: 3,\n                      justify: \"space-between\",\n                      alignItems: \"center\",\n                      children: [/*#__PURE__*/_jsxDEV(Grid, {\n                        item: true,\n                        xs: 6,\n                        children: \"Sub Total\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 307,\n                        columnNumber: 49\n                      }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n                        item: true,\n                        xs: 6,\n                        children: /*#__PURE__*/_jsxDEV(Box, {\n                          textAlign: \"right\",\n                          children: calculateSubTotal(values.items).toFixed(2)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 311,\n                          columnNumber: 53\n                        }, _this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 310,\n                        columnNumber: 49\n                      }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n                        item: true,\n                        xs: 6,\n                        children: /*#__PURE__*/_jsxDEV(FlexBox, {\n                          children: [/*#__PURE__*/_jsxDEV(Span, {\n                            sx: {\n                              whiteSpace: 'pre'\n                            },\n                            children: \"Shipping Charges\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 319,\n                            columnNumber: 57\n                          }, _this), /*#__PURE__*/_jsxDEV(StyledInput, {\n                            sx: {\n                              ml: '12px !important'\n                            },\n                            name: \"shippingCharge\",\n                            size: \"small\",\n                            type: \"number\",\n                            variant: \"outlined\",\n                            value: values.shippingCharge || '',\n                            onChange: handleChange\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 327,\n                            columnNumber: 57\n                          }, _this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 318,\n                          columnNumber: 53\n                        }, _this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 317,\n                        columnNumber: 49\n                      }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n                        item: true,\n                        xs: 6,\n                        children: /*#__PURE__*/_jsxDEV(Box, {\n                          textAlign: \"right\",\n                          children: (values.shippingCharge || 0).toFixed(2)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 346,\n                          columnNumber: 53\n                        }, _this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 345,\n                        columnNumber: 49\n                      }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n                        item: true,\n                        xs: 6,\n                        children: /*#__PURE__*/_jsxDEV(FlexBox, {\n                          children: [/*#__PURE__*/_jsxDEV(StyledInput, {\n                            name: \"otherField\",\n                            size: \"small\",\n                            variant: \"outlined\",\n                            value: values.otherField || '',\n                            onChange: handleChange\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 355,\n                            columnNumber: 57\n                          }, _this), /*#__PURE__*/_jsxDEV(StyledInput, {\n                            sx: {\n                              ml: '12px !important'\n                            },\n                            name: values.otherField,\n                            size: \"small\",\n                            variant: \"outlined\",\n                            type: \"number\",\n                            value: values[values.otherField] || '',\n                            onChange: handleChange\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 368,\n                            columnNumber: 57\n                          }, _this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 354,\n                          columnNumber: 53\n                        }, _this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 353,\n                        columnNumber: 49\n                      }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n                        item: true,\n                        xs: 6,\n                        children: /*#__PURE__*/_jsxDEV(Box, {\n                          textAlign: \"right\",\n                          children: (values[values.otherField] || 0).toFixed(2)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 391,\n                          columnNumber: 53\n                        }, _this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 390,\n                        columnNumber: 49\n                      }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n                        item: true,\n                        xs: 6,\n                        children: /*#__PURE__*/_jsxDEV(H4, {\n                          sx: {\n                            m: 0\n                          },\n                          children: \"Total ( $ )\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 402,\n                          columnNumber: 53\n                        }, _this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 401,\n                        columnNumber: 49\n                      }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n                        item: true,\n                        xs: 6,\n                        children: /*#__PURE__*/_jsxDEV(Box, {\n                          textAlign: \"right\",\n                          children: /*#__PURE__*/_jsxDEV(H4, {\n                            sx: {\n                              m: 0\n                            },\n                            children: calculateTotal(values).toFixed(2)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 408,\n                            columnNumber: 57\n                          }, _this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 407,\n                          columnNumber: 53\n                        }, _this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 406,\n                        columnNumber: 49\n                      }, _this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 301,\n                      columnNumber: 45\n                    }, _this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 300,\n                    columnNumber: 41\n                  }, _this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 299,\n                  columnNumber: 37\n                }, _this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 285,\n                columnNumber: 33\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 284,\n              columnNumber: 29\n            }, _this), /*#__PURE__*/_jsxDEV(StyledCard, {\n              elevation: 0,\n              children: /*#__PURE__*/_jsxDEV(Grid, {\n                container: true,\n                spacing: 3,\n                children: [/*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 6,\n                  children: /*#__PURE__*/_jsxDEV(TextField, {\n                    label: \"Terms & Conditions\",\n                    name: \"terms_conditions\",\n                    size: \"small\",\n                    variant: \"outlined\",\n                    multiline: true,\n                    rows: 4,\n                    fullWidth: true,\n                    value: values.terms_conditions,\n                    onChange: handleChange\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 424,\n                    columnNumber: 41\n                  }, _this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 423,\n                  columnNumber: 37\n                }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 6,\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    htmlFor: \"upload-multiple-file\",\n                    children: /*#__PURE__*/_jsxDEV(Button, {\n                      color: \"primary\",\n                      component: \"span\",\n                      variant: \"contained\",\n                      sx: {\n                        textTransform: 'capitalize'\n                      },\n                      children: /*#__PURE__*/_jsxDEV(FlexBox, {\n                        children: [/*#__PURE__*/_jsxDEV(Icon, {\n                          sx: {\n                            pr: 4\n                          },\n                          children: \"cloud_upload\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 447,\n                          columnNumber: 53\n                        }, _this), /*#__PURE__*/_jsxDEV(\"span\", {\n                          children: \"Upload File\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 450,\n                          columnNumber: 53\n                        }, _this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 446,\n                        columnNumber: 49\n                      }, _this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 438,\n                      columnNumber: 45\n                    }, _this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 437,\n                    columnNumber: 41\n                  }, _this), /*#__PURE__*/_jsxDEV(\"input\", {\n                    multiple: true,\n                    type: \"file\",\n                    id: \"upload-multiple-file\",\n                    style: {\n                      display: 'none'\n                    },\n                    onChange: function onChange(e) {\n                      return setFieldValue('files', e.target.files);\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 454,\n                    columnNumber: 41\n                  }, _this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 436,\n                  columnNumber: 37\n                }, _this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 422,\n                columnNumber: 33\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 421,\n              columnNumber: 29\n            }, _this), /*#__PURE__*/_jsxDEV(Box, {\n              mt: 3,\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                color: \"primary\",\n                variant: \"contained\",\n                type: \"submit\",\n                children: \"Submit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 471,\n                columnNumber: 33\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 470,\n              columnNumber: 29\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 25\n          }, _this);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 9\n  }, _this);\n};\n\n_c = InvoiceForm;\nvar paymentTermList = ['NET 15', 'NET 30', 'NET 45', 'NET 60', 'Due end of the month', 'Due on receive'];\nvar customerList = ['customer 1', 'customer 2', 'customer 3', 'customer 4', 'customer 5', 'customer 6', 'customer 7', 'customer 8'];\nvar initialValues = {\n  customerType: '',\n  otherField: 'Adjustment'\n};\nexport default InvoiceForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"InvoiceForm\");","map":{"version":3,"sources":["/Users/zhaoyuliu/Desktop/matx-pro-3.3.0/src/app/views/forms/invoice-form/InvoiceForm.jsx"],"names":["React","Formik","Grid","Card","Divider","TextField","MenuItem","Button","Icon","InvoiceItemTable","calculateAmount","Box","styled","H4","Span","AdapterDateFns","LocalizationProvider","PickDate","FlexBox","display","alignItems","InvoiceRoot","theme","margin","breakpoints","down","StyledCard","padding","background","palette","default","StyledInput","minWidth","fontSize","marginTop","DatePicker","InvoiceForm","calculateSubTotal","itemList","subTotal","forEach","item","calculateTotal","values","total","items","shippingCharge","otherField","handleSubmit","isSubmitting","console","log","m","mb","initialValues","errors","touched","handleChange","handleBlur","setSubmitting","setFieldValue","customerName","customerList","map","ind","invoiceNo","invoiceDate","date","props","terms","paymentTermList","salesPersonName","notes","toFixed","whiteSpace","ml","terms_conditions","textTransform","pr","e","target","files","customerType"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { Formik } from 'formik'\nimport {\n    Grid,\n    Card,\n    Divider,\n    TextField,\n    MenuItem,\n    Button,\n    Icon,\n} from '@mui/material'\nimport InvoiceItemTable from './InvoiceItemTable'\nimport { calculateAmount } from './InvoiceFormService'\nimport { Box, styled } from '@mui/system'\nimport { H4, Span } from 'app/components/Typography'\nimport AdapterDateFns from '@mui/lab/AdapterDateFns'\nimport LocalizationProvider from '@mui/lab/LocalizationProvider'\nimport PickDate from '@mui/lab/DatePicker'\n\nconst FlexBox = styled('div')(() => ({\n    display: 'flex',\n    alignItems: 'center',\n}))\n\nconst InvoiceRoot = styled('div')(({ theme }) => ({\n    margin: '30px',\n    [theme.breakpoints.down('sm')]: {\n        margin: '16px',\n    },\n}))\n\nconst StyledCard = styled(Card)(({ theme }) => ({\n    padding: '16px',\n    background: theme.palette.background.default,\n}))\n\nconst StyledInput = styled(TextField)(() => ({\n    minWidth: '188px !important',\n    '& label': {\n        fontSize: '14px',\n        // marginTop: '-8px',\n    },\n    '& label.MuiInputLabel-shrink': {\n        marginTop: '0px',\n    },\n    '& .MuiOutlinedInput-root': {\n        '& .MuiOutlinedInput-input': {\n            fontSize: '14px',\n            padding: '10px 14px !important',\n        },\n    },\n}))\n\nconst DatePicker = styled(PickDate)(() => ({\n    margin: '8px !important',\n    '& label': { fontSize: '14px' },\n    '& .MuiOutlinedInput-input': {\n        fontSize: '14px',\n        padding: '10px 14px !important',\n    },\n    '& button': { padding: '6px' },\n}))\n\nconst InvoiceForm = () => {\n    const calculateSubTotal = (itemList = []) => {\n        let subTotal = 0\n        itemList.forEach((item) => {\n            subTotal += calculateAmount(item)\n        })\n\n        return subTotal\n    }\n\n    const calculateTotal = (values) => {\n        let total = 0\n        total += calculateSubTotal(values.items)\n        total += values.shippingCharge || 0\n        total += values[values.otherField] || 0\n\n        return total\n    }\n\n    const handleSubmit = async (values, { isSubmitting }) => {\n        console.log(values)\n    }\n\n    return (\n        <InvoiceRoot>\n            <Card elevation={3}>\n                <Box p={2} display=\"flex\">\n                    <H4 sx={{ m: 0 }}>New Invoice</H4>\n                </Box>\n                <Divider sx={{ mb: 1 }} />\n\n                <Formik\n                    initialValues={initialValues}\n                    onSubmit={handleSubmit}\n                    enableReinitialize={true}\n                >\n                    {({\n                        values,\n                        errors,\n                        touched,\n                        handleChange,\n                        handleBlur,\n                        handleSubmit,\n                        isSubmitting,\n                        setSubmitting,\n                        setFieldValue,\n                    }) => (\n                        <form\n                            style={{ padding: '16px' }}\n                            onSubmit={handleSubmit}\n                        >\n                            <Grid container spacing={3} alignItems=\"center\">\n                                <Grid item md={2} sm={4} xs={12}>\n                                    Customer Name\n                                </Grid>\n                                <Grid item md={10} sm={8} xs={12}>\n                                    <StyledInput\n                                        select\n                                        id=\"inputField\"\n                                        label=\"Name\"\n                                        name=\"customerName\"\n                                        size=\"small\"\n                                        variant=\"outlined\"\n                                        value={values.customerName || ''}\n                                        onChange={handleChange}\n                                    >\n                                        {customerList.map((item, ind) => (\n                                            <MenuItem value={item} key={item}>\n                                                {item}\n                                            </MenuItem>\n                                        ))}\n                                    </StyledInput>\n                                </Grid>\n\n                                <Grid item md={2} sm={4} xs={12}>\n                                    Invoice#\n                                </Grid>\n                                <Grid item md={10} sm={8} xs={12}>\n                                    <StyledInput\n                                        label=\"Invoice No\"\n                                        name=\"invoiceNo\"\n                                        size=\"small\"\n                                        variant=\"outlined\"\n                                        defaultValue=\"INV-000001\"\n                                        value={values.invoiceNo}\n                                        onChange={handleChange}\n                                    />\n                                </Grid>\n\n                                <Grid item md={2} sm={4} xs={12}>\n                                    Order Number\n                                </Grid>\n                                {/* <Grid item md={10} sm={8} xs={12}>\n                                    <StyledInput\n                                        label=\"Invoice No\"\n                                        name=\"orderNo\"\n                                        size=\"small\"\n                                        variant=\"outlined\"\n                                        value={values.orderNo}\n                                        onChange={handleChange}\n                                    />\n                                </Grid> */}\n\n                                <Grid item md={2} sm={4} xs={12}>\n                                    Invoice Date\n                                </Grid>\n                                <Grid item md={10} sm={8} xs={12}>\n                                    <Box m={-1} display=\"flex\" flexWrap={1}>\n                                        <LocalizationProvider\n                                            dateAdapter={AdapterDateFns}\n                                        >\n                                            <DatePicker\n                                                value={values.invoiceDate}\n                                                inputFormat=\"MMMM dd, yyyy\"\n                                                onChange={(date) =>\n                                                    setFieldValue(\n                                                        'invoiceDate',\n                                                        date\n                                                    )\n                                                }\n                                                renderInput={(props) => (\n                                                    <StyledInput\n                                                        {...props}\n                                                        variant=\"outlined\"\n                                                        label=\"Invoice Date\"\n                                                        sx={{\n                                                            m: '8px !important',\n                                                        }}\n                                                    />\n                                                )}\n                                            />\n                                        </LocalizationProvider>\n\n                                        <StyledInput\n                                            sx={{ m: '8px !important' }}\n                                            label=\"Terms\"\n                                            name=\"terms\"\n                                            size=\"small\"\n                                            variant=\"outlined\"\n                                            value={values.terms || ''}\n                                            onChange={handleChange}\n                                            select\n                                        >\n                                            {paymentTermList.map(\n                                                (item, ind) => (\n                                                    <MenuItem\n                                                        value={item}\n                                                        key={item}\n                                                    >\n                                                        {item}\n                                                    </MenuItem>\n                                                )\n                                            )}\n                                        </StyledInput>\n\n                                        <LocalizationProvider\n                                            dateAdapter={AdapterDateFns}\n                                        >\n                                            <DatePicker\n                                                value={values.invoiceDate}\n                                                inputFormat=\"MMMM dd, yyyy\"\n                                                onChange={(date) =>\n                                                    setFieldValue(\n                                                        'dueDate',\n                                                        date\n                                                    )\n                                                }\n                                                renderInput={(props) => (\n                                                    <StyledInput\n                                                        {...props}\n                                                        variant=\"outlined\"\n                                                        label=\"Due Date\"\n                                                        sx={{\n                                                            m: '8px !important',\n                                                        }}\n                                                    />\n                                                )}\n                                            />\n                                        </LocalizationProvider>\n                                    </Box>\n                                </Grid>\n\n                                {/* <Grid item xs={12}>\n                                    <Divider />\n                                </Grid> */}\n\n                                <Grid item md={2} sm={4} xs={12}>\n                                    Salesperson Name\n                                </Grid>\n                                <Grid item md={10} sm={8} xs={12}>\n                                    <StyledInput\n                                        size=\"small\"\n                                        variant=\"outlined\"\n                                        name=\"salesPersonName\"\n                                        label=\"Salesperson Name\"\n                                        value={values.salesPersonName || ''}\n                                        onChange={handleChange}\n                                        select\n                                    >\n                                        {customerList.map((item, ind) => (\n                                            <MenuItem value={item} key={item}>\n                                                {item}\n                                            </MenuItem>\n                                        ))}\n                                    </StyledInput>\n                                </Grid>\n\n                                <Grid item xs={12}>\n                                    <Divider />\n                                </Grid>\n                            </Grid>\n\n                            <Box mb={4}>\n                                <InvoiceItemTable\n                                    values={values}\n                                    setFieldValue={setFieldValue}\n                                    handleChange={handleChange}\n                                />\n                            </Box>\n\n                            <Box mb={4}>\n                                <Grid container spacing={3}>\n                                    <Grid item xs={6}>\n                                        <TextField\n                                            label=\"Custom Notes\"\n                                            name=\"notes\"\n                                            size=\"small\"\n                                            variant=\"outlined\"\n                                            multiline\n                                            rows={6}\n                                            fullWidth\n                                            value={values.notes}\n                                            onChange={handleChange}\n                                        />\n                                    </Grid>\n                                    <Grid item xs={6}>\n                                        <StyledCard elevation={0}>\n                                            <Grid\n                                                container\n                                                spacing={3}\n                                                justify=\"space-between\"\n                                                alignItems=\"center\"\n                                            >\n                                                <Grid item xs={6}>\n                                                    Sub Total\n                                                </Grid>\n                                                <Grid item xs={6}>\n                                                    <Box textAlign=\"right\">\n                                                        {calculateSubTotal(\n                                                            values.items\n                                                        ).toFixed(2)}\n                                                    </Box>\n                                                </Grid>\n                                                <Grid item xs={6}>\n                                                    <FlexBox>\n                                                        <Span\n                                                            sx={{\n                                                                whiteSpace:\n                                                                    'pre',\n                                                            }}\n                                                        >\n                                                            Shipping Charges\n                                                        </Span>\n                                                        <StyledInput\n                                                            sx={{\n                                                                ml: '12px !important',\n                                                            }}\n                                                            name=\"shippingCharge\"\n                                                            size=\"small\"\n                                                            type=\"number\"\n                                                            variant=\"outlined\"\n                                                            value={\n                                                                values.shippingCharge ||\n                                                                ''\n                                                            }\n                                                            onChange={\n                                                                handleChange\n                                                            }\n                                                        />\n                                                    </FlexBox>\n                                                </Grid>\n                                                <Grid item xs={6}>\n                                                    <Box textAlign=\"right\">\n                                                        {(\n                                                            values.shippingCharge ||\n                                                            0\n                                                        ).toFixed(2)}\n                                                    </Box>\n                                                </Grid>\n                                                <Grid item xs={6}>\n                                                    <FlexBox>\n                                                        <StyledInput\n                                                            name=\"otherField\"\n                                                            size=\"small\"\n                                                            variant=\"outlined\"\n                                                            value={\n                                                                values.otherField ||\n                                                                ''\n                                                            }\n                                                            onChange={\n                                                                handleChange\n                                                            }\n                                                        />\n\n                                                        <StyledInput\n                                                            sx={{\n                                                                ml: '12px !important',\n                                                            }}\n                                                            name={\n                                                                values.otherField\n                                                            }\n                                                            size=\"small\"\n                                                            variant=\"outlined\"\n                                                            type=\"number\"\n                                                            value={\n                                                                values[\n                                                                values\n                                                                    .otherField\n                                                                ] || ''\n                                                            }\n                                                            onChange={\n                                                                handleChange\n                                                            }\n                                                        />\n                                                    </FlexBox>\n                                                </Grid>\n                                                <Grid item xs={6}>\n                                                    <Box textAlign=\"right\">\n                                                        {(\n                                                            values[\n                                                            values\n                                                                .otherField\n                                                            ] || 0\n                                                        ).toFixed(2)}\n                                                    </Box>\n                                                </Grid>\n\n                                                <Grid item xs={6}>\n                                                    <H4 sx={{ m: 0 }}>\n                                                        Total ( $ )\n                                                    </H4>\n                                                </Grid>\n                                                <Grid item xs={6}>\n                                                    <Box textAlign=\"right\">\n                                                        <H4 sx={{ m: 0 }}>\n                                                            {calculateTotal(\n                                                                values\n                                                            ).toFixed(2)}\n                                                        </H4>\n                                                    </Box>\n                                                </Grid>\n                                            </Grid>\n                                        </StyledCard>\n                                    </Grid>\n                                </Grid>\n                            </Box>\n\n                            <StyledCard elevation={0}>\n                                <Grid container spacing={3}>\n                                    <Grid item xs={6}>\n                                        <TextField\n                                            label=\"Terms & Conditions\"\n                                            name=\"terms_conditions\"\n                                            size=\"small\"\n                                            variant=\"outlined\"\n                                            multiline\n                                            rows={4}\n                                            fullWidth\n                                            value={values.terms_conditions}\n                                            onChange={handleChange}\n                                        />\n                                    </Grid>\n                                    <Grid item xs={6}>\n                                        <label htmlFor=\"upload-multiple-file\">\n                                            <Button\n                                                color=\"primary\"\n                                                component=\"span\"\n                                                variant=\"contained\"\n                                                sx={{\n                                                    textTransform: 'capitalize',\n                                                }}\n                                            >\n                                                <FlexBox>\n                                                    <Icon sx={{ pr: 4 }}>\n                                                        cloud_upload\n                                                    </Icon>\n                                                    <span>Upload File</span>\n                                                </FlexBox>\n                                            </Button>\n                                        </label>\n                                        <input\n                                            multiple\n                                            type=\"file\"\n                                            id=\"upload-multiple-file\"\n                                            style={{ display: 'none' }}\n                                            onChange={(e) =>\n                                                setFieldValue(\n                                                    'files',\n                                                    e.target.files\n                                                )\n                                            }\n                                        />\n                                    </Grid>\n                                </Grid>\n                            </StyledCard>\n\n                            <Box mt={3}>\n                                <Button\n                                    color=\"primary\"\n                                    variant=\"contained\"\n                                    type=\"submit\"\n                                >\n                                    Submit\n                                </Button>\n                            </Box>\n                        </form>\n                    )}\n                </Formik>\n            </Card>\n        </InvoiceRoot>\n    )\n}\n\nconst paymentTermList = [\n    'NET 15',\n    'NET 30',\n    'NET 45',\n    'NET 60',\n    'Due end of the month',\n    'Due on receive',\n]\n\nconst customerList = [\n    'customer 1',\n    'customer 2',\n    'customer 3',\n    'customer 4',\n    'customer 5',\n    'customer 6',\n    'customer 7',\n    'customer 8',\n]\n\nconst initialValues = {\n    customerType: '',\n    otherField: 'Adjustment',\n}\n\nexport default InvoiceForm\n"]},"metadata":{},"sourceType":"module"}