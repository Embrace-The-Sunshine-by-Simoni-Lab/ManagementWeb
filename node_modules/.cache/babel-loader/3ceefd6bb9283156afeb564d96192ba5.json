{"ast":null,"code":"import _objectSpread from \"/Users/zhaoyuliu/Desktop/matx-pro-3.3.0/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _defineProperty from \"/Users/zhaoyuliu/Desktop/matx-pro-3.3.0/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\n\nvar _jsxFileName = \"/Users/zhaoyuliu/Desktop/matx-pro-3.3.0/src/app/views/scrum-board/Board.jsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { Icon, IconButton, Avatar, Tooltip, FormControlLabel, Checkbox } from '@mui/material';\nimport { getBoardById, addListInBoard, getAllMembers, getAllLabels, addMemberInBoard, addNewCardInList, deleteMemberFromBoard } from '../../redux/actions/ScrumBoardActions';\nimport React, { useEffect } from 'react';\nimport { MatxMenu } from 'app/components';\nimport { Link, useParams } from 'react-router-dom';\nimport ScrumBoardContainer from './ScrumBoardContainer';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Box, styled } from '@mui/system';\nimport { H5, Span } from 'app/components/Typography';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar Container = styled('div')(function (_ref) {\n  var theme = _ref.theme;\n  return _defineProperty({\n    margin: '30px'\n  }, theme.breakpoints.down('sm'), {\n    margin: '16px'\n  });\n});\nvar FlexBox = styled(Box)(function () {\n  return {\n    display: 'flex',\n    alignItems: 'center'\n  };\n});\nvar JustifyBox = styled(FlexBox)(function () {\n  return {\n    flexWrap: 'wrap',\n    justifyContent: 'space-between'\n  };\n});\nvar StyledAvatar = styled(Avatar)(function () {\n  return {\n    width: 24,\n    height: 24,\n    marginLeft: '-8px',\n    border: '2px solid white'\n  };\n});\n\nvar Board = function Board() {\n  _s();\n\n  var _useSelector = useSelector(function (state) {\n    return state.scrumboard;\n  }),\n      _useSelector$board = _useSelector.board,\n      board = _useSelector$board === void 0 ? {} : _useSelector$board,\n      _useSelector$memberLi = _useSelector.memberList,\n      memberList = _useSelector$memberLi === void 0 ? [] : _useSelector$memberLi;\n\n  var _useParams = useParams(),\n      boardId = _useParams.id;\n\n  var dispatch = useDispatch();\n  useEffect(function () {\n    dispatch(getBoardById(boardId));\n    dispatch(getAllMembers());\n    dispatch(getAllLabels());\n  }, [boardId, dispatch]);\n\n  var handleAddList = function handleAddList(listTitle) {\n    if (listTitle !== '') {\n      dispatch(addListInBoard({\n        boardId: boardId,\n        listTitle: listTitle\n      }));\n    }\n  };\n\n  var handleAddNewCard = function handleAddNewCard(cardData) {\n    dispatch(addNewCardInList(_objectSpread({\n      boardId: boardId\n    }, cardData)));\n  };\n\n  var handleChange = function handleChange(event) {\n    var memberId = event.target.value;\n    var members = board.members,\n        id = board.id;\n\n    if (members.some(function (member) {\n      return member.id === memberId;\n    })) {\n      dispatch(deleteMemberFromBoard({\n        boardId: id,\n        memberId: memberId\n      }));\n    } else dispatch(addMemberInBoard({\n      boardId: id,\n      memberId: memberId\n    }));\n  };\n\n  var _board$members = board.members,\n      members = _board$members === void 0 ? [] : _board$members,\n      title = board.title,\n      _board$list = board.list,\n      list = _board$list === void 0 ? [] : _board$list;\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"scrum-board\",\n    children: [/*#__PURE__*/_jsxDEV(JustifyBox, {\n      mb: 2,\n      children: [/*#__PURE__*/_jsxDEV(FlexBox, {\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          to: \"/scrum-board\",\n          children: /*#__PURE__*/_jsxDEV(IconButton, {\n            children: /*#__PURE__*/_jsxDEV(Icon, {\n              children: \"arrow_back\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 29\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 25\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 21\n        }, _this), /*#__PURE__*/_jsxDEV(H5, {\n          sx: {\n            ml: 1,\n            textTransform: 'capitalize'\n          },\n          children: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 21\n        }, _this), /*#__PURE__*/_jsxDEV(IconButton, {\n          sx: {\n            ml: 1\n          },\n          children: /*#__PURE__*/_jsxDEV(Icon, {\n            children: \"star_outline\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 25\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 21\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(FlexBox, {\n        mr: 1,\n        position: \"relative\",\n        children: [members.map(function (member, index) {\n          return /*#__PURE__*/_jsxDEV(Tooltip, {\n            title: member.name,\n            fontSize: \"large\",\n            children: /*#__PURE__*/_jsxDEV(StyledAvatar, {\n              src: member.avatar\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 29\n            }, _this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 25\n          }, _this);\n        }), /*#__PURE__*/_jsxDEV(MatxMenu, {\n          horizontalPosition: \"right\",\n          shouldCloseOnItemClick: false,\n          menuButton: /*#__PURE__*/_jsxDEV(Tooltip, {\n            title: 'Add',\n            fontSize: \"large\",\n            children: /*#__PURE__*/_jsxDEV(StyledAvatar, {\n              sx: {\n                cursor: 'pointer'\n              },\n              children: \"+\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 33\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 29\n          }, _this),\n          children: memberList.map(function (user) {\n            return /*#__PURE__*/_jsxDEV(FormControlLabel, {\n              sx: {\n                ml: 0\n              },\n              control: /*#__PURE__*/_jsxDEV(Checkbox, {\n                checked: members.some(function (member) {\n                  return member.id === user.id;\n                }),\n                onChange: handleChange,\n                value: user.id\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 135,\n                columnNumber: 37\n              }, _this),\n              label: /*#__PURE__*/_jsxDEV(FlexBox, {\n                children: [/*#__PURE__*/_jsxDEV(Avatar, {\n                  src: user.avatar,\n                  sx: {\n                    width: 24,\n                    height: 24\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 145,\n                  columnNumber: 41\n                }, _this), /*#__PURE__*/_jsxDEV(Span, {\n                  sx: {\n                    ml: '12px'\n                  },\n                  children: user.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 149,\n                  columnNumber: 41\n                }, _this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 144,\n                columnNumber: 37\n              }, _this)\n            }, user.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 29\n            }, _this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 21\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(Box, {\n      position: \"relative\",\n      children: /*#__PURE__*/_jsxDEV(ScrumBoardContainer, {\n        list: list,\n        handleAddList: handleAddList,\n        handleAddNewCard: handleAddNewCard\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 17\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 13\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(Board, \"ont6Jqj49kyzL/5nW25VmqRDtaM=\", false, function () {\n  return [useSelector, useParams, useDispatch];\n});\n\n_c = Board;\nexport default Board;\n\nvar _c;\n\n$RefreshReg$(_c, \"Board\");","map":{"version":3,"sources":["/Users/zhaoyuliu/Desktop/matx-pro-3.3.0/src/app/views/scrum-board/Board.jsx"],"names":["Icon","IconButton","Avatar","Tooltip","FormControlLabel","Checkbox","getBoardById","addListInBoard","getAllMembers","getAllLabels","addMemberInBoard","addNewCardInList","deleteMemberFromBoard","React","useEffect","MatxMenu","Link","useParams","ScrumBoardContainer","useDispatch","useSelector","Box","styled","H5","Span","Container","theme","margin","breakpoints","down","FlexBox","display","alignItems","JustifyBox","flexWrap","justifyContent","StyledAvatar","width","height","marginLeft","border","Board","state","scrumboard","board","memberList","boardId","id","dispatch","handleAddList","listTitle","handleAddNewCard","cardData","handleChange","event","memberId","target","value","members","some","member","title","list","ml","textTransform","map","index","name","avatar","cursor","user"],"mappings":"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","sourcesContent":["import {\n    Icon,\n    IconButton,\n    Avatar,\n    Tooltip,\n    FormControlLabel,\n    Checkbox,\n} from '@mui/material'\nimport {\n    getBoardById,\n    addListInBoard,\n    getAllMembers,\n    getAllLabels,\n    addMemberInBoard,\n    addNewCardInList,\n    deleteMemberFromBoard,\n} from '../../redux/actions/ScrumBoardActions'\nimport React, { useEffect } from 'react'\nimport { MatxMenu } from 'app/components'\nimport { Link, useParams } from 'react-router-dom'\nimport ScrumBoardContainer from './ScrumBoardContainer'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Box, styled } from '@mui/system'\nimport { H5, Span } from 'app/components/Typography'\n\nconst Container = styled('div')(({ theme }) => ({\n    margin: '30px',\n    [theme.breakpoints.down('sm')]: {\n        margin: '16px',\n    },\n}))\n\nconst FlexBox = styled(Box)(() => ({\n    display: 'flex',\n    alignItems: 'center',\n}))\n\nconst JustifyBox = styled(FlexBox)(() => ({\n    flexWrap: 'wrap',\n    justifyContent: 'space-between',\n}))\n\nconst StyledAvatar = styled(Avatar)(() => ({\n    width: 24,\n    height: 24,\n    marginLeft: '-8px',\n    border: '2px solid white',\n}))\n\nconst Board = () => {\n    const { board = {}, memberList = [] } = useSelector(\n        (state) => state.scrumboard\n    )\n    const { id: boardId } = useParams()\n    const dispatch = useDispatch()\n\n    useEffect(() => {\n        dispatch(getBoardById(boardId))\n        dispatch(getAllMembers())\n        dispatch(getAllLabels())\n    }, [boardId, dispatch])\n\n    const handleAddList = (listTitle) => {\n        if (listTitle !== '') {\n            dispatch(\n                addListInBoard({\n                    boardId,\n                    listTitle,\n                })\n            )\n        }\n    }\n\n    const handleAddNewCard = (cardData) => {\n        dispatch(\n            addNewCardInList({\n                boardId,\n                ...cardData,\n            })\n        )\n    }\n\n    const handleChange = (event) => {\n        let memberId = event.target.value\n        let { members, id } = board\n\n        if (members.some((member) => member.id === memberId)) {\n            dispatch(deleteMemberFromBoard({ boardId: id, memberId }))\n        } else dispatch(addMemberInBoard({ boardId: id, memberId }))\n    }\n\n    let { members = [], title, list = [] } = board\n\n    return (\n        <Container className=\"scrum-board\">\n            <JustifyBox mb={2}>\n                <FlexBox>\n                    <Link to=\"/scrum-board\">\n                        <IconButton>\n                            <Icon>arrow_back</Icon>\n                        </IconButton>\n                    </Link>\n                    <H5 sx={{ ml: 1, textTransform: 'capitalize' }}>{title}</H5>\n                    <IconButton sx={{ ml: 1 }}>\n                        <Icon>star_outline</Icon>\n                    </IconButton>\n                </FlexBox>\n\n                <FlexBox mr={1} position=\"relative\">\n                    {members.map((member, index) => (\n                        <Tooltip\n                            key={index}\n                            title={member.name}\n                            fontSize=\"large\"\n                        >\n                            <StyledAvatar src={member.avatar} />\n                        </Tooltip>\n                    ))}\n                    <MatxMenu\n                        horizontalPosition=\"right\"\n                        shouldCloseOnItemClick={false}\n                        menuButton={\n                            <Tooltip title={'Add'} fontSize=\"large\">\n                                <StyledAvatar sx={{ cursor: 'pointer' }}>\n                                    +\n                                </StyledAvatar>\n                            </Tooltip>\n                        }\n                    >\n                        {memberList.map((user) => (\n                            <FormControlLabel\n                                sx={{ ml: 0 }}\n                                key={user.id}\n                                control={\n                                    <Checkbox\n                                        checked={members.some(\n                                            (member) => member.id === user.id\n                                        )}\n                                        onChange={handleChange}\n                                        value={user.id}\n                                    />\n                                }\n                                label={\n                                    <FlexBox>\n                                        <Avatar \n                                        src={user.avatar} \n                                        sx={{ width: 24, height: 24 }}\n                                        />\n                                        <Span sx={{ ml: '12px' }}>\n                                            {user.name}\n                                        </Span>\n                                    </FlexBox>\n                                }\n                            />\n                        ))}\n                    </MatxMenu>\n                </FlexBox>\n            </JustifyBox>\n\n            <Box position=\"relative\">\n                <ScrumBoardContainer\n                    list={list}\n                    handleAddList={handleAddList}\n                    handleAddNewCard={handleAddNewCard}\n                ></ScrumBoardContainer>\n            </Box>\n        </Container>\n    )\n}\n\nexport default Board\n"]},"metadata":{},"sourceType":"module"}