{"ast":null,"code":"import _defineProperty from \"/Users/zhaoyuliu/Desktop/matx-basic/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _objectSpread from \"/Users/zhaoyuliu/Desktop/matx-basic/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _slicedToArray from \"/Users/zhaoyuliu/Desktop/matx-basic/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\n\nvar _jsxFileName = \"/Users/zhaoyuliu/Desktop/matx-basic/src/app/views/CRUD/MemberEditorDialog.jsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { generateRandomId } from 'app/utils/utils';\nimport React, { useState, useEffect } from 'react';\nimport { getUserById, updateUser, addNewUser } from './TableService';\nimport { ValidatorForm, TextValidator } from 'react-material-ui-form-validator';\nimport { Dialog, Button, Grid, FormControlLabel, Switch } from '@mui/material';\nimport { Box, styled } from '@mui/system';\nimport { H4 } from 'app/components/Typography';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar TextField = styled(TextValidator)(function () {\n  return {\n    width: '100%',\n    marginBottom: '16px'\n  };\n});\nvar FormHandlerBox = styled('div')(function () {\n  return {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'space-between'\n  };\n});\n\nvar MemberEditorDialog = function MemberEditorDialog(_ref) {\n  _s();\n\n  var uid = _ref.uid,\n      open = _ref.open,\n      handleClose = _ref.handleClose;\n\n  var _useState = useState({\n    name: '',\n    email: '',\n    phone: '',\n    balance: '',\n    age: '',\n    company: '',\n    address: '',\n    isActive: false\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      state = _useState2[0],\n      setState = _useState2[1];\n\n  var handleChange = function handleChange(event, source) {\n    event.persist();\n\n    if (source === 'switch') {\n      setState(_objectSpread(_objectSpread({}, state), {}, {\n        isActive: event.target.checked\n      }));\n      return;\n    }\n\n    setState(_objectSpread(_objectSpread({}, state), {}, _defineProperty({}, event.target.name, event.target.value)));\n  };\n\n  var handleFormSubmit = function handleFormSubmit() {\n    var id = state.id;\n\n    if (id) {\n      updateUser(_objectSpread({}, state)).then(function () {\n        handleClose();\n      });\n    } else {\n      addNewUser(_objectSpread({\n        id: generateRandomId()\n      }, state)).then(function () {\n        handleClose();\n      });\n    }\n  };\n\n  useEffect(function () {\n    getUserById(uid).then(function (data) {\n      return setState(_objectSpread({}, data.data));\n    });\n  }, [uid]);\n  return /*#__PURE__*/_jsxDEV(Dialog, {\n    onClose: handleClose,\n    open: open,\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      p: 3,\n      children: [/*#__PURE__*/_jsxDEV(H4, {\n        sx: {\n          mb: '20px'\n        },\n        children: \"Update Member\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(ValidatorForm, {\n        onSubmit: handleFormSubmit,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          sx: {\n            mb: '16px'\n          },\n          container: true,\n          spacing: 4,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            sm: 6,\n            xs: 12,\n            children: [/*#__PURE__*/_jsxDEV(TextField, {\n              label: \"Name\",\n              type: \"text\",\n              name: \"name\",\n              value: state === null || state === void 0 ? void 0 : state.name,\n              onChange: handleChange,\n              validators: ['required'],\n              errorMessages: ['this field is required']\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 29\n            }, _this), /*#__PURE__*/_jsxDEV(TextField, {\n              label: \"Email\",\n              type: \"text\",\n              name: \"email\",\n              value: state === null || state === void 0 ? void 0 : state.email,\n              onChange: handleChange,\n              validators: ['required'],\n              errorMessages: ['this field is required']\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 29\n            }, _this), /*#__PURE__*/_jsxDEV(TextField, {\n              label: \"Phone\",\n              type: \"text\",\n              name: \"phone\",\n              value: state === null || state === void 0 ? void 0 : state.phone,\n              onChange: handleChange,\n              validators: ['required'],\n              errorMessages: ['this field is required']\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 29\n            }, _this), /*#__PURE__*/_jsxDEV(TextField, {\n              label: \"Balance\",\n              onChange: handleChange,\n              type: \"number\",\n              name: \"balance\",\n              value: state === null || state === void 0 ? void 0 : state.balance,\n              validators: ['required'],\n              errorMessages: ['this field is required']\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 29\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 25\n          }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            sm: 6,\n            xs: 12,\n            children: [/*#__PURE__*/_jsxDEV(TextField, {\n              label: \"Age\",\n              onChange: handleChange,\n              type: \"number\",\n              name: \"age\",\n              value: state === null || state === void 0 ? void 0 : state.age,\n              validators: ['required'],\n              errorMessages: ['this field is required']\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 29\n            }, _this), /*#__PURE__*/_jsxDEV(TextField, {\n              label: \"Company\",\n              onChange: handleChange,\n              type: \"text\",\n              name: \"company\",\n              value: state === null || state === void 0 ? void 0 : state.company,\n              validators: ['required'],\n              errorMessages: ['this field is required']\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 29\n            }, _this), /*#__PURE__*/_jsxDEV(TextField, {\n              label: \"Address\",\n              onChange: handleChange,\n              type: \"text\",\n              name: \"address\",\n              value: state === null || state === void 0 ? void 0 : state.address,\n              validators: ['required'],\n              errorMessages: ['this field is required']\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 29\n            }, _this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n              sx: {\n                my: '20px'\n              },\n              control: /*#__PURE__*/_jsxDEV(Switch, {\n                checked: state === null || state === void 0 ? void 0 : state.isActive,\n                onChange: function onChange(event) {\n                  return handleChange(event, 'switch');\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 149,\n                columnNumber: 37\n              }, _this),\n              label: \"Active Customer\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 29\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 25\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, _this), /*#__PURE__*/_jsxDEV(FormHandlerBox, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            color: \"primary\",\n            type: \"submit\",\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 25\n          }, _this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"outlined\",\n            color: \"secondary\",\n            onClick: function onClick() {\n              return handleClose();\n            },\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 25\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 21\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(MemberEditorDialog, \"9Q72DeYeJE3dBlL1oVjpI3npm88=\");\n\n_c = MemberEditorDialog;\nexport default MemberEditorDialog;\n\nvar _c;\n\n$RefreshReg$(_c, \"MemberEditorDialog\");","map":{"version":3,"sources":["/Users/zhaoyuliu/Desktop/matx-basic/src/app/views/CRUD/MemberEditorDialog.jsx"],"names":["generateRandomId","React","useState","useEffect","getUserById","updateUser","addNewUser","ValidatorForm","TextValidator","Dialog","Button","Grid","FormControlLabel","Switch","Box","styled","H4","TextField","width","marginBottom","FormHandlerBox","display","alignItems","justifyContent","MemberEditorDialog","uid","open","handleClose","name","email","phone","balance","age","company","address","isActive","state","setState","handleChange","event","source","persist","target","checked","value","handleFormSubmit","id","then","data","mb","my"],"mappings":"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","sourcesContent":["import { generateRandomId } from 'app/utils/utils'\r\nimport React, { useState, useEffect } from 'react'\r\nimport { getUserById, updateUser, addNewUser } from './TableService'\r\nimport { ValidatorForm, TextValidator } from 'react-material-ui-form-validator'\r\nimport { Dialog, Button, Grid, FormControlLabel, Switch } from '@mui/material'\r\nimport { Box, styled } from '@mui/system'\r\nimport { H4 } from 'app/components/Typography'\r\n\r\nconst TextField = styled(TextValidator)(() => ({\r\n    width: '100%',\r\n    marginBottom: '16px',\r\n}))\r\n\r\nconst FormHandlerBox = styled('div')(() => ({\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'space-between',\r\n}))\r\n\r\nconst MemberEditorDialog = ({ uid, open, handleClose }) => {\r\n    const [state, setState] = useState({\r\n        name: '',\r\n        email: '',\r\n        phone: '',\r\n        balance: '',\r\n        age: '',\r\n        company: '',\r\n        address: '',\r\n        isActive: false,\r\n    })\r\n\r\n    const handleChange = (event, source) => {\r\n        event.persist()\r\n        if (source === 'switch') {\r\n            setState({\r\n                ...state,\r\n                isActive: event.target.checked,\r\n            })\r\n            return\r\n        }\r\n\r\n        setState({\r\n            ...state,\r\n            [event.target.name]: event.target.value,\r\n        })\r\n    }\r\n\r\n    const handleFormSubmit = () => {\r\n        let { id } = state\r\n        if (id) {\r\n            updateUser({\r\n                ...state,\r\n            }).then(() => {\r\n                handleClose()\r\n            })\r\n        } else {\r\n            addNewUser({\r\n                id: generateRandomId(),\r\n                ...state,\r\n            }).then(() => {\r\n                handleClose()\r\n            })\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        getUserById(uid).then((data) => setState({ ...data.data }))\r\n    }, [uid])\r\n\r\n    return (\r\n        <Dialog onClose={handleClose} open={open}>\r\n            <Box p={3}>\r\n                <H4 sx={{ mb: '20px' }}>Update Member</H4>\r\n                <ValidatorForm onSubmit={handleFormSubmit}>\r\n                    <Grid sx={{ mb: '16px' }} container spacing={4}>\r\n                        <Grid item sm={6} xs={12}>\r\n                            <TextField\r\n                                label=\"Name\"\r\n                                type=\"text\"\r\n                                name=\"name\"\r\n                                value={state?.name}\r\n                                onChange={handleChange}\r\n                                validators={['required']}\r\n                                errorMessages={['this field is required']}\r\n                            />\r\n                            <TextField\r\n                                label=\"Email\"\r\n                                type=\"text\"\r\n                                name=\"email\"\r\n                                value={state?.email}\r\n                                onChange={handleChange}\r\n                                validators={['required']}\r\n                                errorMessages={['this field is required']}\r\n                            />\r\n\r\n                            <TextField\r\n                                label=\"Phone\"\r\n                                type=\"text\"\r\n                                name=\"phone\"\r\n                                value={state?.phone}\r\n                                onChange={handleChange}\r\n                                validators={['required']}\r\n                                errorMessages={['this field is required']}\r\n                            />\r\n\r\n                            <TextField\r\n                                label=\"Balance\"\r\n                                onChange={handleChange}\r\n                                type=\"number\"\r\n                                name=\"balance\"\r\n                                value={state?.balance}\r\n                                validators={['required']}\r\n                                errorMessages={['this field is required']}\r\n                            />\r\n                        </Grid>\r\n\r\n                        <Grid item sm={6} xs={12}>\r\n                            <TextField\r\n                                label=\"Age\"\r\n                                onChange={handleChange}\r\n                                type=\"number\"\r\n                                name=\"age\"\r\n                                value={state?.age}\r\n                                validators={['required']}\r\n                                errorMessages={['this field is required']}\r\n                            />\r\n                            <TextField\r\n                                label=\"Company\"\r\n                                onChange={handleChange}\r\n                                type=\"text\"\r\n                                name=\"company\"\r\n                                value={state?.company}\r\n                                validators={['required']}\r\n                                errorMessages={['this field is required']}\r\n                            />\r\n                            <TextField\r\n                                label=\"Address\"\r\n                                onChange={handleChange}\r\n                                type=\"text\"\r\n                                name=\"address\"\r\n                                value={state?.address}\r\n                                validators={['required']}\r\n                                errorMessages={['this field is required']}\r\n                            />\r\n\r\n                            <FormControlLabel\r\n                                sx={{ my: '20px' }}\r\n                                control={\r\n                                    <Switch\r\n                                        checked={state?.isActive}\r\n                                        onChange={(event) =>\r\n                                            handleChange(event, 'switch')\r\n                                        }\r\n                                    />\r\n                                }\r\n                                label=\"Active Customer\"\r\n                            />\r\n                        </Grid>\r\n                    </Grid>\r\n\r\n                    <FormHandlerBox>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            type=\"submit\"\r\n                        >\r\n                            Save\r\n                        </Button>\r\n                        <Button\r\n                            variant=\"outlined\"\r\n                            color=\"secondary\"\r\n                            onClick={() => handleClose()}\r\n                        >\r\n                            Cancel\r\n                        </Button>\r\n                    </FormHandlerBox>\r\n                </ValidatorForm>\r\n            </Box>\r\n        </Dialog>\r\n    )\r\n}\r\n\r\nexport default MemberEditorDialog\r\n"]},"metadata":{},"sourceType":"module"}