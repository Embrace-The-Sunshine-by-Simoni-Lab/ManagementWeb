{"ast":null,"code":"import _slicedToArray from \"/Users/zhaoyuliu/Desktop/matx-basic/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _defineProperty from \"/Users/zhaoyuliu/Desktop/matx-basic/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\n\nvar _jsxFileName = \"/Users/zhaoyuliu/Desktop/matx-basic/src/app/components/NotificationBar2/NotificationBar2.jsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState } from 'react';\nimport useSettings from 'app/hooks/useSettings';\nimport NotificationCard from './NotificationCard';\nimport { styled, useTheme, Box } from '@mui/system';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { themeShadows } from '../MatxTheme/themeColors';\nimport { getNotification } from '../../redux/actions/NotificationActions';\nimport { Icon, Badge, Button, IconButton, Drawer, ThemeProvider } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar NotificationBox = styled('div')(function (_ref) {\n  var theme = _ref.theme;\n  return _defineProperty({\n    width: 360\n  }, theme.breakpoints.down('xs'), {\n    width: '100vw'\n  });\n});\nvar Notification = styled('div')(function () {\n  return {\n    padding: '16px',\n    display: 'flex',\n    alignItems: 'center',\n    boxShadow: themeShadows[6],\n    \"& h5\": {\n      marginLeft: '8px',\n      marginTop: 0,\n      marginBottom: 0,\n      fontWeight: '500'\n    }\n  };\n});\n\nvar NotificationBar2 = function NotificationBar2() {\n  _s();\n\n  var theme = useTheme();\n  var dispatch = useDispatch();\n\n  var _useSettings = useSettings(),\n      settings = _useSettings.settings;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      panelOpen = _useState2[0],\n      setPanelOpen = _useState2[1];\n\n  var notifcationList = useSelector(function (state) {\n    return state.notifications;\n  });\n\n  var handleDrawerToggle = function handleDrawerToggle() {\n    if (!panelOpen) {\n      dispatch(getNotification());\n    }\n\n    setPanelOpen(!panelOpen);\n  };\n\n  var parentThemePalette = theme.palette;\n  return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n    theme: settings.themes[settings.activeTheme],\n    children: [/*#__PURE__*/_jsxDEV(IconButton, {\n      onClick: handleDrawerToggle,\n      style: {\n        color: parentThemePalette.type === 'light' ? parentThemePalette.text.secondary : parentThemePalette.text.primary\n      },\n      children: /*#__PURE__*/_jsxDEV(Badge, {\n        color: \"secondary\",\n        badgeContent: 5,\n        children: /*#__PURE__*/_jsxDEV(Icon, {\n          children: \"notifications\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(Drawer, {\n      width: '100px',\n      variant: \"temporary\",\n      anchor: 'right',\n      open: panelOpen,\n      onClose: handleDrawerToggle,\n      ModalProps: {\n        keepMounted: true\n      },\n      children: /*#__PURE__*/_jsxDEV(NotificationBox, {\n        children: [/*#__PURE__*/_jsxDEV(Notification, {\n          children: [/*#__PURE__*/_jsxDEV(Icon, {\n            color: \"primary\",\n            children: \"notifications\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 25\n          }, _this), /*#__PURE__*/_jsxDEV(\"h5\", {\n            children: \"Notifications\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 25\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }, _this), notifcationList.map(function (notification, ind) {\n          return /*#__PURE__*/_jsxDEV(NotificationCard, {\n            notification: notification,\n            isLastIndex: ind === notifcationList.length - 1,\n            isFirstIndex: ind === 0\n          }, ind, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 25\n          }, _this);\n        }), !!notifcationList.length && /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            m: 4,\n            textAlign: 'center'\n          },\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            color: \"primary\",\n            sx: {\n              width: '100%'\n            },\n            children: \"View All Notifications\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 29\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 25\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(NotificationBar2, \"bk3AyoX3/LaCmwQ7uFxmusia7qk=\", false, function () {\n  return [useTheme, useDispatch, useSettings, useSelector];\n});\n\n_c = NotificationBar2;\nexport default NotificationBar2;\n\nvar _c;\n\n$RefreshReg$(_c, \"NotificationBar2\");","map":{"version":3,"sources":["/Users/zhaoyuliu/Desktop/matx-basic/src/app/components/NotificationBar2/NotificationBar2.jsx"],"names":["React","useState","useSettings","NotificationCard","styled","useTheme","Box","useDispatch","useSelector","themeShadows","getNotification","Icon","Badge","Button","IconButton","Drawer","ThemeProvider","NotificationBox","theme","width","breakpoints","down","Notification","padding","display","alignItems","boxShadow","marginLeft","marginTop","marginBottom","fontWeight","NotificationBar2","dispatch","settings","panelOpen","setPanelOpen","notifcationList","state","notifications","handleDrawerToggle","parentThemePalette","palette","themes","activeTheme","color","type","text","secondary","primary","keepMounted","map","notification","ind","length","m","textAlign"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { useState } from 'react'\nimport useSettings from 'app/hooks/useSettings'\nimport NotificationCard from './NotificationCard'\nimport { styled, useTheme, Box } from '@mui/system'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { themeShadows } from '../MatxTheme/themeColors'\nimport { getNotification } from '../../redux/actions/NotificationActions'\nimport {\n    Icon,\n    Badge,\n    Button,\n    IconButton,\n    Drawer,\n    ThemeProvider\n} from '@mui/material'\n\nconst NotificationBox = styled('div')(({ theme }) => ({\n    width: 360,\n    [theme.breakpoints.down('xs')]: {\n        width: '100vw',\n    },\n}))\n\nconst Notification = styled('div')(() => ({\n    padding: '16px',\n    display: 'flex',\n    alignItems: 'center',\n    boxShadow: themeShadows[6],\n    \"& h5\": {\n        marginLeft: '8px',\n        marginTop: 0,\n        marginBottom: 0,\n        fontWeight: '500',\n    }\n}))\n\nconst NotificationBar2 = () => {\n    const theme = useTheme()\n    const dispatch = useDispatch()\n    const { settings } = useSettings()\n    const [panelOpen, setPanelOpen] = useState(false)\n    const notifcationList = useSelector((state) => state.notifications)\n\n    const handleDrawerToggle = () => {\n        if (!panelOpen) {\n            dispatch(getNotification())\n        }\n        setPanelOpen(!panelOpen)\n    }\n\n    const parentThemePalette = theme.palette\n\n    return (\n        <ThemeProvider theme={settings.themes[settings.activeTheme]}>\n            <IconButton\n                onClick={handleDrawerToggle}\n                style={{\n                    color:\n                        parentThemePalette.type === 'light'\n                            ? parentThemePalette.text.secondary\n                            : parentThemePalette.text.primary,\n                }}\n            >\n                <Badge color=\"secondary\" badgeContent={5}>\n                    <Icon>notifications</Icon>\n                </Badge>\n            </IconButton>\n\n            <Drawer\n                width={'100px'}\n                variant=\"temporary\"\n                anchor={'right'}\n                open={panelOpen}\n                onClose={handleDrawerToggle}\n                ModalProps={{\n                    keepMounted: true,\n                }}\n            >\n                <NotificationBox>\n                    <Notification>\n                        <Icon color=\"primary\">notifications</Icon>\n                        <h5>Notifications</h5>\n                    </Notification>\n\n                    {notifcationList.map((notification, ind) => (\n                        <NotificationCard\n                            notification={notification}\n                            isLastIndex={ind === notifcationList.length - 1}\n                            isFirstIndex={ind === 0}\n                            key={ind}\n                        />\n                    ))}\n                    {!!notifcationList.length && (\n                        <Box sx={{ m: 4, textAlign: 'center' }}>\n                            <Button\n                                variant=\"contained\"\n                                color=\"primary\"\n                                sx={{ width: '100%' }}\n                            >\n                                View All Notifications\n                            </Button>\n                        </Box>\n                    )}\n                </NotificationBox>\n            </Drawer>\n        </ThemeProvider>\n    )\n}\n\nexport default NotificationBar2\n"]},"metadata":{},"sourceType":"module"}