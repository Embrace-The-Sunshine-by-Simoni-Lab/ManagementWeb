{"ast":null,"code":"var _jsxFileName = \"/Users/zhaoyuliu/Desktop/matx-basic/src/app/views/ecommerce/ShopContainer.jsx\",\n    _this = this;\n\nimport React, { Fragment } from 'react';\nimport GridProductCard from './GridProductCard';\nimport ListProductCard from './ListProductCard';\nimport * as _ from 'lodash';\nimport { Grid, TextField, Icon, Button, MenuItem, IconButton, TablePagination, Hidden } from '@mui/material';\nimport { Box, styled } from '@mui/system';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar FlexBox = styled('div')(function (_ref) {\n  var theme = _ref.theme;\n  return {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'space-between'\n  };\n});\nvar ContentBox = styled(FlexBox)(function (_ref2) {\n  var theme = _ref2.theme;\n  return {\n    flexGrow: 1,\n    justifyContent: 'flex-end'\n  };\n});\n\nvar ShopContainer = function ShopContainer(_ref3) {\n  var orderBy = _ref3.orderBy,\n      view = _ref3.view,\n      productList = _ref3.productList,\n      page = _ref3.page,\n      rowsPerPage = _ref3.rowsPerPage,\n      toggleSidenav = _ref3.toggleSidenav,\n      toggleView = _ref3.toggleView,\n      handleChange = _ref3.handleChange,\n      handleChangePage = _ref3.handleChangePage,\n      setRowsPerPage = _ref3.setRowsPerPage;\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      width: \"100%\",\n      height: \"100%\",\n      position: \"relative\",\n      children: [/*#__PURE__*/_jsxDEV(FlexBox, {\n        sx: {\n          mb: 2\n        },\n        children: [/*#__PURE__*/_jsxDEV(Hidden, {\n          mdUp: true,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            size: \"small\",\n            variant: \"contained\",\n            color: \"primary\",\n            onClick: toggleSidenav,\n            children: \"Filter\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 25\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, _this), /*#__PURE__*/_jsxDEV(ContentBox, {\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            select: true,\n            name: \"orderBy\",\n            variant: \"standard\",\n            onChange: handleChange,\n            value: orderBy,\n            children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n              value: \"default\",\n              children: \"Default\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 29\n            }, _this), /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: \"asc\",\n              children: \"Lowest Price\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 29\n            }, _this), /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: \"desc\",\n              children: \"Highest Price\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 29\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 25\n          }, _this), /*#__PURE__*/_jsxDEV(IconButton, {\n            size: \"large\",\n            onClick: function onClick() {\n              return toggleView('grid');\n            },\n            children: /*#__PURE__*/_jsxDEV(Icon, {\n              color: view === 'grid' ? 'primary' : 'inherit',\n              children: \"view_comfy\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 29\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 25\n          }, _this), /*#__PURE__*/_jsxDEV(IconButton, {\n            size: \"large\",\n            onClick: function onClick() {\n              return toggleView('list');\n            },\n            children: /*#__PURE__*/_jsxDEV(Icon, {\n              color: view === 'list' ? 'primary' : 'inherit',\n              children: \"list\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 29\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 25\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 2,\n        children: _.orderBy(productList, orderBy !== 'false' ? 'price' : '', orderBy).slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(function (product) {\n          return view === 'grid' ? /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            lg: 4,\n            md: 6,\n            sm: 12,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(GridProductCard, {\n              product: product\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 37\n            }, _this)\n          }, product.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 33\n          }, _this) : /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            lg: 12,\n            md: 12,\n            sm: 12,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(ListProductCard, {\n              product: product\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 37\n            }, _this)\n          }, product.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 33\n          }, _this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(TablePagination, {\n      rowsPerPageOptions: [6, 12, 24],\n      component: \"div\",\n      count: productList.length,\n      rowsPerPage: rowsPerPage,\n      page: page,\n      backIconButtonProps: {\n        'aria-label': 'Previous Page'\n      },\n      nextIconButtonProps: {\n        'aria-label': 'Next Page'\n      },\n      onPageChange: handleChangePage,\n      onRowsPerPageChange: setRowsPerPage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 13\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, _this);\n};\n\n_c = ShopContainer;\nexport default ShopContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"ShopContainer\");","map":{"version":3,"sources":["/Users/zhaoyuliu/Desktop/matx-basic/src/app/views/ecommerce/ShopContainer.jsx"],"names":["React","Fragment","GridProductCard","ListProductCard","_","Grid","TextField","Icon","Button","MenuItem","IconButton","TablePagination","Hidden","Box","styled","FlexBox","theme","display","alignItems","justifyContent","ContentBox","flexGrow","ShopContainer","orderBy","view","productList","page","rowsPerPage","toggleSidenav","toggleView","handleChange","handleChangePage","setRowsPerPage","mb","slice","map","product","id","length"],"mappings":"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","sourcesContent":["import React, { Fragment } from 'react'\nimport GridProductCard from './GridProductCard'\nimport ListProductCard from './ListProductCard'\nimport * as _ from 'lodash'\nimport {\n    Grid,\n    TextField,\n    Icon,\n    Button,\n    MenuItem,\n    IconButton,\n    TablePagination,\n    Hidden,\n} from '@mui/material'\nimport { Box, styled } from '@mui/system'\n\nconst FlexBox = styled('div')(({ theme }) => ({\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n}))\n\nconst ContentBox = styled(FlexBox)(({ theme }) => ({\n    flexGrow: 1,\n    justifyContent: 'flex-end',\n}))\n\nconst ShopContainer = ({\n    orderBy,\n    view,\n    productList,\n    page,\n    rowsPerPage,\n    toggleSidenav,\n    toggleView,\n    handleChange,\n    handleChangePage,\n    setRowsPerPage,\n}) => {\n    return (\n        <Fragment>\n            <Box width=\"100%\" height=\"100%\" position=\"relative\">\n                <FlexBox sx={{ mb: 2 }}>\n                    <Hidden mdUp>\n                        <Button\n                            size=\"small\"\n                            variant=\"contained\"\n                            color=\"primary\"\n                            onClick={toggleSidenav}\n                        >\n                            Filter\n                        </Button>\n                    </Hidden>\n                    <ContentBox>\n                        <TextField\n                            select\n                            name=\"orderBy\"\n                            variant=\"standard\"\n                            onChange={handleChange}\n                            value={orderBy}\n                        >\n                            <MenuItem value=\"default\">Default</MenuItem>\n                            <MenuItem value=\"asc\">Lowest Price</MenuItem>\n                            <MenuItem value=\"desc\">Highest Price</MenuItem>\n                        </TextField>\n                        <IconButton\n                            size=\"large\"\n                            onClick={() => toggleView('grid')}\n                        >\n                            <Icon\n                                color={view === 'grid' ? 'primary' : 'inherit'}\n                            >\n                                view_comfy\n                            </Icon>\n                        </IconButton>\n                        <IconButton\n                            size=\"large\"\n                            onClick={() => toggleView('list')}\n                        >\n                            <Icon\n                                color={view === 'list' ? 'primary' : 'inherit'}\n                            >\n                                list\n                            </Icon>\n                        </IconButton>\n                    </ContentBox>\n                </FlexBox>\n                <Grid container spacing={2}>\n                    {_.orderBy(\n                        productList,\n                        orderBy !== 'false' ? 'price' : '',\n                        orderBy\n                    )\n                        .slice(\n                            page * rowsPerPage,\n                            page * rowsPerPage + rowsPerPage\n                        )\n                        .map((product) =>\n                            view === 'grid' ? (\n                                <Grid\n                                    item\n                                    key={product.id}\n                                    lg={4}\n                                    md={6}\n                                    sm={12}\n                                    xs={12}\n                                >\n                                    <GridProductCard\n                                        product={product}\n                                    ></GridProductCard>\n                                </Grid>\n                            ) : (\n                                <Grid\n                                    item\n                                    key={product.id}\n                                    lg={12}\n                                    md={12}\n                                    sm={12}\n                                    xs={12}\n                                >\n                                    <ListProductCard\n                                        product={product}\n                                    ></ListProductCard>\n                                </Grid>\n                            )\n                        )}\n                </Grid>\n            </Box>\n            <TablePagination\n                rowsPerPageOptions={[6, 12, 24]}\n                component=\"div\"\n                count={productList.length}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                backIconButtonProps={{\n                    'aria-label': 'Previous Page',\n                }}\n                nextIconButtonProps={{\n                    'aria-label': 'Next Page',\n                }}\n                onPageChange={handleChangePage}\n                onRowsPerPageChange={setRowsPerPage}\n            />\n        </Fragment>\n    )\n}\n\nexport default ShopContainer\n"]},"metadata":{},"sourceType":"module"}