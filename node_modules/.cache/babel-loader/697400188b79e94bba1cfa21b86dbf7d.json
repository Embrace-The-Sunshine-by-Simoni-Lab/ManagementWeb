{"ast":null,"code":"import _slicedToArray from \"/Users/zhaoyuliu/Desktop/matx-pro-3.3.0/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _defineProperty from \"/Users/zhaoyuliu/Desktop/matx-pro-3.3.0/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\n\nvar _jsxFileName = \"/Users/zhaoyuliu/Desktop/matx-pro-3.3.0/src/app/views/CRUD/CrudTable.jsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { IconButton, Table, TableHead, TableBody, TableRow, TableCell, Icon, TablePagination, Button, Card } from '@mui/material';\nimport shortid from 'shortid';\nimport { styled } from '@mui/system';\nimport MemberEditorDialog from './MemberEditorDialog';\nimport { getAllUser, deleteUser } from './TableService';\nimport Breadcrumb from 'app/components/Breadcrumb/Breadcrumb';\nimport { themeShadows } from 'app/components/MatxTheme/themeColors';\nimport ConfirmationDialog from 'app/components/ConfirmationDialog/ConfirmationDialog';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar Container = styled('div')(function (_ref) {\n  var _ref2;\n\n  var theme = _ref.theme;\n  return _ref2 = {\n    margin: '30px'\n  }, _defineProperty(_ref2, theme.breakpoints.down('sm'), {\n    margin: '16px'\n  }), _defineProperty(_ref2, '& .breadcrumb', _defineProperty({\n    marginBottom: '30px'\n  }, theme.breakpoints.down('sm'), {\n    marginBottom: '16px'\n  })), _ref2;\n});\nvar ProductTable = styled(Table)(function () {\n  return {\n    minWidth: 750,\n    whiteSpace: 'pre',\n    '& thead': {\n      '& th:first-of-type': {\n        paddingLeft: 16\n      }\n    },\n    '& td': {\n      borderBottom: 'none'\n    },\n    '& td:first-of-type': {\n      paddingLeft: '16px !important'\n    }\n  };\n});\nvar Status = styled('small')(function (_ref3) {\n  var theme = _ref3.theme;\n  return {\n    color: '#fff',\n    padding: '2px 8px',\n    overflow: 'hidden',\n    borderRadius: '300px',\n    boxShadow: themeShadows[3],\n    background: theme.palette.primary.main\n  };\n});\n\nvar CrudTable = function CrudTable() {\n  _s();\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      uid = _useState2[0],\n      setUid = _useState2[1];\n\n  var _useState3 = useState(10),\n      _useState4 = _slicedToArray(_useState3, 2),\n      rowsPerPage = _useState4[0],\n      setRowsPerPage = _useState4[1];\n\n  var _useState5 = useState(0),\n      _useState6 = _slicedToArray(_useState5, 2),\n      page = _useState6[0],\n      setPage = _useState6[1];\n\n  var _useState7 = useState(null),\n      _useState8 = _slicedToArray(_useState7, 2),\n      user = _useState8[0],\n      setUser = _useState8[1];\n\n  var _useState9 = useState([]),\n      _useState10 = _slicedToArray(_useState9, 2),\n      userList = _useState10[0],\n      setUserList = _useState10[1];\n\n  var _useState11 = useState(false),\n      _useState12 = _slicedToArray(_useState11, 2),\n      shouldOpenEditorDialog = _useState12[0],\n      setShouldOpenEditorDialog = _useState12[1];\n\n  var _useState13 = useState(false),\n      _useState14 = _slicedToArray(_useState13, 2),\n      shouldOpenConfirmationDialog = _useState14[0],\n      setShouldOpenConfirmationDialog = _useState14[1];\n\n  var handleChangePage = function handleChangePage(event, newPage) {\n    setPage(newPage);\n  };\n\n  var handleDialogClose = function handleDialogClose() {\n    setShouldOpenEditorDialog(false);\n    setShouldOpenConfirmationDialog(false);\n    updatePageData();\n  };\n\n  var handleDeleteUser = function handleDeleteUser(user) {\n    setUser(user);\n    setShouldOpenConfirmationDialog(true);\n  };\n\n  var handleConfirmationResponse = function handleConfirmationResponse() {\n    deleteUser(user).then(function () {\n      handleDialogClose();\n    });\n  };\n\n  var updatePageData = function updatePageData() {\n    getAllUser().then(function (_ref4) {\n      var data = _ref4.data;\n      setUserList(data);\n    });\n  };\n\n  useEffect(function () {\n    updatePageData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"breadcrumb\",\n      children: /*#__PURE__*/_jsxDEV(Breadcrumb, {\n        routeSegments: [{\n          name: 'CRUD Table'\n        }]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(Button, {\n      sx: {\n        mb: 2\n      },\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: function onClick() {\n        return setShouldOpenEditorDialog(true);\n      },\n      children: \"Add New Member\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(Card, {\n      sx: {\n        width: '100%',\n        overflow: 'auto'\n      },\n      elevation: 6,\n      children: [/*#__PURE__*/_jsxDEV(ProductTable, {\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          children: /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 29\n            }, _this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Age\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 29\n            }, _this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Balance\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 29\n            }, _this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Company\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 29\n            }, _this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Status\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 29\n            }, _this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Action\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 29\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 25\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 21\n        }, _this), /*#__PURE__*/_jsxDEV(TableBody, {\n          children: userList === null || userList === void 0 ? void 0 : userList.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(function (user, index) {\n            return /*#__PURE__*/_jsxDEV(TableRow, {\n              hover: true,\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                sx: {\n                  px: 0\n                },\n                align: \"left\",\n                children: user.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 135,\n                columnNumber: 37\n              }, _this), /*#__PURE__*/_jsxDEV(TableCell, {\n                sx: {\n                  px: 0\n                },\n                align: \"left\",\n                children: user.age\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 138,\n                columnNumber: 37\n              }, _this), /*#__PURE__*/_jsxDEV(TableCell, {\n                sx: {\n                  px: 0\n                },\n                children: [\"$\", user.balance]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 141,\n                columnNumber: 37\n              }, _this), /*#__PURE__*/_jsxDEV(TableCell, {\n                sx: {\n                  px: 0\n                },\n                align: \"left\",\n                children: user.company\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 144,\n                columnNumber: 37\n              }, _this), /*#__PURE__*/_jsxDEV(TableCell, {\n                sx: {\n                  px: 0\n                },\n                children: user.isActive ? /*#__PURE__*/_jsxDEV(Status, {\n                  children: \"active\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 149,\n                  columnNumber: 45\n                }, _this) : /*#__PURE__*/_jsxDEV(Status, {\n                  children: \"inactive\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 151,\n                  columnNumber: 45\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 147,\n                columnNumber: 37\n              }, _this), /*#__PURE__*/_jsxDEV(TableCell, {\n                sx: {\n                  px: 0\n                },\n                children: [/*#__PURE__*/_jsxDEV(IconButton, {\n                  onClick: function onClick() {\n                    setUid(user.id);\n                    setShouldOpenEditorDialog(true);\n                  },\n                  children: /*#__PURE__*/_jsxDEV(Icon, {\n                    color: \"primary\",\n                    children: \"edit\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 161,\n                    columnNumber: 45\n                  }, _this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 155,\n                  columnNumber: 41\n                }, _this), /*#__PURE__*/_jsxDEV(IconButton, {\n                  onClick: function onClick() {\n                    return handleDeleteUser(user);\n                  },\n                  children: /*#__PURE__*/_jsxDEV(Icon, {\n                    color: \"error\",\n                    children: \"delete\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 168,\n                    columnNumber: 45\n                  }, _this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 163,\n                  columnNumber: 41\n                }, _this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 154,\n                columnNumber: 37\n              }, _this)]\n            }, shortid.generate(), true, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 33\n            }, _this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 21\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(TablePagination, {\n        sx: {\n          px: 2\n        },\n        rowsPerPageOptions: [5, 10, 25],\n        component: \"div\",\n        count: userList === null || userList === void 0 ? void 0 : userList.length,\n        rowsPerPage: rowsPerPage,\n        page: page,\n        backIconButtonProps: {\n          'aria-label': 'Previous Page'\n        },\n        nextIconButtonProps: {\n          'aria-label': 'Next Page'\n        },\n        onPageChange: handleChangePage,\n        onRowsPerPageChange: function onRowsPerPageChange(_ref5) {\n          var value = _ref5.target.value;\n          return setRowsPerPage(value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 17\n      }, _this), shouldOpenEditorDialog && /*#__PURE__*/_jsxDEV(MemberEditorDialog, {\n        handleClose: handleDialogClose,\n        open: shouldOpenEditorDialog,\n        uid: uid\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 21\n      }, _this), shouldOpenConfirmationDialog && /*#__PURE__*/_jsxDEV(ConfirmationDialog, {\n        open: shouldOpenConfirmationDialog,\n        onConfirmDialogClose: handleDialogClose,\n        onYesClick: handleConfirmationResponse,\n        text: \"Are you sure to delete?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 21\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(CrudTable, \"g5oeSo6rSoJp9H/H3l3rNp90rsk=\");\n\n_c = CrudTable;\nexport default CrudTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"CrudTable\");","map":{"version":3,"sources":["/Users/zhaoyuliu/Desktop/matx-pro-3.3.0/src/app/views/CRUD/CrudTable.jsx"],"names":["React","useState","useEffect","IconButton","Table","TableHead","TableBody","TableRow","TableCell","Icon","TablePagination","Button","Card","shortid","styled","MemberEditorDialog","getAllUser","deleteUser","Breadcrumb","themeShadows","ConfirmationDialog","Container","theme","margin","breakpoints","down","marginBottom","ProductTable","minWidth","whiteSpace","paddingLeft","borderBottom","Status","color","padding","overflow","borderRadius","boxShadow","background","palette","primary","main","CrudTable","uid","setUid","rowsPerPage","setRowsPerPage","page","setPage","user","setUser","userList","setUserList","shouldOpenEditorDialog","setShouldOpenEditorDialog","shouldOpenConfirmationDialog","setShouldOpenConfirmationDialog","handleChangePage","event","newPage","handleDialogClose","updatePageData","handleDeleteUser","handleConfirmationResponse","then","data","name","mb","width","slice","map","index","px","age","balance","company","isActive","id","generate","length","value","target"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport {\n    IconButton,\n    Table,\n    TableHead,\n    TableBody,\n    TableRow,\n    TableCell,\n    Icon,\n    TablePagination,\n    Button,\n    Card,\n} from '@mui/material'\nimport shortid from 'shortid'\nimport { styled } from '@mui/system'\nimport MemberEditorDialog from './MemberEditorDialog'\nimport { getAllUser, deleteUser } from './TableService'\nimport Breadcrumb from 'app/components/Breadcrumb/Breadcrumb'\nimport { themeShadows } from 'app/components/MatxTheme/themeColors'\nimport ConfirmationDialog from 'app/components/ConfirmationDialog/ConfirmationDialog'\n\nconst Container = styled('div')(({ theme }) => ({\n    margin: '30px',\n    [theme.breakpoints.down('sm')]: {\n        margin: '16px',\n    },\n    '& .breadcrumb': {\n        marginBottom: '30px',\n        [theme.breakpoints.down('sm')]: {\n            marginBottom: '16px',\n        },\n    },\n}))\n\nconst ProductTable = styled(Table)(() => ({\n    minWidth: 750,\n    whiteSpace: 'pre',\n    '& thead': {\n        '& th:first-of-type': {\n            paddingLeft: 16,\n        },\n    },\n    '& td': {\n        borderBottom: 'none',\n    },\n    '& td:first-of-type': {\n        paddingLeft: '16px !important',\n    },\n}))\n\nconst Status = styled('small')(({ theme }) => ({\n    color: '#fff',\n    padding: '2px 8px',\n    overflow: 'hidden',\n    borderRadius: '300px',\n    boxShadow: themeShadows[3],\n    background: theme.palette.primary.main,\n}))\n\nconst CrudTable = () => {\n    const [uid, setUid] = useState(null)\n    const [rowsPerPage, setRowsPerPage] = useState(10)\n    const [page, setPage] = useState(0)\n    const [user, setUser] = useState(null)\n    const [userList, setUserList] = useState([])\n    const [shouldOpenEditorDialog, setShouldOpenEditorDialog] = useState(false)\n    const [shouldOpenConfirmationDialog, setShouldOpenConfirmationDialog] =\n        useState(false)\n\n    const handleChangePage = (event, newPage) => {\n        setPage(newPage)\n    }\n\n    const handleDialogClose = () => {\n        setShouldOpenEditorDialog(false)\n        setShouldOpenConfirmationDialog(false)\n        updatePageData()\n    }\n\n    const handleDeleteUser = (user) => {\n        setUser(user)\n        setShouldOpenConfirmationDialog(true)\n    }\n\n    const handleConfirmationResponse = () => {\n        deleteUser(user).then(() => {\n            handleDialogClose()\n        })\n    }\n\n    const updatePageData = () => {\n        getAllUser().then(({ data }) => {\n            setUserList(data)\n        })\n    }\n\n    useEffect(() => {\n        updatePageData()\n    }, [])\n\n    return (\n        <Container>\n            <div className=\"breadcrumb\">\n                <Breadcrumb routeSegments={[{ name: 'CRUD Table' }]} />\n            </div>\n\n            <Button\n                sx={{ mb: 2 }}\n                variant=\"contained\"\n                color=\"primary\"\n                onClick={() => setShouldOpenEditorDialog(true)}\n            >\n                Add New Member\n            </Button>\n            <Card sx={{ width: '100%', overflow: 'auto' }} elevation={6}>\n                <ProductTable>\n                    <TableHead>\n                        <TableRow>\n                            <TableCell>Name</TableCell>\n                            <TableCell>Age</TableCell>\n                            <TableCell>Balance</TableCell>\n                            <TableCell>Company</TableCell>\n                            <TableCell>Status</TableCell>\n                            <TableCell>Action</TableCell>\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        {userList\n                            ?.slice(\n                                page * rowsPerPage,\n                                page * rowsPerPage + rowsPerPage\n                            )\n                            .map((user, index) => (\n                                <TableRow hover key={shortid.generate()}>\n                                    <TableCell sx={{ px: 0 }} align=\"left\">\n                                        {user.name}\n                                    </TableCell>\n                                    <TableCell sx={{ px: 0 }} align=\"left\">\n                                        {user.age}\n                                    </TableCell>\n                                    <TableCell sx={{ px: 0 }}>\n                                        ${user.balance}\n                                    </TableCell>\n                                    <TableCell sx={{ px: 0 }} align=\"left\">\n                                        {user.company}\n                                    </TableCell>\n                                    <TableCell sx={{ px: 0 }}>\n                                        {user.isActive ? (\n                                            <Status>active</Status>\n                                        ) : (\n                                            <Status>inactive</Status>\n                                        )}\n                                    </TableCell>\n                                    <TableCell sx={{ px: 0 }}>\n                                        <IconButton\n                                            onClick={() => {\n                                                setUid(user.id)\n                                                setShouldOpenEditorDialog(true)\n                                            }}\n                                        >\n                                            <Icon color=\"primary\">edit</Icon>\n                                        </IconButton>\n                                        <IconButton\n                                            onClick={() =>\n                                                handleDeleteUser(user)\n                                            }\n                                        >\n                                            <Icon color=\"error\">delete</Icon>\n                                        </IconButton>\n                                    </TableCell>\n                                </TableRow>\n                            ))}\n                    </TableBody>\n                </ProductTable>\n\n                <TablePagination\n                    sx={{ px: 2 }}\n                    rowsPerPageOptions={[5, 10, 25]}\n                    component=\"div\"\n                    count={userList?.length}\n                    rowsPerPage={rowsPerPage}\n                    page={page}\n                    backIconButtonProps={{\n                        'aria-label': 'Previous Page',\n                    }}\n                    nextIconButtonProps={{\n                        'aria-label': 'Next Page',\n                    }}\n                    onPageChange={handleChangePage}\n                    onRowsPerPageChange={({ target: { value } }) =>\n                        setRowsPerPage(value)\n                    }\n                />\n\n                {shouldOpenEditorDialog && (\n                    <MemberEditorDialog\n                        handleClose={handleDialogClose}\n                        open={shouldOpenEditorDialog}\n                        uid={uid}\n                    />\n                )}\n                {shouldOpenConfirmationDialog && (\n                    <ConfirmationDialog\n                        open={shouldOpenConfirmationDialog}\n                        onConfirmDialogClose={handleDialogClose}\n                        onYesClick={handleConfirmationResponse}\n                        text=\"Are you sure to delete?\"\n                    />\n                )}\n            </Card>\n        </Container>\n    )\n}\n\nexport default CrudTable\n"]},"metadata":{},"sourceType":"module"}