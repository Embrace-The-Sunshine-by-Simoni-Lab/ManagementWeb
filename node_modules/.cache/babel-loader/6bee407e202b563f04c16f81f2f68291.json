{"ast":null,"code":"import _objectSpread from \"/Users/zhaoyuliu/Desktop/matx-pro-3.3.0/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _toConsumableArray from \"/Users/zhaoyuliu/Desktop/matx-pro-3.3.0/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _createForOfIteratorHelper from \"/Users/zhaoyuliu/Desktop/matx-pro-3.3.0/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _slicedToArray from \"/Users/zhaoyuliu/Desktop/matx-pro-3.3.0/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _defineProperty from \"/Users/zhaoyuliu/Desktop/matx-pro-3.3.0/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\n\nvar _jsxFileName = \"/Users/zhaoyuliu/Desktop/matx-pro-3.3.0/src/app/views/forms/UploadForm.jsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Breadcrumb, SimpleCard, MatxProgressBar } from 'app/components';\nimport { Fab, Icon, Card, Grid, Divider, Button } from '@mui/material';\nimport { Box, styled, useTheme } from '@mui/system';\nimport { H5, Paragraph } from 'app/components/Typography';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar Container = styled('div')(function (_ref) {\n  var _ref2;\n\n  var theme = _ref.theme;\n  return _ref2 = {\n    margin: '30px'\n  }, _defineProperty(_ref2, theme.breakpoints.down('sm'), {\n    margin: '16px'\n  }), _defineProperty(_ref2, '& .breadcrumb', _defineProperty({\n    marginBottom: '30px'\n  }, theme.breakpoints.down('sm'), {\n    marginBottom: '16px'\n  })), _ref2;\n});\nvar FlexBox = styled(Box)(function () {\n  return {\n    display: 'flex',\n    alignItems: 'center'\n  };\n});\nvar FabIcon = styled(Fab)(function () {\n  return {\n    textTransform: 'capitalize',\n    '& .icon': {\n      marginRight: '8px'\n    }\n  };\n});\nvar HiddenInput = styled('input')(function () {\n  return {\n    display: 'none'\n  };\n});\nvar DragFileBox = styled(FlexBox)(function () {\n  return {\n    width: '100%',\n    height: 200,\n    borderRadius: '4px',\n    marginBottom: '24px',\n    justifyContent: 'center',\n    background: 'rgba(0, 0, 0, 0.01)'\n  };\n});\n\nvar UploadForm = function UploadForm() {\n  _s();\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      files = _useState2[0],\n      setFiles = _useState2[1];\n\n  var _useState3 = useState(0),\n      _useState4 = _slicedToArray(_useState3, 2),\n      queProgress = _useState4[0],\n      setQueProgress = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      dargClass = _useState6[0],\n      setDragClass = _useState6[1];\n\n  var handleFileSelect = function handleFileSelect(event) {\n    var files = event.target.files;\n    var list = [];\n\n    var _iterator = _createForOfIteratorHelper(files),\n        _step;\n\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var iterator = _step.value;\n        list.push({\n          file: iterator,\n          uploading: false,\n          error: false,\n          progress: 0\n        });\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n\n    setFiles(list);\n  };\n\n  var handleDragOver = function handleDragOver(event) {\n    event.preventDefault();\n    setDragClass('drag-shadow');\n  };\n\n  var handleDrop = function handleDrop(event) {\n    event.preventDefault();\n    event.persist();\n    var files = event.dataTransfer.files;\n    var list = [];\n\n    var _iterator2 = _createForOfIteratorHelper(files),\n        _step2;\n\n    try {\n      for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n        var iterator = _step2.value;\n        list.push({\n          file: iterator,\n          uploading: false,\n          error: false,\n          progress: 0\n        });\n      }\n    } catch (err) {\n      _iterator2.e(err);\n    } finally {\n      _iterator2.f();\n    }\n\n    setDragClass('');\n    setFiles(list);\n    return false;\n  };\n\n  var handleDragStart = function handleDragStart(event) {\n    setDragClass('drag-shadow');\n  };\n\n  var handleSingleRemove = function handleSingleRemove(index) {\n    var tempList = _toConsumableArray(files);\n\n    tempList.splice(index, 1);\n    setFiles(_toConsumableArray(tempList));\n  };\n\n  var handleAllRemove = function handleAllRemove() {\n    setFiles([]);\n    setQueProgress(0);\n  };\n\n  var uploadSingleFile = function uploadSingleFile(index) {\n    var allFiles = _toConsumableArray(files);\n\n    var file = files[index];\n    allFiles[index] = _objectSpread(_objectSpread({}, file), {}, {\n      uploading: true,\n      error: false\n    });\n    setFiles(_toConsumableArray(allFiles));\n  };\n\n  var uploadAllFile = function uploadAllFile() {\n    var allFiles = [];\n    files.map(function (item) {\n      allFiles.push(_objectSpread(_objectSpread({}, item), {}, {\n        uploading: true,\n        error: false\n      }));\n      return item;\n    });\n    setFiles([].concat(allFiles));\n    setQueProgress(35);\n  };\n\n  var handleSingleCancel = function handleSingleCancel(index) {\n    var allFiles = _toConsumableArray(files);\n\n    var file = files[index];\n    allFiles[index] = _objectSpread(_objectSpread({}, file), {}, {\n      uploading: false,\n      error: true\n    });\n    setFiles(_toConsumableArray(allFiles));\n  };\n\n  var handleCancelAll = function handleCancelAll() {\n    var allFiles = [];\n    files.map(function (item) {\n      allFiles.push(_objectSpread(_objectSpread({}, item), {}, {\n        uploading: false,\n        error: true\n      }));\n      return item;\n    });\n    setFiles([].concat(allFiles));\n    setQueProgress(0);\n  };\n\n  var isEmpty = !!!files.length;\n\n  var _useTheme = useTheme(),\n      palette = _useTheme.palette;\n\n  var bgError = palette.error.main;\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"breadcrumb\",\n      children: /*#__PURE__*/_jsxDEV(Breadcrumb, {\n        routeSegments: [{\n          name: 'Others',\n          path: '/'\n        }, {\n          name: 'Upload'\n        }]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 17\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(SimpleCard, {\n      title: \"File Upload\",\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        mb: 3,\n        display: \"flex\",\n        flexWrap: 1,\n        children: \"123\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(DragFileBox, {\n        className: dargClass,\n        onDragEnter: handleDragStart,\n        onDragOver: handleDragOver,\n        onDrop: handleDrop,\n        children: isEmpty ? /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Drop your files here\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 25\n        }, _this) : /*#__PURE__*/_jsxDEV(H5, {\n          children: [files.length, \" file\", files.length > 1 ? 's' : '', ' ', \"selected...\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 29\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(Card, {\n        sx: {\n          mb: 3\n        },\n        elevation: 2,\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          p: 2,\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            spacing: 2,\n            justify: \"center\",\n            alignItems: \"center\",\n            direction: \"row\",\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              lg: 4,\n              md: 4,\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 241,\n              columnNumber: 29\n            }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              lg: 1,\n              md: 1,\n              children: \"Size\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 244,\n              columnNumber: 29\n            }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              lg: 2,\n              md: 2,\n              children: \"Progress\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 247,\n              columnNumber: 29\n            }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              lg: 1,\n              md: 1,\n              children: \"Status\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 250,\n              columnNumber: 29\n            }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              lg: 4,\n              md: 4,\n              children: \"Actions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 253,\n              columnNumber: 29\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 25\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 21\n        }, _this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 21\n        }, _this), isEmpty && /*#__PURE__*/_jsxDEV(Paragraph, {\n          sx: {\n            p: 2\n          },\n          children: \"Que is empty\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 25\n        }, _this), files.map(function (item, index) {\n          var file = item.file,\n              uploading = item.uploading,\n              error = item.error,\n              progress = item.progress;\n          return /*#__PURE__*/_jsxDEV(Box, {\n            p: 2,\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              spacing: 2,\n              justify: \"center\",\n              alignItems: \"center\",\n              direction: \"row\",\n              children: [/*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                lg: 4,\n                md: 4,\n                sm: 12,\n                xs: 12,\n                children: file.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 275,\n                columnNumber: 37\n              }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                lg: 1,\n                md: 1,\n                sm: 12,\n                xs: 12,\n                children: [(file.size / 1024 / 1024).toFixed(1), ' ', \"MB\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 278,\n                columnNumber: 37\n              }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                lg: 2,\n                md: 2,\n                sm: 12,\n                xs: 12,\n                children: /*#__PURE__*/_jsxDEV(MatxProgressBar, {\n                  value: progress\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 283,\n                  columnNumber: 41\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 282,\n                columnNumber: 37\n              }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                lg: 1,\n                md: 1,\n                sm: 12,\n                xs: 12,\n                children: error && /*#__PURE__*/_jsxDEV(Icon, {\n                  color: \"error\",\n                  children: \"error\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 289,\n                  columnNumber: 45\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 287,\n                columnNumber: 37\n              }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                lg: 4,\n                md: 4,\n                sm: 12,\n                xs: 12,\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(Button, {\n                    size: \"small\",\n                    variant: \"contained\",\n                    color: \"primary\",\n                    disabled: uploading,\n                    onClick: function onClick() {\n                      return uploadSingleFile(index);\n                    },\n                    children: \"Upload\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 294,\n                    columnNumber: 45\n                  }, _this), /*#__PURE__*/_jsxDEV(Button, {\n                    sx: {\n                      mx: 1\n                    },\n                    size: \"small\",\n                    variant: \"contained\",\n                    disabled: !uploading,\n                    color: \"secondary\",\n                    onClick: function onClick() {\n                      return handleSingleCancel(index);\n                    },\n                    children: \"Cancel\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 305,\n                    columnNumber: 45\n                  }, _this), /*#__PURE__*/_jsxDEV(Button, {\n                    size: \"small\",\n                    onClick: function onClick() {\n                      return handleSingleRemove(index);\n                    },\n                    variant: \"contained\",\n                    sx: {\n                      color: '#fff',\n                      background: bgError\n                    },\n                    children: \"Remove\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 317,\n                    columnNumber: 45\n                  }, _this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 293,\n                  columnNumber: 41\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 292,\n                columnNumber: 37\n              }, _this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 268,\n              columnNumber: 33\n            }, _this)\n          }, file.name, false, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 29\n          }, _this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Paragraph, {\n          children: \"Queue progress:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 339,\n          columnNumber: 21\n        }, _this), /*#__PURE__*/_jsxDEV(Box, {\n          py: 2,\n          children: /*#__PURE__*/_jsxDEV(MatxProgressBar, {\n            value: queProgress\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 341,\n            columnNumber: 25\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 340,\n          columnNumber: 21\n        }, _this), /*#__PURE__*/_jsxDEV(Box, {\n          display: \"flex\",\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            color: \"primary\",\n            disabled: isEmpty,\n            onClick: uploadAllFile,\n            children: \"Upload All\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 344,\n            columnNumber: 25\n          }, _this), /*#__PURE__*/_jsxDEV(Button, {\n            sx: {\n              mx: 1\n            },\n            variant: \"contained\",\n            color: \"secondary\",\n            disabled: isEmpty,\n            onClick: handleCancelAll,\n            children: \"Cancel All\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 352,\n            columnNumber: 25\n          }, _this), !isEmpty && /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            onClick: handleAllRemove,\n            sx: {\n              color: '#fff',\n              background: bgError\n            },\n            children: \"Remove All\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 362,\n            columnNumber: 29\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 343,\n          columnNumber: 21\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 338,\n        columnNumber: 17\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 13\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 165,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(UploadForm, \"0GC7LywVfP7ufP3KwIBP5NCvI3Y=\", false, function () {\n  return [useTheme];\n});\n\n_c = UploadForm;\nexport default UploadForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"UploadForm\");","map":{"version":3,"sources":["/Users/zhaoyuliu/Desktop/matx-pro-3.3.0/src/app/views/forms/UploadForm.jsx"],"names":["React","useState","Breadcrumb","SimpleCard","MatxProgressBar","Fab","Icon","Card","Grid","Divider","Button","Box","styled","useTheme","H5","Paragraph","Container","theme","margin","breakpoints","down","marginBottom","FlexBox","display","alignItems","FabIcon","textTransform","marginRight","HiddenInput","DragFileBox","width","height","borderRadius","justifyContent","background","UploadForm","files","setFiles","queProgress","setQueProgress","dargClass","setDragClass","handleFileSelect","event","target","list","iterator","push","file","uploading","error","progress","handleDragOver","preventDefault","handleDrop","persist","dataTransfer","handleDragStart","handleSingleRemove","index","tempList","splice","handleAllRemove","uploadSingleFile","allFiles","uploadAllFile","map","item","handleSingleCancel","handleCancelAll","isEmpty","length","palette","bgError","main","name","path","mb","p","size","toFixed","mx","color"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport { Breadcrumb, SimpleCard, MatxProgressBar } from 'app/components'\nimport { Fab, Icon, Card, Grid, Divider, Button } from '@mui/material'\nimport { Box, styled, useTheme } from '@mui/system'\nimport { H5, Paragraph } from 'app/components/Typography'\n\nconst Container = styled('div')(({ theme }) => ({\n    margin: '30px',\n    [theme.breakpoints.down('sm')]: {\n        margin: '16px',\n    },\n    '& .breadcrumb': {\n        marginBottom: '30px',\n        [theme.breakpoints.down('sm')]: {\n            marginBottom: '16px',\n        },\n    },\n}))\n\nconst FlexBox = styled(Box)(() => ({\n    display: 'flex',\n    alignItems: 'center',\n}))\n\nconst FabIcon = styled(Fab)(() => ({\n    textTransform: 'capitalize',\n    '& .icon': { marginRight: '8px' },\n}))\n\nconst HiddenInput = styled('input')(() => ({\n    display: 'none',\n}))\n\nconst DragFileBox = styled(FlexBox)(() => ({\n    width: '100%',\n    height: 200,\n    borderRadius: '4px',\n    marginBottom: '24px',\n    justifyContent: 'center',\n    background: 'rgba(0, 0, 0, 0.01)',\n}))\n\nconst UploadForm = () => {\n    const [files, setFiles] = useState([])\n    const [queProgress, setQueProgress] = useState(0)\n    const [dargClass, setDragClass] = useState('')\n\n    const handleFileSelect = (event) => {\n        let files = event.target.files\n        let list = []\n\n        for (const iterator of files)\n        {\n            list.push({\n                file: iterator,\n                uploading: false,\n                error: false,\n                progress: 0,\n            })\n        }\n        setFiles(list)\n    }\n\n    const handleDragOver = (event) => {\n        event.preventDefault()\n        setDragClass('drag-shadow')\n    }\n\n    const handleDrop = (event) => {\n        event.preventDefault()\n        event.persist()\n\n        let files = event.dataTransfer.files\n        let list = []\n\n        for (const iterator of files)\n        {\n            list.push({\n                file: iterator,\n                uploading: false,\n                error: false,\n                progress: 0,\n            })\n        }\n\n        setDragClass('')\n        setFiles(list)\n\n        return false\n    }\n\n    const handleDragStart = (event) => {\n        setDragClass('drag-shadow')\n    }\n\n    const handleSingleRemove = (index) => {\n        let tempList = [...files]\n        tempList.splice(index, 1)\n        setFiles([...tempList])\n    }\n\n    const handleAllRemove = () => {\n        setFiles([])\n        setQueProgress(0)\n    }\n\n    const uploadSingleFile = (index) => {\n        let allFiles = [...files]\n        let file = files[index]\n\n        allFiles[index] = { ...file, uploading: true, error: false }\n\n        setFiles([...allFiles])\n    }\n\n    const uploadAllFile = () => {\n        let allFiles = []\n\n        files.map((item) => {\n            allFiles.push({\n                ...item,\n                uploading: true,\n                error: false,\n            })\n\n            return item\n        })\n\n        setFiles([...allFiles])\n        setQueProgress(35)\n    }\n\n    const handleSingleCancel = (index) => {\n        let allFiles = [...files]\n        let file = files[index]\n\n        allFiles[index] = { ...file, uploading: false, error: true }\n\n        setFiles([...allFiles])\n    }\n\n    const handleCancelAll = () => {\n        let allFiles = []\n\n        files.map((item) => {\n            allFiles.push({\n                ...item,\n                uploading: false,\n                error: true,\n            })\n\n            return item\n        })\n\n        setFiles([...allFiles])\n        setQueProgress(0)\n    }\n\n    let isEmpty = !!!files.length\n\n    const { palette } = useTheme()\n    const bgError = palette.error.main\n\n    return (\n        <Container>\n            <div className=\"breadcrumb\">\n                <Breadcrumb\n                    routeSegments={[\n                        { name: 'Others', path: '/' },\n                        { name: 'Upload' },\n                    ]}\n                />\n            </div>\n\n            <SimpleCard title=\"File Upload\">\n                <Box mb={3} display=\"flex\" flexWrap={1}>\n                    123\n                    {/* <label htmlFor=\"upload-single-file\">\n                        <FabIcon\n                            color=\"primary\"\n                            component=\"span\"\n                            variant=\"extended\"\n                        >\n                            <FlexBox>\n                                <Icon className=\"icon\">cloud_upload</Icon>\n                                <span>Single File</span>\n                            </FlexBox>\n                        </FabIcon>\n                    </label>\n                    <HiddenInput\n                        onChange={handleFileSelect}\n                        id=\"upload-single-file\"\n                        type=\"file\"\n                    />\n                    <Box px={2} />\n                    <label htmlFor=\"upload-multiple-file\">\n                        <FabIcon\n                            color=\"primary\"\n                            component=\"span\"\n                            variant=\"extended\"\n                        >\n                            <FlexBox>\n                                <Icon className=\"icon\">cloud_upload</Icon>\n                                <span>Multiple File</span>\n                            </FlexBox>\n                        </FabIcon>\n                    </label>\n                    <HiddenInput\n                        onChange={handleFileSelect}\n                        id=\"upload-multiple-file\"\n                        type=\"file\"\n                        multiple\n                    /> */}\n                </Box>\n\n                <DragFileBox\n                    className={dargClass}\n                    onDragEnter={handleDragStart}\n                    onDragOver={handleDragOver}\n                    onDrop={handleDrop}\n                >\n                    {isEmpty ? (\n                        <span>Drop your files here</span>\n                    ) : (\n                            <H5>\n                                {files.length} file{files.length > 1 ? 's' : ''}{' '}\n                            selected...\n                            </H5>\n                        )}\n                </DragFileBox>\n\n                <Card sx={{ mb: 3 }} elevation={2}>\n                    <Box p={2}>\n                        <Grid\n                            container\n                            spacing={2}\n                            justify=\"center\"\n                            alignItems=\"center\"\n                            direction=\"row\"\n                        >\n                            <Grid item lg={4} md={4}>\n                                Name\n                            </Grid>\n                            <Grid item lg={1} md={1}>\n                                Size\n                            </Grid>\n                            <Grid item lg={2} md={2}>\n                                Progress\n                            </Grid>\n                            <Grid item lg={1} md={1}>\n                                Status\n                            </Grid>\n                            <Grid item lg={4} md={4}>\n                                Actions\n                            </Grid>\n                        </Grid>\n                    </Box>\n                    <Divider></Divider>\n\n                    {isEmpty && (\n                        <Paragraph sx={{ p: 2 }}>Que is empty</Paragraph>\n                    )}\n\n                    {files.map((item, index) => {\n                        let { file, uploading, error, progress } = item\n                        return (\n                            <Box p={2} key={file.name}>\n                                <Grid\n                                    container\n                                    spacing={2}\n                                    justify=\"center\"\n                                    alignItems=\"center\"\n                                    direction=\"row\"\n                                >\n                                    <Grid item lg={4} md={4} sm={12} xs={12}>\n                                        {file.name}\n                                    </Grid>\n                                    <Grid item lg={1} md={1} sm={12} xs={12}>\n                                        {(file.size / 1024 / 1024).toFixed(1)}{' '}\n                                        MB\n                                    </Grid>\n                                    <Grid item lg={2} md={2} sm={12} xs={12}>\n                                        <MatxProgressBar\n                                            value={progress}\n                                        ></MatxProgressBar>\n                                    </Grid>\n                                    <Grid item lg={1} md={1} sm={12} xs={12}>\n                                        {error && (\n                                            <Icon color=\"error\">error</Icon>\n                                        )}\n                                    </Grid>\n                                    <Grid item lg={4} md={4} sm={12} xs={12}>\n                                        <div>\n                                            <Button\n                                                size=\"small\"\n                                                variant=\"contained\"\n                                                color=\"primary\"\n                                                disabled={uploading}\n                                                onClick={() =>\n                                                    uploadSingleFile(index)\n                                                }\n                                            >\n                                                Upload\n                                            </Button>\n                                            <Button\n                                                sx={{ mx: 1 }}\n                                                size=\"small\"\n                                                variant=\"contained\"\n                                                disabled={!uploading}\n                                                color=\"secondary\"\n                                                onClick={() =>\n                                                    handleSingleCancel(index)\n                                                }\n                                            >\n                                                Cancel\n                                            </Button>\n                                            <Button\n                                                size=\"small\"\n                                                onClick={() =>\n                                                    handleSingleRemove(index)\n                                                }\n                                                variant=\"contained\"\n                                                sx={{\n                                                    color: '#fff',\n                                                    background: bgError,\n                                                }}\n                                            >\n                                                Remove\n                                            </Button>\n                                        </div>\n                                    </Grid>\n                                </Grid>\n                            </Box>\n                        )\n                    })}\n                </Card>\n\n                <div>\n                    <Paragraph>Queue progress:</Paragraph>\n                    <Box py={2}>\n                        <MatxProgressBar value={queProgress}></MatxProgressBar>\n                    </Box>\n                    <Box display=\"flex\">\n                        <Button\n                            variant=\"contained\"\n                            color=\"primary\"\n                            disabled={isEmpty}\n                            onClick={uploadAllFile}\n                        >\n                            Upload All\n                        </Button>\n                        <Button\n                            sx={{ mx: 1 }}\n                            variant=\"contained\"\n                            color=\"secondary\"\n                            disabled={isEmpty}\n                            onClick={handleCancelAll}\n                        >\n                            Cancel All\n                        </Button>\n                        {!isEmpty && (\n                            <Button\n                                variant=\"contained\"\n                                onClick={handleAllRemove}\n                                sx={{ color: '#fff', background: bgError }}\n                            >\n                                Remove All\n                            </Button>\n                        )}\n                    </Box>\n                </div>\n            </SimpleCard>\n        </Container>\n    )\n}\n\nexport default UploadForm\n"]},"metadata":{},"sourceType":"module"}