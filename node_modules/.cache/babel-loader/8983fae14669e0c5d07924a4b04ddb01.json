{"ast":null,"code":"import _slicedToArray from \"/Users/zhaoyuliu/Desktop/matx-basic/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\n\nvar _jsxFileName = \"/Users/zhaoyuliu/Desktop/matx-basic/src/app/views/inbox/InboxMessagList.jsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { format } from 'date-fns';\nimport { MatxMenu } from 'app/components';\nimport { getTimeDifference } from 'app/utils/utils';\nimport HtmlReactParser from 'html-react-parser';\nimport React, { Fragment, useState } from 'react';\nimport Accordion from '@mui/material/Accordion';\nimport AccordionSummary from '@mui/material/AccordionSummary';\nimport AccordionDetails from '@mui/material/AccordionDetails';\nimport { Icon, Avatar, Checkbox, MenuItem, IconButton } from '@mui/material';\nimport { Box, styled, useTheme } from '@mui/system';\nimport { H5, Paragraph, Small } from 'app/components/Typography';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar FlexBox = styled(Box)(function () {\n  return {\n    display: 'flex',\n    alignItems: 'center'\n  };\n});\nvar ContentBox = styled(FlexBox)(function () {\n  return {\n    flexWrap: 1,\n    height: '100%',\n    width: '100%',\n    justifyContent: 'space-between'\n  };\n});\nvar StyledH5 = styled(H5)(function () {\n  return {\n    marginLeft: '4px',\n    fontWeight: '500'\n  };\n});\nvar StyledItem = styled(MenuItem)(function () {\n  return {\n    display: 'flex',\n    alignItems: 'center',\n    '& .icon': {\n      marginRight: '16px'\n    }\n  };\n});\n\nvar InboxMessageList = function InboxMessageList(_ref) {\n  _s();\n\n  var messageList = _ref.messageList,\n      handleCheckboxSelection = _ref.handleCheckboxSelection;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      expanded = _useState2[0],\n      setExpanded = _useState2[1];\n\n  var toggleExpansionPanel = function toggleExpansionPanel(index) {\n    if (index === expanded) setExpanded(false);else setExpanded(index);\n  };\n\n  var _useTheme = useTheme(),\n      palette = _useTheme.palette;\n\n  var textMuted = palette.text.secondary;\n  return /*#__PURE__*/_jsxDEV(Box, {\n    mx: \"4px\",\n    mb: \"4px\",\n    children: messageList.map(function (message, index) {\n      return /*#__PURE__*/_jsxDEV(Accordion, {\n        expanded: expanded === index,\n        elevation: 3,\n        children: [/*#__PURE__*/_jsxDEV(AccordionSummary, {\n          sx: {\n            p: 0,\n            pl: 1,\n            pr: 3\n          },\n          children: /*#__PURE__*/_jsxDEV(FlexBox, {\n            px: 1,\n            width: \"100%\",\n            children: [expanded !== index && /*#__PURE__*/_jsxDEV(Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(Checkbox, {\n                checked: message.selected,\n                onChange: function onChange(event) {\n                  return handleCheckboxSelection(event, index);\n                },\n                color: \"secondary\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 59,\n                columnNumber: 37\n              }, _this), /*#__PURE__*/_jsxDEV(IconButton, {\n                children: /*#__PURE__*/_jsxDEV(Icon, {\n                  children: \"star_border\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 70,\n                  columnNumber: 41\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 37\n              }, _this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 33\n            }, _this), /*#__PURE__*/_jsxDEV(ContentBox, {\n              onClick: function onClick() {\n                return toggleExpansionPanel(index);\n              },\n              children: [expanded === index && /*#__PURE__*/_jsxDEV(FlexBox, {\n                justifyContent: \"space-between\",\n                ml: \"12px\",\n                children: [/*#__PURE__*/_jsxDEV(Avatar, {\n                  src: message.sender.photo\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 83,\n                  columnNumber: 41\n                }, _this), /*#__PURE__*/_jsxDEV(Box, {\n                  ml: 1,\n                  children: [/*#__PURE__*/_jsxDEV(StyledH5, {\n                    children: message.sender.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 85,\n                    columnNumber: 45\n                  }, _this), /*#__PURE__*/_jsxDEV(Small, {\n                    sx: {\n                      color: textMuted\n                    },\n                    children: format(new Date(message.date).getTime(), 'MMMM dd, yyyy')\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 88,\n                    columnNumber: 45\n                  }, _this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 84,\n                  columnNumber: 41\n                }, _this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 37\n              }, _this), expanded !== index && /*#__PURE__*/_jsxDEV(StyledH5, {\n                sx: {\n                  fontSize: '14px',\n                  color: textMuted\n                },\n                children: message.sender.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 37\n              }, _this), /*#__PURE__*/_jsxDEV(Paragraph, {\n                children: message.subject\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 33\n              }, _this), /*#__PURE__*/_jsxDEV(Small, {\n                sx: {\n                  color: textMuted\n                },\n                children: [getTimeDifference(new Date(message.date)), ' ', \"ago\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 112,\n                columnNumber: 33\n              }, _this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 29\n            }, _this), /*#__PURE__*/_jsxDEV(MatxMenu, {\n              menuButton: /*#__PURE__*/_jsxDEV(IconButton, {\n                children: /*#__PURE__*/_jsxDEV(Icon, {\n                  children: \"more_vert\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 120,\n                  columnNumber: 41\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 119,\n                columnNumber: 37\n              }, _this),\n              children: [/*#__PURE__*/_jsxDEV(StyledItem, {\n                children: [/*#__PURE__*/_jsxDEV(Icon, {\n                  className: \"icon\",\n                  children: \"reply\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 125,\n                  columnNumber: 37\n                }, _this), \" Reply\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 124,\n                columnNumber: 33\n              }, _this), /*#__PURE__*/_jsxDEV(StyledItem, {\n                children: [/*#__PURE__*/_jsxDEV(Icon, {\n                  className: \"icon\",\n                  children: \"archive\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 128,\n                  columnNumber: 37\n                }, _this), ' ', \"Archive\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 127,\n                columnNumber: 33\n              }, _this), /*#__PURE__*/_jsxDEV(StyledItem, {\n                children: [/*#__PURE__*/_jsxDEV(Icon, {\n                  className: \"icon\",\n                  children: \"delete\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 132,\n                  columnNumber: 37\n                }, _this), \" Delete\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 131,\n                columnNumber: 33\n              }, _this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 29\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 25\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, _this), /*#__PURE__*/_jsxDEV(AccordionDetails, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: HtmlReactParser(message.message)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 25\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 21\n        }, _this)]\n      }, message.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, _this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(InboxMessageList, \"fOiNR/mMhHwgCfyzLqrIqbO7Ftk=\", false, function () {\n  return [useTheme];\n});\n\n_c = InboxMessageList;\nexport default InboxMessageList;\n\nvar _c;\n\n$RefreshReg$(_c, \"InboxMessageList\");","map":{"version":3,"sources":["/Users/zhaoyuliu/Desktop/matx-basic/src/app/views/inbox/InboxMessagList.jsx"],"names":["format","MatxMenu","getTimeDifference","HtmlReactParser","React","Fragment","useState","Accordion","AccordionSummary","AccordionDetails","Icon","Avatar","Checkbox","MenuItem","IconButton","Box","styled","useTheme","H5","Paragraph","Small","FlexBox","display","alignItems","ContentBox","flexWrap","height","width","justifyContent","StyledH5","marginLeft","fontWeight","StyledItem","marginRight","InboxMessageList","messageList","handleCheckboxSelection","expanded","setExpanded","toggleExpansionPanel","index","palette","textMuted","text","secondary","map","message","p","pl","pr","selected","event","sender","photo","name","color","Date","date","getTime","fontSize","subject","id"],"mappings":"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","sourcesContent":["import { format } from 'date-fns'\r\nimport { MatxMenu } from 'app/components'\r\nimport { getTimeDifference } from 'app/utils/utils'\r\nimport HtmlReactParser from 'html-react-parser'\r\nimport React, { Fragment, useState } from 'react'\r\nimport Accordion from '@mui/material/Accordion'\r\nimport AccordionSummary from '@mui/material/AccordionSummary'\r\nimport AccordionDetails from '@mui/material/AccordionDetails'\r\nimport { Icon, Avatar, Checkbox, MenuItem, IconButton } from '@mui/material'\r\nimport { Box, styled, useTheme } from '@mui/system'\r\nimport { H5, Paragraph, Small } from 'app/components/Typography'\r\n\r\nconst FlexBox = styled(Box)(() => ({\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n}))\r\n\r\nconst ContentBox = styled(FlexBox)(() => ({\r\n    flexWrap: 1,\r\n    height: '100%',\r\n    width: '100%',\r\n    justifyContent: 'space-between',\r\n}))\r\n\r\nconst StyledH5 = styled(H5)(() => ({\r\n    marginLeft: '4px',\r\n    fontWeight: '500',\r\n}))\r\n\r\nconst StyledItem = styled(MenuItem)(() => ({\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    '& .icon': { marginRight: '16px' },\r\n}))\r\n\r\nconst InboxMessageList = ({ messageList, handleCheckboxSelection }) => {\r\n    const [expanded, setExpanded] = useState(false)\r\n\r\n    const toggleExpansionPanel = (index) => {\r\n        if (index === expanded) setExpanded(false)\r\n        else setExpanded(index)\r\n    }\r\n\r\n    const { palette } = useTheme()\r\n    const textMuted = palette.text.secondary\r\n\r\n    return (\r\n        <Box mx=\"4px\" mb=\"4px\">\r\n            {messageList.map((message, index) => (\r\n                <Accordion\r\n                    key={message.id}\r\n                    expanded={expanded === index}\r\n                    elevation={3}\r\n                >\r\n                    <AccordionSummary sx={{ p: 0, pl: 1, pr: 3 }}>\r\n                        <FlexBox px={1} width=\"100%\">\r\n                            {expanded !== index && (\r\n                                <Fragment>\r\n                                    <Checkbox\r\n                                        checked={message.selected}\r\n                                        onChange={(event) =>\r\n                                            handleCheckboxSelection(\r\n                                                event,\r\n                                                index\r\n                                            )\r\n                                        }\r\n                                        color=\"secondary\"\r\n                                    />\r\n                                    <IconButton>\r\n                                        <Icon>star_border</Icon>\r\n                                    </IconButton>\r\n                                </Fragment>\r\n                            )}\r\n\r\n                            <ContentBox\r\n                                onClick={() => toggleExpansionPanel(index)}\r\n                            >\r\n                                {expanded === index && (\r\n                                    <FlexBox\r\n                                        justifyContent=\"space-between\"\r\n                                        ml=\"12px\"\r\n                                    >\r\n                                        <Avatar src={message.sender.photo} />\r\n                                        <Box ml={1}>\r\n                                            <StyledH5>\r\n                                                {message.sender.name}\r\n                                            </StyledH5>\r\n                                            <Small sx={{ color: textMuted }}>\r\n                                                {format(\r\n                                                    new Date(\r\n                                                        message.date\r\n                                                    ).getTime(),\r\n                                                    'MMMM dd, yyyy'\r\n                                                )}\r\n                                            </Small>\r\n                                        </Box>\r\n                                    </FlexBox>\r\n                                )}\r\n\r\n                                {expanded !== index && (\r\n                                    <StyledH5\r\n                                        sx={{\r\n                                            fontSize: '14px',\r\n                                            color: textMuted,\r\n                                        }}\r\n                                    >\r\n                                        {message.sender.name}\r\n                                    </StyledH5>\r\n                                )}\r\n\r\n                                <Paragraph>{message.subject}</Paragraph>\r\n                                <Small sx={{ color: textMuted }}>\r\n                                    {getTimeDifference(new Date(message.date))}{' '}\r\n                                    ago\r\n                                </Small>\r\n                            </ContentBox>\r\n                            <MatxMenu\r\n                                menuButton={\r\n                                    <IconButton>\r\n                                        <Icon>more_vert</Icon>\r\n                                    </IconButton>\r\n                                }\r\n                            >\r\n                                <StyledItem>\r\n                                    <Icon className=\"icon\">reply</Icon> Reply\r\n                                </StyledItem>\r\n                                <StyledItem>\r\n                                    <Icon className=\"icon\">archive</Icon>{' '}\r\n                                    Archive\r\n                                </StyledItem>\r\n                                <StyledItem>\r\n                                    <Icon className=\"icon\">delete</Icon> Delete\r\n                                </StyledItem>\r\n                            </MatxMenu>\r\n                        </FlexBox>\r\n                    </AccordionSummary>\r\n                    <AccordionDetails>\r\n                        <div>{HtmlReactParser(message.message)}</div>\r\n                    </AccordionDetails>\r\n                </Accordion>\r\n            ))}\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default InboxMessageList\r\n"]},"metadata":{},"sourceType":"module"}