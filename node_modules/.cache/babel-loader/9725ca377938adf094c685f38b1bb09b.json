{"ast":null,"code":"import _objectSpread from \"/Users/zhaoyuliu/Desktop/matx-basic/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _slicedToArray from \"/Users/zhaoyuliu/Desktop/matx-basic/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\n\nvar _jsxFileName = \"/Users/zhaoyuliu/Desktop/matx-basic/src/app/views/scrum-board/ScrumBoardContainer.jsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport CardEditorDialog from './CardEditorDialog';\nimport Scrollbar from 'react-perfect-scrollbar';\nimport BoardList from './BoardList';\nimport { Avatar, Card, ClickAwayListener, TextField, InputAdornment, IconButton, Icon, Button } from '@mui/material';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { reorderCardInList, reorderList, moveCardInList } from '../../redux/actions/ScrumBoardActions';\nimport { Box, styled, useTheme } from '@mui/system';\nimport { Span } from 'app/components/Typography';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar StyledScrollBar = styled(Scrollbar)(function () {\n  return {\n    width: '100%',\n    display: 'flex',\n    position: 'relative',\n    paddingBottom: '16px'\n  };\n});\nvar StyledCard = styled(Card)(function () {\n  return {\n    padding: '16px',\n    minWidth: 288,\n    cursor: 'pointer',\n    marginLeft: '12px',\n    marginRight: '12px'\n  };\n});\n\nvar ScrumBoardContainer = function ScrumBoardContainer(_ref) {\n  _s();\n\n  var _ref$list = _ref.list,\n      list = _ref$list === void 0 ? [] : _ref$list,\n      handleAddList = _ref.handleAddList,\n      handleAddNewCard = _ref.handleAddNewCard;\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      card = _useState2[0],\n      setCard = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      shouldOpenDialog = _useState4[0],\n      setShouldOpenDialog = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      shouldOpenAddList = _useState6[0],\n      setShouldOpenAddList = _useState6[1];\n\n  var _useState7 = useState(''),\n      _useState8 = _slicedToArray(_useState7, 2),\n      columnTitle = _useState8[0],\n      setColumnTitle = _useState8[1];\n\n  var dispatch = useDispatch();\n\n  var _useSelector = useSelector(function (state) {\n    return state.scrumboard;\n  }),\n      _useSelector$board = _useSelector.board,\n      board = _useSelector$board === void 0 ? {} : _useSelector$board;\n\n  var handleCardClick = function handleCardClick(card) {\n    setCard(card);\n    setShouldOpenDialog(true);\n  };\n\n  var handleDialogClose = function handleDialogClose() {\n    setShouldOpenDialog(false);\n  };\n\n  var handleAddListToggle = function handleAddListToggle(value) {\n    setShouldOpenAddList(value);\n  };\n\n  var handleChange = function handleChange(event) {\n    if (event.key === 'Enter' && !event.shiftKey) {\n      handleAddList(columnTitle);\n      setColumnTitle('');\n    } else setColumnTitle(event.target.value);\n  };\n\n  var onDragEnd = function onDragEnd(result) {\n    var source = result.source,\n        destination = result.destination; // if dropped outside of list\n\n    if (!destination) {\n      return;\n    }\n\n    if (source.droppableId === 'horizontal-droppable') {\n      dispatch(reorderList(board.id, source.index, destination.index));\n    } else {\n      if (source.droppableId === destination.droppableId) {\n        dispatch(reorderCardInList(board.id, source.droppableId, source.index, destination.index));\n      } else {\n        dispatch(moveCardInList(board.id, source.droppableId, destination.droppableId, source, destination));\n      }\n    }\n  };\n\n  var _useTheme = useTheme(),\n      palette = _useTheme.palette;\n\n  var bgError = palette.error.main;\n  return /*#__PURE__*/_jsxDEV(StyledScrollBar, {\n    children: [/*#__PURE__*/_jsxDEV(DragDropContext, {\n      onDragEnd: onDragEnd,\n      children: /*#__PURE__*/_jsxDEV(Droppable, {\n        droppableId: \"horizontal-droppable\",\n        direction: \"horizontal\",\n        children: function children(provided) {\n          return /*#__PURE__*/_jsxDEV(Box, _objectSpread(_objectSpread({\n            ref: provided.innerRef\n          }, provided.droppableProps), {}, {\n            display: \"flex\",\n            children: [list.map(function (column, index) {\n              return /*#__PURE__*/_jsxDEV(Draggable, {\n                draggableId: column.id,\n                index: index,\n                type: \"column\",\n                children: function children(provided, snapshot) {\n                  return /*#__PURE__*/_jsxDEV(BoardList, {\n                    data: {\n                      provided: provided,\n                      snapshot: snapshot,\n                      column: column\n                    },\n                    handleCardClick: handleCardClick,\n                    handleDialogClose: handleDialogClose,\n                    handleAddNewCard: handleAddNewCard\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 131,\n                    columnNumber: 41\n                  }, _this);\n                }\n              }, column.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 124,\n                columnNumber: 33\n              }, _this);\n            }), provided.placeholder]\n          }), void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 25\n          }, _this);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 17\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: shouldOpenAddList ? /*#__PURE__*/_jsxDEV(ClickAwayListener, {\n        onClickAway: function onClickAway() {\n          return handleAddListToggle(false);\n        },\n        children: /*#__PURE__*/_jsxDEV(StyledCard, {\n          elevation: 3,\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            size: \"small\",\n            sx: {\n              mb: '12px'\n            },\n            variant: \"outlined\",\n            name: \"columnTitle\",\n            value: columnTitle,\n            fullWidth: true,\n            onChange: handleChange,\n            onKeyDown: handleChange,\n            InputProps: {\n              endAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n                position: \"end\",\n                children: /*#__PURE__*/_jsxDEV(IconButton, {\n                  size: \"small\",\n                  onClick: function onClick() {\n                    return handleAddListToggle(false);\n                  },\n                  children: /*#__PURE__*/_jsxDEV(Icon, {\n                    fontSize: \"small\",\n                    children: \"clear\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 176,\n                    columnNumber: 49\n                  }, _this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 170,\n                  columnNumber: 45\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 169,\n                columnNumber: 41\n              }, _this)\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 29\n          }, _this), /*#__PURE__*/_jsxDEV(Box, {\n            display: \"flex\",\n            justifyContent: \"flex-end\",\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              onClick: function onClick() {\n                handleAddList(columnTitle);\n                setColumnTitle('');\n              },\n              variant: \"contained\",\n              color: \"primary\",\n              children: \"Add\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 33\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 29\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 25\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 21\n      }, _this) : /*#__PURE__*/_jsxDEV(StyledCard, {\n        elevation: 3,\n        onClick: function onClick() {\n          return handleAddListToggle(true);\n        },\n        sx: {\n          display: 'flex',\n          alignItems: 'center',\n          background: 'rgba(0, 0, 0, 0.01)'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Avatar, {\n          sx: {\n            width: 24,\n            height: 24,\n            background: bgError\n          },\n          children: \"+\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 25\n        }, _this), /*#__PURE__*/_jsxDEV(Span, {\n          sx: {\n            ml: 4,\n            fontWeight: '500'\n          },\n          children: \"Add List\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 25\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 21\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 13\n    }, _this), shouldOpenDialog && /*#__PURE__*/_jsxDEV(CardEditorDialog, {\n      card: card,\n      open: shouldOpenDialog,\n      handleClose: handleDialogClose\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 17\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(ScrumBoardContainer, \"vg4r8F6Fy4QXXOECut23ef3AEzM=\", false, function () {\n  return [useDispatch, useSelector, useTheme];\n});\n\n_c = ScrumBoardContainer;\nexport default ScrumBoardContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"ScrumBoardContainer\");","map":{"version":3,"sources":["/Users/zhaoyuliu/Desktop/matx-basic/src/app/views/scrum-board/ScrumBoardContainer.jsx"],"names":["React","useState","DragDropContext","Droppable","Draggable","CardEditorDialog","Scrollbar","BoardList","Avatar","Card","ClickAwayListener","TextField","InputAdornment","IconButton","Icon","Button","useDispatch","useSelector","reorderCardInList","reorderList","moveCardInList","Box","styled","useTheme","Span","StyledScrollBar","width","display","position","paddingBottom","StyledCard","padding","minWidth","cursor","marginLeft","marginRight","ScrumBoardContainer","list","handleAddList","handleAddNewCard","card","setCard","shouldOpenDialog","setShouldOpenDialog","shouldOpenAddList","setShouldOpenAddList","columnTitle","setColumnTitle","dispatch","state","scrumboard","board","handleCardClick","handleDialogClose","handleAddListToggle","value","handleChange","event","key","shiftKey","target","onDragEnd","result","source","destination","droppableId","id","index","palette","bgError","error","main","provided","innerRef","droppableProps","map","column","snapshot","placeholder","mb","endAdornment","alignItems","background","height","ml","fontWeight"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd'\nimport CardEditorDialog from './CardEditorDialog'\nimport Scrollbar from 'react-perfect-scrollbar'\nimport BoardList from './BoardList'\nimport {\n    Avatar,\n    Card,\n    ClickAwayListener,\n    TextField,\n    InputAdornment,\n    IconButton,\n    Icon,\n    Button,\n} from '@mui/material'\nimport { useDispatch, useSelector } from 'react-redux'\nimport {\n    reorderCardInList,\n    reorderList,\n    moveCardInList,\n} from '../../redux/actions/ScrumBoardActions'\nimport { Box, styled, useTheme } from '@mui/system'\nimport { Span } from 'app/components/Typography'\n\nconst StyledScrollBar = styled(Scrollbar)(() => ({\n    width: '100%',\n    display: 'flex',\n    position: 'relative',\n    paddingBottom: '16px',\n}))\n\nconst StyledCard = styled(Card)(() => ({\n    padding: '16px',\n    minWidth: 288,\n    cursor: 'pointer',\n    marginLeft: '12px',\n    marginRight: '12px',\n}))\n\nconst ScrumBoardContainer = ({\n    list = [],\n    handleAddList,\n    handleAddNewCard,\n}) => {\n    const [card, setCard] = useState(null)\n    const [shouldOpenDialog, setShouldOpenDialog] = useState(false)\n    const [shouldOpenAddList, setShouldOpenAddList] = useState(false)\n    const [columnTitle, setColumnTitle] = useState('')\n\n    const dispatch = useDispatch()\n    const { board = {} } = useSelector((state) => state.scrumboard)\n\n    const handleCardClick = (card) => {\n        setCard(card)\n        setShouldOpenDialog(true)\n    }\n\n    const handleDialogClose = () => {\n        setShouldOpenDialog(false)\n    }\n\n    const handleAddListToggle = (value) => {\n        setShouldOpenAddList(value)\n    }\n\n    const handleChange = (event) => {\n        if (event.key === 'Enter' && !event.shiftKey) {\n            handleAddList(columnTitle)\n            setColumnTitle('')\n        } else setColumnTitle(event.target.value)\n    }\n\n    const onDragEnd = (result) => {\n        const { source, destination } = result\n\n        // if dropped outside of list\n        if (!destination) {\n            return\n        }\n\n        if (source.droppableId === 'horizontal-droppable') {\n            dispatch(reorderList(board.id, source.index, destination.index))\n        } else {\n            if (source.droppableId === destination.droppableId) {\n                dispatch(\n                    reorderCardInList(\n                        board.id,\n                        source.droppableId,\n                        source.index,\n                        destination.index\n                    )\n                )\n            } else {\n                dispatch(\n                    moveCardInList(\n                        board.id,\n                        source.droppableId,\n                        destination.droppableId,\n                        source,\n                        destination\n                    )\n                )\n            }\n        }\n    }\n\n    const { palette } = useTheme()\n    const bgError = palette.error.main\n\n    return (\n        <StyledScrollBar>\n            <DragDropContext onDragEnd={onDragEnd}>\n                <Droppable\n                    droppableId=\"horizontal-droppable\"\n                    direction=\"horizontal\"\n                >\n                    {(provided) => (\n                        <Box\n                            ref={provided.innerRef}\n                            {...provided.droppableProps}\n                            display=\"flex\"\n                        >\n                            {list.map((column, index) => (\n                                <Draggable\n                                    key={column.id}\n                                    draggableId={column.id}\n                                    index={index}\n                                    type=\"column\"\n                                >\n                                    {(provided, snapshot) => (\n                                        <BoardList\n                                            data={{\n                                                provided,\n                                                snapshot,\n                                                column,\n                                            }}\n                                            handleCardClick={handleCardClick}\n                                            handleDialogClose={\n                                                handleDialogClose\n                                            }\n                                            handleAddNewCard={handleAddNewCard}\n                                        ></BoardList>\n                                    )}\n                                </Draggable>\n                            ))}\n                            {provided.placeholder}\n                        </Box>\n                    )}\n                </Droppable>\n            </DragDropContext>\n\n            <div>\n                {shouldOpenAddList ? (\n                    <ClickAwayListener\n                        onClickAway={() => handleAddListToggle(false)}\n                    >\n                        <StyledCard elevation={3}>\n                            <TextField\n                                size=\"small\"\n                                sx={{ mb: '12px' }}\n                                variant=\"outlined\"\n                                name=\"columnTitle\"\n                                value={columnTitle}\n                                fullWidth\n                                onChange={handleChange}\n                                onKeyDown={handleChange}\n                                InputProps={{\n                                    endAdornment: (\n                                        <InputAdornment position=\"end\">\n                                            <IconButton\n                                                size=\"small\"\n                                                onClick={() =>\n                                                    handleAddListToggle(false)\n                                                }\n                                            >\n                                                <Icon fontSize=\"small\">\n                                                    clear\n                                                </Icon>\n                                            </IconButton>\n                                        </InputAdornment>\n                                    ),\n                                }}\n                            />\n                            <Box display=\"flex\" justifyContent=\"flex-end\">\n                                <Button\n                                    onClick={() => {\n                                        handleAddList(columnTitle)\n                                        setColumnTitle('')\n                                    }}\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                >\n                                    Add\n                                </Button>\n                            </Box>\n                        </StyledCard>\n                    </ClickAwayListener>\n                ) : (\n                    <StyledCard\n                        elevation={3}\n                        onClick={() => handleAddListToggle(true)}\n                        sx={{\n                            display: 'flex',\n                            alignItems: 'center',\n                            background: 'rgba(0, 0, 0, 0.01)',\n                        }}\n                    >\n                        <Avatar \n                            sx={{ \n                                width: 24, \n                                height: 24, \n                                background: bgError \n                            }}\n                        >\n                            +\n                        </Avatar>\n                        <Span sx={{ ml: 4, fontWeight: '500' }}>Add List</Span>\n                    </StyledCard>\n                )}\n            </div>\n\n            {shouldOpenDialog && (\n                <CardEditorDialog\n                    card={card}\n                    open={shouldOpenDialog}\n                    handleClose={handleDialogClose}\n                ></CardEditorDialog>\n            )}\n        </StyledScrollBar>\n    )\n}\n\nexport default ScrumBoardContainer\n"]},"metadata":{},"sourceType":"module"}