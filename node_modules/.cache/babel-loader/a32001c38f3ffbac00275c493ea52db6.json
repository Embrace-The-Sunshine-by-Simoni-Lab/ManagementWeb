{"ast":null,"code":"import _asyncToGenerator from \"/Users/zhaoyuliu/Desktop/Sunshine-manage/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _objectSpread from \"/Users/zhaoyuliu/Desktop/Sunshine-manage/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _slicedToArray from \"/Users/zhaoyuliu/Desktop/Sunshine-manage/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\n\nvar _jsxFileName = \"/Users/zhaoyuliu/Desktop/Sunshine-manage/src/app/views/sessions/login/JwtLogin.jsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport _regeneratorRuntime from \"/Users/zhaoyuliu/Desktop/Sunshine-manage/node_modules/@babel/runtime/regenerator/index.js\";\nimport { Card, Grid, Button, Checkbox, CircularProgress, FormControlLabel } from '@mui/material';\nimport React, { useState } from 'react';\nimport useAuth from 'app/hooks/useAuth';\nimport { useNavigate } from 'react-router-dom';\nimport { Box, styled, useTheme } from '@mui/system';\nimport { TextValidator, ValidatorForm } from 'react-material-ui-form-validator';\nimport { Paragraph, Span } from 'app/components/Typography';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar FlexBox = styled(Box)(function () {\n  return {\n    display: 'flex',\n    alignItems: 'center'\n  };\n});\nvar JustifyBox = styled(FlexBox)(function () {\n  return {\n    justifyContent: 'center'\n  };\n});\nvar ContentBox = styled(Box)(function () {\n  return {\n    height: '100%',\n    padding: '32px',\n    position: 'relative',\n    background: 'rgba(0, 0, 0, 0.01)'\n  };\n});\nvar IMG = styled('img')(function () {\n  return {\n    width: '100%'\n  };\n});\nvar JWTRoot = styled(JustifyBox)(function () {\n  return {\n    background: '#1A2038',\n    minHeight: '100% !important',\n    '& .card': {\n      maxWidth: 800,\n      borderRadius: 12,\n      margin: '1rem'\n    }\n  };\n});\nvar StyledProgress = styled(CircularProgress)(function () {\n  return {\n    position: 'absolute',\n    top: '6px',\n    left: '25px'\n  };\n});\n\nvar JwtLogin = function JwtLogin() {\n  _s();\n\n  var navigate = useNavigate();\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      loading = _useState2[0],\n      setLoading = _useState2[1];\n\n  var _useState3 = useState({\n    email: 'jason@ui-lib.com',\n    password: 'dummyPass'\n  }),\n      _useState4 = _slicedToArray(_useState3, 2),\n      userInfo = _useState4[0],\n      setUserInfo = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      message = _useState6[0],\n      setMessage = _useState6[1];\n\n  var _useAuth = useAuth(),\n      login = _useAuth.login;\n\n  var handleChange = function handleChange(_ref) {\n    var _ref$target = _ref.target,\n        name = _ref$target.name,\n        value = _ref$target.value;\n\n    var temp = _objectSpread({}, userInfo);\n\n    temp[name] = value;\n    setUserInfo(temp);\n  };\n\n  var _useTheme = useTheme(),\n      palette = _useTheme.palette;\n\n  var textError = palette.error.main;\n  var textPrimary = palette.primary.main;\n\n  var handleFormSubmit = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(event) {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              setLoading(true);\n              _context.prev = 1;\n              _context.next = 4;\n              return login(userInfo.email, userInfo.password);\n\n            case 4:\n              console.log(userInfo.email, userInfo.password);\n              navigate('/');\n              _context.next = 13;\n              break;\n\n            case 8:\n              _context.prev = 8;\n              _context.t0 = _context[\"catch\"](1);\n              console.log(_context.t0);\n              setMessage(_context.t0.message);\n              setLoading(false);\n\n            case 13:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[1, 8]]);\n    }));\n\n    return function handleFormSubmit(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  return /*#__PURE__*/_jsxDEV(JWTRoot, {\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      className: \"card\",\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          lg: 5,\n          md: 5,\n          sm: 5,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(JustifyBox, {\n            p: 4,\n            height: \"100%\",\n            children: /*#__PURE__*/_jsxDEV(IMG, {\n              src: \"/assets/images/illustrations/dreamer.svg\",\n              alt: \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 29\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 25\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 21\n        }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          lg: 7,\n          md: 7,\n          sm: 7,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(ContentBox, {\n            children: /*#__PURE__*/_jsxDEV(ValidatorForm, {\n              onSubmit: handleFormSubmit,\n              children: [/*#__PURE__*/_jsxDEV(TextValidator, {\n                sx: {\n                  mb: 3,\n                  width: '100%'\n                },\n                variant: \"outlined\",\n                size: \"small\",\n                label: \"Email\",\n                onChange: handleChange,\n                type: \"email\",\n                name: \"email\",\n                value: userInfo.email,\n                validators: ['required', 'isEmail'],\n                errorMessages: ['this field is required', 'email is not valid']\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 102,\n                columnNumber: 33\n              }, _this), /*#__PURE__*/_jsxDEV(TextValidator, {\n                sx: {\n                  mb: '12px',\n                  width: '100%'\n                },\n                label: \"Password\",\n                variant: \"outlined\",\n                size: \"small\",\n                onChange: handleChange,\n                name: \"password\",\n                type: \"password\",\n                value: userInfo.password,\n                validators: ['required'],\n                errorMessages: ['this field is required']\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 117,\n                columnNumber: 33\n              }, _this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n                sx: {\n                  mb: '12px',\n                  maxWidth: 288\n                },\n                name: \"agreement\",\n                onChange: handleChange,\n                control: /*#__PURE__*/_jsxDEV(Checkbox, {\n                  size: \"small\",\n                  onChange: function onChange(_ref3) {\n                    var checked = _ref3.target.checked;\n                    return handleChange({\n                      target: {\n                        name: 'agreement',\n                        value: checked\n                      }\n                    });\n                  },\n                  checked: userInfo.agreement || true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 134,\n                  columnNumber: 41\n                }, _this),\n                label: \"Remeber me\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 129,\n                columnNumber: 33\n              }, _this), message && /*#__PURE__*/_jsxDEV(Paragraph, {\n                sx: {\n                  color: textError\n                },\n                children: message\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 153,\n                columnNumber: 37\n              }, _this), /*#__PURE__*/_jsxDEV(FlexBox, {\n                mb: 2,\n                flexWrap: \"wrap\",\n                children: [/*#__PURE__*/_jsxDEV(Box, {\n                  position: \"relative\",\n                  children: [/*#__PURE__*/_jsxDEV(Button, {\n                    variant: \"contained\",\n                    color: \"primary\",\n                    disabled: loading,\n                    type: \"submit\",\n                    children: \"Sign in\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 160,\n                    columnNumber: 41\n                  }, _this), loading && /*#__PURE__*/_jsxDEV(StyledProgress, {\n                    size: 24,\n                    className: \"buttonProgress\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 169,\n                    columnNumber: 45\n                  }, _this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 159,\n                  columnNumber: 37\n                }, _this), /*#__PURE__*/_jsxDEV(Span, {\n                  sx: {\n                    mr: 1,\n                    ml: '20px'\n                  },\n                  children: \"or\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 175,\n                  columnNumber: 37\n                }, _this), /*#__PURE__*/_jsxDEV(Button, {\n                  sx: {\n                    textTransform: 'capitalize'\n                  },\n                  onClick: function onClick() {\n                    return navigate('/session/signup');\n                  },\n                  children: \"Sign up\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 176,\n                  columnNumber: 37\n                }, _this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 158,\n                columnNumber: 33\n              }, _this), /*#__PURE__*/_jsxDEV(Button, {\n                sx: {\n                  color: textPrimary\n                },\n                onClick: function onClick() {\n                  return navigate('/session/forgot-password');\n                },\n                children: \"Forgot password?\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 185,\n                columnNumber: 33\n              }, _this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 29\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 25\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 21\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(JwtLogin, \"6a06BaxM1kxv/j4wMVNR5DoSCDE=\", false, function () {\n  return [useNavigate, useAuth, useTheme];\n});\n\n_c = JwtLogin;\nexport default JwtLogin;\n\nvar _c;\n\n$RefreshReg$(_c, \"JwtLogin\");","map":{"version":3,"sources":["/Users/zhaoyuliu/Desktop/Sunshine-manage/src/app/views/sessions/login/JwtLogin.jsx"],"names":["Card","Grid","Button","Checkbox","CircularProgress","FormControlLabel","React","useState","useAuth","useNavigate","Box","styled","useTheme","TextValidator","ValidatorForm","Paragraph","Span","FlexBox","display","alignItems","JustifyBox","justifyContent","ContentBox","height","padding","position","background","IMG","width","JWTRoot","minHeight","maxWidth","borderRadius","margin","StyledProgress","top","left","JwtLogin","navigate","loading","setLoading","email","password","userInfo","setUserInfo","message","setMessage","login","handleChange","target","name","value","temp","palette","textError","error","main","textPrimary","primary","handleFormSubmit","event","console","log","mb","checked","agreement","color","mr","ml","textTransform"],"mappings":"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","sourcesContent":["import {\r\n    Card,\r\n    Grid,\r\n    Button,\r\n    Checkbox,\r\n    CircularProgress,\r\n    FormControlLabel,\r\n} from '@mui/material'\r\nimport React, { useState } from 'react'\r\nimport useAuth from 'app/hooks/useAuth'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport { Box, styled, useTheme } from '@mui/system'\r\nimport { TextValidator, ValidatorForm } from 'react-material-ui-form-validator'\r\nimport { Paragraph, Span } from 'app/components/Typography'\r\n\r\nconst FlexBox = styled(Box)(() => ({\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n}))\r\n\r\nconst JustifyBox = styled(FlexBox)(() => ({\r\n    justifyContent: 'center',\r\n}))\r\n\r\nconst ContentBox = styled(Box)(() => ({\r\n    height: '100%',\r\n    padding: '32px',\r\n    position: 'relative',\r\n    background: 'rgba(0, 0, 0, 0.01)',\r\n}))\r\n\r\nconst IMG = styled('img')(() => ({\r\n    width: '100%',\r\n}))\r\n\r\nconst JWTRoot = styled(JustifyBox)(() => ({\r\n    background: '#1A2038',\r\n    minHeight: '100% !important',\r\n    '& .card': {\r\n        maxWidth: 800,\r\n        borderRadius: 12,\r\n        margin: '1rem',\r\n    },\r\n}))\r\n\r\nconst StyledProgress = styled(CircularProgress)(() => ({\r\n    position: 'absolute',\r\n    top: '6px',\r\n    left: '25px',\r\n}))\r\n\r\nconst JwtLogin = () => {\r\n    const navigate = useNavigate()\r\n    const [loading, setLoading] = useState(false)\r\n    const [userInfo, setUserInfo] = useState({\r\n        email: 'jason@ui-lib.com',\r\n        password: 'dummyPass',\r\n    })\r\n    const [message, setMessage] = useState('')\r\n    const { login } = useAuth()\r\n\r\n    const handleChange = ({ target: { name, value } }) => {\r\n        let temp = { ...userInfo }\r\n        temp[name] = value\r\n        setUserInfo(temp)\r\n    }\r\n\r\n    const { palette } = useTheme()\r\n    const textError = palette.error.main\r\n    const textPrimary = palette.primary.main\r\n\r\n    const handleFormSubmit = async (event) => {\r\n        setLoading(true)\r\n        try\r\n        {\r\n            await login(userInfo.email, userInfo.password)\r\n            console.log(userInfo.email, userInfo.password)\r\n            navigate('/')\r\n        } catch (e)\r\n        {\r\n            console.log(e)\r\n            setMessage(e.message)\r\n            setLoading(false)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <JWTRoot>\r\n            <Card className=\"card\">\r\n                <Grid container>\r\n                    <Grid item lg={5} md={5} sm={5} xs={12}>\r\n                        <JustifyBox p={4} height=\"100%\">\r\n                            <IMG\r\n                                src=\"/assets/images/illustrations/dreamer.svg\"\r\n                                alt=\"\"\r\n                            />\r\n                        </JustifyBox>\r\n                    </Grid>\r\n                    <Grid item lg={7} md={7} sm={7} xs={12}>\r\n                        <ContentBox>\r\n                            <ValidatorForm onSubmit={handleFormSubmit}>\r\n                                <TextValidator\r\n                                    sx={{ mb: 3, width: '100%' }}\r\n                                    variant=\"outlined\"\r\n                                    size=\"small\"\r\n                                    label=\"Email\"\r\n                                    onChange={handleChange}\r\n                                    type=\"email\"\r\n                                    name=\"email\"\r\n                                    value={userInfo.email}\r\n                                    validators={['required', 'isEmail']}\r\n                                    errorMessages={[\r\n                                        'this field is required',\r\n                                        'email is not valid',\r\n                                    ]}\r\n                                />\r\n                                <TextValidator\r\n                                    sx={{ mb: '12px', width: '100%' }}\r\n                                    label=\"Password\"\r\n                                    variant=\"outlined\"\r\n                                    size=\"small\"\r\n                                    onChange={handleChange}\r\n                                    name=\"password\"\r\n                                    type=\"password\"\r\n                                    value={userInfo.password}\r\n                                    validators={['required']}\r\n                                    errorMessages={['this field is required']}\r\n                                />\r\n                                <FormControlLabel\r\n                                    sx={{ mb: '12px', maxWidth: 288 }}\r\n                                    name=\"agreement\"\r\n                                    onChange={handleChange}\r\n                                    control={\r\n                                        <Checkbox\r\n                                            size=\"small\"\r\n                                            onChange={({\r\n                                                target: { checked },\r\n                                            }) =>\r\n                                                handleChange({\r\n                                                    target: {\r\n                                                        name: 'agreement',\r\n                                                        value: checked,\r\n                                                    },\r\n                                                })\r\n                                            }\r\n                                            checked={userInfo.agreement || true}\r\n                                        />\r\n                                    }\r\n                                    label=\"Remeber me\"\r\n                                />\r\n\r\n                                {message && (\r\n                                    <Paragraph sx={{ color: textError }}>\r\n                                        {message}\r\n                                    </Paragraph>\r\n                                )}\r\n\r\n                                <FlexBox mb={2} flexWrap=\"wrap\">\r\n                                    <Box position=\"relative\">\r\n                                        <Button\r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                            disabled={loading}\r\n                                            type=\"submit\"\r\n                                        >\r\n                                            Sign in\r\n                                        </Button>\r\n                                        {loading && (\r\n                                            <StyledProgress\r\n                                                size={24}\r\n                                                className=\"buttonProgress\"\r\n                                            />\r\n                                        )}\r\n                                    </Box>\r\n                                    <Span sx={{ mr: 1, ml: '20px' }}>or</Span>\r\n                                    <Button\r\n                                        sx={{ textTransform: 'capitalize' }}\r\n                                        onClick={() =>\r\n                                            navigate('/session/signup')\r\n                                        }\r\n                                    >\r\n                                        Sign up\r\n                                    </Button>\r\n                                </FlexBox>\r\n                                <Button\r\n                                    sx={{ color: textPrimary }}\r\n                                    onClick={() =>\r\n                                        navigate('/session/forgot-password')\r\n                                    }\r\n                                >\r\n                                    Forgot password?\r\n                                </Button>\r\n                            </ValidatorForm>\r\n                        </ContentBox>\r\n                    </Grid>\r\n                </Grid>\r\n            </Card>\r\n        </JWTRoot>\r\n    )\r\n}\r\n\r\nexport default JwtLogin\r\n"]},"metadata":{},"sourceType":"module"}