{"ast":null,"code":"import _objectSpread from \"/Users/zhaoyuliu/Desktop/matx-pro-3.3.0/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _slicedToArray from \"/Users/zhaoyuliu/Desktop/matx-pro-3.3.0/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\n\nvar _jsxFileName = \"/Users/zhaoyuliu/Desktop/matx-pro-3.3.0/src/app/views/forms/invoice-form/InvoiceItemTable.jsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Table, TableHead, TableRow, TableCell, TableBody, TextField, Button, IconButton, Icon, Select, MenuItem, Autocomplete } from '@mui/material';\nimport { Formik, Form, Field, FieldArray } from 'formik';\nimport { getProductList, calculateAmount } from './InvoiceFormService';\nimport { Box, styled } from '@mui/system';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar FlexBox = styled('div')(function () {\n  return {\n    display: 'flex',\n    alignItems: 'center'\n  };\n});\nvar IMG = styled('img')(function () {\n  return {\n    width: 48\n  };\n});\nvar StyledCell = styled(TableCell)(function () {\n  return {\n    padding: 0\n  };\n});\n\nvar InvoiceItemTable = function InvoiceItemTable(_ref) {\n  _s();\n\n  var values = _ref.values,\n      handleChange = _ref.handleChange,\n      setFieldValue = _ref.setFieldValue;\n\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      isAlive = _useState2[0],\n      setIsAlive = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      productList = _useState4[0],\n      setProductList = _useState4[1];\n\n  useEffect(function () {\n    getProductList().then(function (_ref2) {\n      var data = _ref2.data;\n      if (isAlive) setProductList(data);\n    });\n    return function () {\n      return setIsAlive(false);\n    };\n  }, [isAlive]);\n  return /*#__PURE__*/_jsxDEV(FieldArray, {\n    name: \"items\",\n    children: function children(arrayHelpers) {\n      var _values$items;\n\n      return /*#__PURE__*/_jsxDEV(Box, {\n        overflow: \"auto\",\n        children: [/*#__PURE__*/_jsxDEV(Table, {\n          sx: {\n            whiteSpace: 'pre',\n            minWidth: 750\n          },\n          children: [/*#__PURE__*/_jsxDEV(TableHead, {\n            children: /*#__PURE__*/_jsxDEV(TableRow, {\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                colSpan: 7,\n                children: \"Item Details\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 50,\n                columnNumber: 33\n              }, _this), /*#__PURE__*/_jsxDEV(TableCell, {\n                colSpan: 2,\n                children: \"Quantity \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 51,\n                columnNumber: 33\n              }, _this), /*#__PURE__*/_jsxDEV(TableCell, {\n                colSpan: 2,\n                children: \"Rate\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 52,\n                columnNumber: 33\n              }, _this), /*#__PURE__*/_jsxDEV(TableCell, {\n                colSpan: 2,\n                children: \"Discount\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 53,\n                columnNumber: 33\n              }, _this), /*#__PURE__*/_jsxDEV(TableCell, {\n                colSpan: 2,\n                align: \"center\",\n                children: \"Amount\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 54,\n                columnNumber: 33\n              }, _this), /*#__PURE__*/_jsxDEV(StyledCell, {\n                colSpan: 1,\n                align: \"center\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 57,\n                columnNumber: 33\n              }, _this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 29\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 25\n          }, _this), /*#__PURE__*/_jsxDEV(TableBody, {\n            children: (_values$items = values.items) === null || _values$items === void 0 ? void 0 : _values$items.map(function (item, ind) {\n              return /*#__PURE__*/_jsxDEV(TableRow, {\n                sx: {\n                  position: 'relative'\n                },\n                children: [/*#__PURE__*/_jsxDEV(StyledCell, {\n                  colSpan: 7,\n                  align: \"left\",\n                  children: /*#__PURE__*/_jsxDEV(FlexBox, {\n                    children: [/*#__PURE__*/_jsxDEV(IMG, {\n                      alt: \"\",\n                      src: item === null || item === void 0 ? void 0 : item.imgUrl\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 68,\n                      columnNumber: 45\n                    }, _this), /*#__PURE__*/_jsxDEV(Autocomplete, {\n                      size: \"small\",\n                      sx: {\n                        width: '100%'\n                      },\n                      options: productList,\n                      getOptionLabel: function getOptionLabel(option) {\n                        return option.title;\n                      },\n                      renderInput: function renderInput(params) {\n                        return /*#__PURE__*/_jsxDEV(TextField, _objectSpread(_objectSpread({}, params), {}, {\n                          variant: \"outlined\",\n                          fullWidth: true\n                        }), void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 77,\n                          columnNumber: 53\n                        }, _this);\n                      },\n                      onChange: function onChange(event, newValue) {\n                        handleChange({\n                          target: {\n                            name: \"items[\".concat(ind, \"]\"),\n                            value: newValue\n                          }\n                        });\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 69,\n                      columnNumber: 45\n                    }, _this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 67,\n                    columnNumber: 41\n                  }, _this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 66,\n                  columnNumber: 37\n                }, _this), /*#__PURE__*/_jsxDEV(StyledCell, {\n                  colSpan: 2,\n                  align: \"left\",\n                  children: /*#__PURE__*/_jsxDEV(TextField, {\n                    name: \"items[\".concat(ind, \"].quantity\"),\n                    size: \"small\",\n                    variant: \"outlined\",\n                    type: \"number\",\n                    fullWidth: true,\n                    defaultValue: item.quantity || '',\n                    onChange: handleChange\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 96,\n                    columnNumber: 41\n                  }, _this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 95,\n                  columnNumber: 37\n                }, _this), /*#__PURE__*/_jsxDEV(StyledCell, {\n                  colSpan: 2,\n                  align: \"left\",\n                  children: /*#__PURE__*/_jsxDEV(TextField, {\n                    name: \"items[\".concat(ind, \"].price\"),\n                    size: \"small\",\n                    variant: \"outlined\",\n                    type: \"number\",\n                    fullWidth: true,\n                    value: item.price || '',\n                    onChange: handleChange\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 107,\n                    columnNumber: 41\n                  }, _this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 106,\n                  columnNumber: 37\n                }, _this), /*#__PURE__*/_jsxDEV(StyledCell, {\n                  colSpan: 2,\n                  align: \"left\",\n                  children: /*#__PURE__*/_jsxDEV(TextField, {\n                    name: \"items[\".concat(ind, \"].discount\"),\n                    size: \"small\",\n                    variant: \"outlined\",\n                    type: \"number\",\n                    fullWidth: true,\n                    value: item.discount || '',\n                    onChange: handleChange,\n                    InputProps: {\n                      style: {\n                        paddingRight: 0\n                      },\n                      endAdornment: /*#__PURE__*/_jsxDEV(Select, {\n                        name: \"items[\".concat(ind, \"].discountType\"),\n                        margin: \"none\",\n                        variant: \"standard\",\n                        value: item.discountType || '%',\n                        onChange: handleChange,\n                        children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                          value: \"$\",\n                          children: \"$\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 141,\n                          columnNumber: 57\n                        }, _this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                          value: \"%\",\n                          children: \"%\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 144,\n                          columnNumber: 57\n                        }, _this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 131,\n                        columnNumber: 53\n                      }, _this)\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 118,\n                    columnNumber: 41\n                  }, _this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 117,\n                  columnNumber: 37\n                }, _this), /*#__PURE__*/_jsxDEV(StyledCell, {\n                  colSpan: 2,\n                  align: \"center\",\n                  children: calculateAmount(item).toFixed(2)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 152,\n                  columnNumber: 37\n                }, _this), /*#__PURE__*/_jsxDEV(StyledCell, {\n                  colSpan: 1,\n                  align: \"center\",\n                  children: /*#__PURE__*/_jsxDEV(IconButton, {\n                    size: \"small\",\n                    onClick: function onClick() {\n                      return arrayHelpers.remove(ind);\n                    },\n                    children: /*#__PURE__*/_jsxDEV(Icon, {\n                      color: \"error\",\n                      fontSize: \"small\",\n                      children: \"clear\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 162,\n                      columnNumber: 45\n                    }, _this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 156,\n                    columnNumber: 41\n                  }, _this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 155,\n                  columnNumber: 37\n                }, _this)]\n              }, ind, true, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 33\n              }, _this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 25\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, _this), /*#__PURE__*/_jsxDEV(Button, {\n          sx: {\n            mt: '16px !important'\n          },\n          color: \"primary\",\n          variant: \"contained\",\n          onClick: function onClick() {\n            return arrayHelpers.push({});\n          },\n          children: \"+ Add New Item\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 21\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, _this);\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(InvoiceItemTable, \"mi5GO3gxLbyIvIpSDenPmgDY0J0=\");\n\n_c = InvoiceItemTable;\nexport default InvoiceItemTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"InvoiceItemTable\");","map":{"version":3,"sources":["/Users/zhaoyuliu/Desktop/matx-pro-3.3.0/src/app/views/forms/invoice-form/InvoiceItemTable.jsx"],"names":["React","useState","useEffect","Table","TableHead","TableRow","TableCell","TableBody","TextField","Button","IconButton","Icon","Select","MenuItem","Autocomplete","Formik","Form","Field","FieldArray","getProductList","calculateAmount","Box","styled","FlexBox","display","alignItems","IMG","width","StyledCell","padding","InvoiceItemTable","values","handleChange","setFieldValue","isAlive","setIsAlive","productList","setProductList","then","data","arrayHelpers","whiteSpace","minWidth","items","map","item","ind","position","imgUrl","option","title","params","event","newValue","target","name","value","quantity","price","discount","style","paddingRight","endAdornment","discountType","toFixed","remove","mt","push"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport {\n    Table,\n    TableHead,\n    TableRow,\n    TableCell,\n    TableBody,\n    TextField,\n    Button,\n    IconButton,\n    Icon,\n    Select,\n    MenuItem,\n    Autocomplete\n} from '@mui/material'\nimport { Formik, Form, Field, FieldArray } from 'formik'\nimport { getProductList, calculateAmount } from './InvoiceFormService'\nimport { Box, styled } from '@mui/system'\n\nconst FlexBox = styled('div')(() => ({\n    display: 'flex',\n    alignItems: 'center',\n}))\n\nconst IMG = styled('img')(() => ({ width: 48 }))\n\nconst StyledCell = styled(TableCell)(() => ({\n    padding: 0,\n}))\n\nconst InvoiceItemTable = ({ values, handleChange, setFieldValue }) => {\n    const [isAlive, setIsAlive] = useState(true)\n    const [productList, setProductList] = useState([])\n\n    useEffect(() => {\n        getProductList().then(({ data }) => {\n            if (isAlive) setProductList(data)\n        })\n\n        return () => setIsAlive(false)\n    }, [isAlive])\n\n    return (\n        <FieldArray name=\"items\">\n            {(arrayHelpers) => (\n                <Box overflow=\"auto\">\n                    <Table sx={{ whiteSpace: 'pre', minWidth: 750 }}>\n                        <TableHead>\n                            <TableRow>\n                                <TableCell colSpan={7}>Item Details</TableCell>\n                                <TableCell colSpan={2}>Quantity </TableCell>\n                                <TableCell colSpan={2}>Rate</TableCell>\n                                <TableCell colSpan={2}>Discount</TableCell>\n                                <TableCell colSpan={2} align=\"center\">\n                                    Amount\n                                </TableCell>\n                                <StyledCell colSpan={1} align=\"center\" />\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            {values.items?.map((item, ind) => (\n                                <TableRow\n                                    key={ind}\n                                    sx={{ position: 'relative' }}\n                                >\n                                    <StyledCell colSpan={7} align=\"left\">\n                                        <FlexBox>\n                                            <IMG alt=\"\" src={item?.imgUrl} />\n                                            <Autocomplete\n                                                size=\"small\"\n                                                sx={{ width: '100%' }}\n                                                options={productList}\n                                                getOptionLabel={(option) =>\n                                                    option.title\n                                                }\n                                                renderInput={(params) => (\n                                                    <TextField\n                                                        {...params}\n                                                        variant=\"outlined\"\n                                                        fullWidth\n                                                    />\n                                                )}\n                                                onChange={(event, newValue) => {\n                                                    handleChange({\n                                                        target: {\n                                                            name: `items[${ind}]`,\n                                                            value: newValue,\n                                                        },\n                                                    })\n                                                }}\n                                            />\n                                        </FlexBox>\n                                    </StyledCell>\n\n                                    <StyledCell colSpan={2} align=\"left\">\n                                        <TextField\n                                            name={`items[${ind}].quantity`}\n                                            size=\"small\"\n                                            variant=\"outlined\"\n                                            type=\"number\"\n                                            fullWidth\n                                            defaultValue={item.quantity || ''}\n                                            onChange={handleChange}\n                                        />\n                                    </StyledCell>\n                                    <StyledCell colSpan={2} align=\"left\">\n                                        <TextField\n                                            name={`items[${ind}].price`}\n                                            size=\"small\"\n                                            variant=\"outlined\"\n                                            type=\"number\"\n                                            fullWidth\n                                            value={item.price || ''}\n                                            onChange={handleChange}\n                                        />\n                                    </StyledCell>\n                                    <StyledCell colSpan={2} align=\"left\">\n                                        <TextField\n                                            name={`items[${ind}].discount`}\n                                            size=\"small\"\n                                            variant=\"outlined\"\n                                            type=\"number\"\n                                            fullWidth\n                                            value={item.discount || ''}\n                                            onChange={handleChange}\n                                            InputProps={{\n                                                style: {\n                                                    paddingRight: 0,\n                                                },\n                                                endAdornment: (\n                                                    <Select\n                                                        name={`items[${ind}].discountType`}\n                                                        margin=\"none\"\n                                                        variant=\"standard\"\n                                                        value={\n                                                            item.discountType ||\n                                                            '%'\n                                                        }\n                                                        onChange={handleChange}\n                                                    >\n                                                        <MenuItem value=\"$\">\n                                                            $\n                                                        </MenuItem>\n                                                        <MenuItem value=\"%\">\n                                                            %\n                                                        </MenuItem>\n                                                    </Select>\n                                                ),\n                                            }}\n                                        />\n                                    </StyledCell>\n                                    <StyledCell colSpan={2} align=\"center\">\n                                        {calculateAmount(item).toFixed(2)}\n                                    </StyledCell>\n                                    <StyledCell colSpan={1} align=\"center\">\n                                        <IconButton\n                                            size=\"small\"\n                                            onClick={() =>\n                                                arrayHelpers.remove(ind)\n                                            }\n                                        >\n                                            <Icon\n                                                color=\"error\"\n                                                fontSize=\"small\"\n                                            >\n                                                clear\n                                            </Icon>\n                                        </IconButton>\n                                    </StyledCell>\n                                </TableRow>\n                            ))}\n                        </TableBody>\n                    </Table>\n                    <Button\n                        sx={{ mt: '16px !important' }}\n                        color=\"primary\"\n                        variant=\"contained\"\n                        onClick={() => arrayHelpers.push({})}\n                    >\n                        + Add New Item\n                    </Button>\n                </Box>\n            )}\n        </FieldArray>\n    )\n}\n\nexport default InvoiceItemTable\n"]},"metadata":{},"sourceType":"module"}