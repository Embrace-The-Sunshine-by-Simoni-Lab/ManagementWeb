{"ast":null,"code":"import _defineProperty from \"/Users/zhaoyuliu/Desktop/matx-basic/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _objectSpread from \"/Users/zhaoyuliu/Desktop/matx-basic/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _slicedToArray from \"/Users/zhaoyuliu/Desktop/matx-basic/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\n\nvar _jsxFileName = \"/Users/zhaoyuliu/Desktop/matx-basic/src/app/views/calendar/EventEditorDialog.jsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { Box, styled } from '@mui/system';\nimport React, { useState } from 'react';\nimport { H4 } from '../../components/Typography';\nimport { Dialog, IconButton, Button, Icon, Grid, TextField } from '@mui/material';\nimport { ValidatorForm, TextValidator } from 'react-material-ui-form-validator';\nimport { addNewEvent, updateEvent, deleteEvent } from './CalendarService';\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\nimport DateTimePicker2 from '@mui/lab/DateTimePicker';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar DialogFooter = styled(Box)(function () {\n  return {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'space-between'\n  };\n});\nvar DialogHeader = styled(DialogFooter)(function (_ref) {\n  var theme = _ref.theme;\n  return {\n    padding: \"10px 15px\",\n    background: theme.palette.primary.main\n  };\n});\n\nvar EventEditorDialog = function EventEditorDialog(_ref2) {\n  _s();\n\n  var _ref2$event = _ref2.event,\n      event = _ref2$event === void 0 ? {} : _ref2$event,\n      open = _ref2.open,\n      handleClose = _ref2.handleClose;\n\n  var _useState = useState(event),\n      _useState2 = _slicedToArray(_useState, 2),\n      state = _useState2[0],\n      setState = _useState2[1];\n\n  var handleChange = function handleChange(event) {\n    setState(_objectSpread(_objectSpread({}, state), {}, _defineProperty({}, event.target.name, event.target.value)));\n  };\n\n  var handleFormSubmit = function handleFormSubmit() {\n    var id = state.id;\n\n    if (id) {\n      updateEvent(_objectSpread({}, state)).then(function () {\n        handleClose();\n      });\n    } else {\n      addNewEvent(_objectSpread({\n        id: generateRandomId()\n      }, state)).then(function () {\n        handleClose();\n      });\n    }\n  };\n\n  var handleDeleteEvent = function handleDeleteEvent() {\n    if (state.id) {\n      deleteEvent(state).then(function () {\n        handleClose();\n      });\n    }\n  };\n\n  var handleDateChange = function handleDateChange(date, name) {\n    setState(_objectSpread(_objectSpread({}, state), {}, _defineProperty({}, name, date)));\n  };\n\n  var generateRandomId = function generateRandomId() {\n    var tempId = Math.random().toString();\n    var id = tempId.substr(2, tempId.length - 1);\n    return id;\n  };\n\n  var title = state.title,\n      location = state.location,\n      note = state.note;\n  return /*#__PURE__*/_jsxDEV(Dialog, {\n    onClose: handleClose,\n    open: open,\n    maxWidth: \"xs\",\n    fullWidth: true,\n    children: [/*#__PURE__*/_jsxDEV(DialogHeader, {\n      children: [/*#__PURE__*/_jsxDEV(H4, {\n        sx: {\n          m: 0,\n          color: '#fff'\n        },\n        children: \"Add Events\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(IconButton, {\n        onClick: handleClose,\n        children: /*#__PURE__*/_jsxDEV(Icon, {\n          sx: {\n            color: '#fff'\n          },\n          children: \"clear\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(Box, {\n      p: 2,\n      children: /*#__PURE__*/_jsxDEV(ValidatorForm, {\n        onSubmit: handleFormSubmit,\n        children: [/*#__PURE__*/_jsxDEV(TextValidator, {\n          label: \"Title\",\n          type: \"text\",\n          name: \"title\",\n          value: title || '',\n          onChange: handleChange,\n          validators: ['required'],\n          errorMessages: ['this field is required'],\n          style: {\n            width: '100%',\n            marginBottom: '24px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 4,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            sm: 6,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(LocalizationProvider, {\n              dateAdapter: AdapterDateFns,\n              children: /*#__PURE__*/_jsxDEV(DateTimePicker2, {\n                value: new Date(),\n                onChange: function onChange(date) {\n                  return handleDateChange(date, 'start');\n                },\n                renderInput: function renderInput(props) {\n                  return /*#__PURE__*/_jsxDEV(TextField, _objectSpread(_objectSpread({}, props), {}, {\n                    label: \"Start date\",\n                    variant: \"standard\"\n                  }), void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 100,\n                    columnNumber: 41\n                  }, _this);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 33\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 29\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 25\n          }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            sm: 6,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(LocalizationProvider, {\n              dateAdapter: AdapterDateFns,\n              children: /*#__PURE__*/_jsxDEV(DateTimePicker2, {\n                value: new Date(),\n                onChange: function onChange(date) {\n                  return handleDateChange(date, 'end');\n                },\n                renderInput: function renderInput(props) {\n                  return /*#__PURE__*/_jsxDEV(TextField, _objectSpread(_objectSpread({}, props), {}, {\n                    label: \"End date\",\n                    variant: \"standard\"\n                  }), void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 116,\n                    columnNumber: 41\n                  }, _this);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 33\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 29\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 25\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 21\n        }, _this), /*#__PURE__*/_jsxDEV(Box, {\n          py: 1.3\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 21\n        }, _this), /*#__PURE__*/_jsxDEV(TextValidator, {\n          label: \"Location\",\n          onChange: handleChange,\n          type: \"text\",\n          name: \"location\",\n          value: location || '',\n          validators: ['required'],\n          errorMessages: ['this field is required'],\n          style: {\n            width: '100%',\n            marginBottom: '24px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 21\n        }, _this), /*#__PURE__*/_jsxDEV(TextValidator, {\n          label: \"Note\",\n          onChange: handleChange,\n          type: \"text\",\n          name: \"note\",\n          value: note || '',\n          rowsMax: 2,\n          multiline: true,\n          validators: ['required'],\n          errorMessages: ['this field is required'],\n          style: {\n            width: '100%',\n            marginBottom: '24px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 21\n        }, _this), /*#__PURE__*/_jsxDEV(DialogFooter, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            color: \"primary\",\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 25\n          }, _this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: handleDeleteEvent,\n            children: [/*#__PURE__*/_jsxDEV(Icon, {\n              sx: {\n                mr: 1,\n                verticalAlign: 'middle'\n              },\n              children: \"delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 29\n            }, _this), \"Delete\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 25\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 21\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(EventEditorDialog, \"DcRl++5ooUrz1LEETzIK8EUbFT0=\");\n\n_c = EventEditorDialog;\nexport default EventEditorDialog;\n\nvar _c;\n\n$RefreshReg$(_c, \"EventEditorDialog\");","map":{"version":3,"sources":["/Users/zhaoyuliu/Desktop/matx-basic/src/app/views/calendar/EventEditorDialog.jsx"],"names":["Box","styled","React","useState","H4","Dialog","IconButton","Button","Icon","Grid","TextField","ValidatorForm","TextValidator","addNewEvent","updateEvent","deleteEvent","AdapterDateFns","LocalizationProvider","DateTimePicker2","DialogFooter","display","alignItems","justifyContent","DialogHeader","theme","padding","background","palette","primary","main","EventEditorDialog","event","open","handleClose","state","setState","handleChange","target","name","value","handleFormSubmit","id","then","generateRandomId","handleDeleteEvent","handleDateChange","date","tempId","Math","random","toString","substr","length","title","location","note","m","color","width","marginBottom","Date","props","mr","verticalAlign"],"mappings":"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","sourcesContent":["import { Box, styled } from '@mui/system'\nimport React, { useState } from 'react'\nimport { H4 } from '../../components/Typography'\nimport { Dialog, IconButton, Button, Icon, Grid, TextField } from '@mui/material'\nimport { ValidatorForm, TextValidator } from 'react-material-ui-form-validator'\nimport { addNewEvent, updateEvent, deleteEvent } from './CalendarService'\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\nimport LocalizationProvider from '@mui/lab/LocalizationProvider'\nimport DateTimePicker2 from '@mui/lab/DateTimePicker'\n\nconst DialogFooter = styled(Box)(() => ({\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'space-between'\n}))\n\nconst DialogHeader = styled(DialogFooter)(({ theme }) => ({\n    padding: \"10px 15px\",\n    background: theme.palette.primary.main\n}))\n\nconst EventEditorDialog = ({ event = {}, open, handleClose }) => {\n    const [state, setState] = useState(event)\n    const handleChange = (event) => {\n        setState({ ...state, [event.target.name]: event.target.value })\n    }\n\n    const handleFormSubmit = () => {\n        let { id } = state\n        if (id) {\n            updateEvent({\n                ...state,\n            }).then(() => {\n                handleClose()\n            })\n        } else {\n            addNewEvent({\n                id: generateRandomId(),\n                ...state,\n            }).then(() => {\n                handleClose()\n            })\n        }\n    }\n    const handleDeleteEvent = () => {\n        if (state.id) {\n            deleteEvent(state).then(() => {\n                handleClose()\n            })\n        }\n    }\n    const handleDateChange = (date, name) => {\n        setState({\n            ...state,\n            [name]: date,\n        })\n    }\n    const generateRandomId = () => {\n        let tempId = Math.random().toString()\n        let id = tempId.substr(2, tempId.length - 1)\n        return id\n    }\n    let { title, location, note } = state\n\n    return (\n        <Dialog\n            onClose={handleClose}\n            open={open}\n            maxWidth=\"xs\"\n            fullWidth={true}\n        >\n            <DialogHeader>\n                <H4 sx={{ m: 0, color: '#fff' }}>Add Events</H4>\n                <IconButton onClick={handleClose}>\n                    <Icon sx={{ color: '#fff' }}>clear</Icon>\n                </IconButton>\n            </DialogHeader>\n\n            <Box p={2}>\n                <ValidatorForm onSubmit={handleFormSubmit}>\n                    <TextValidator\n                        label=\"Title\"\n                        type=\"text\"\n                        name=\"title\"\n                        value={title || ''}\n                        onChange={handleChange}\n                        validators={['required']}\n                        errorMessages={['this field is required']}\n                        style={{ width: '100%', marginBottom: '24px' }}\n                    />\n\n                    <Grid container spacing={4}>\n                        <Grid item sm={6} xs={12}>\n                            <LocalizationProvider dateAdapter={AdapterDateFns}>\n                                <DateTimePicker2\n                                    value={new Date()}\n                                    onChange={(date) =>\n                                        handleDateChange(date, 'start')}\n                                    renderInput={(props) => (\n                                        <TextField\n                                            {...props}\n                                            label=\"Start date\"\n                                            variant=\"standard\"\n                                        />\n                                    )}\n                                />\n                            </LocalizationProvider>\n                        </Grid>\n                        <Grid item sm={6} xs={12}>\n                            <LocalizationProvider dateAdapter={AdapterDateFns}>\n                                <DateTimePicker2\n                                    value={new Date()}\n                                    onChange={(date) =>\n                                        handleDateChange(date, 'end')}\n                                    renderInput={(props) => (\n                                        <TextField\n                                            {...props}\n                                            label=\"End date\"\n                                            variant=\"standard\"\n                                        />\n                                    )}\n                                />\n                            </LocalizationProvider>\n                        </Grid>\n                    </Grid>\n                    <Box py={1.3} />\n                    <TextValidator\n                        label=\"Location\"\n                        onChange={handleChange}\n                        type=\"text\"\n                        name=\"location\"\n                        value={location || ''}\n                        validators={['required']}\n                        errorMessages={['this field is required']}\n                        style={{ width: '100%', marginBottom: '24px' }}\n                    />\n\n                    <TextValidator\n                        label=\"Note\"\n                        onChange={handleChange}\n                        type=\"text\"\n                        name=\"note\"\n                        value={note || ''}\n                        rowsMax={2}\n                        multiline={true}\n                        validators={['required']}\n                        errorMessages={['this field is required']}\n                        style={{ width: '100%', marginBottom: '24px' }}\n                    />\n\n                    <DialogFooter>\n                        <Button\n                            variant=\"contained\"\n                            color=\"primary\"\n                        >\n                            Save\n                        </Button>\n                        <Button onClick={handleDeleteEvent}>\n                            <Icon sx={{ mr: 1, verticalAlign: 'middle' }}>\n                                delete\n                            </Icon>\n                            Delete\n                        </Button>\n                    </DialogFooter>\n                </ValidatorForm>\n            </Box>\n        </Dialog>\n    )\n}\n\nexport default EventEditorDialog\n"]},"metadata":{},"sourceType":"module"}