{"ast":null,"code":"import _objectSpread from \"/Users/zhaoyuliu/Desktop/matx-basic/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\n\nvar _jsxFileName = \"/Users/zhaoyuliu/Desktop/matx-basic/src/app/views/todo/TodoItem.jsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Card, Icon, Chip, Checkbox, MenuItem, IconButton, FormControlLabel } from '@mui/material';\nimport { MatxMenu } from 'app/components';\nimport { Link } from 'react-router-dom';\nimport { Box, styled, useTheme } from '@mui/system';\nimport { Paragraph } from 'app/components/Typography';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar FlexBox = styled(Box)(function () {\n  return {\n    display: 'flex',\n    alignItems: 'center'\n  };\n});\nvar FlexWrap = styled(FlexBox)(function () {\n  return {\n    flexWrap: 'wrap'\n  };\n});\nvar StyledLink = styled(Link)(function (_ref) {\n  var theme = _ref.theme;\n  return {\n    flexGrow: 1,\n    display: 'flex',\n    alignItems: 'center'\n  };\n});\n\nvar TodoItem = function TodoItem(_ref2) {\n  _s();\n\n  var _ref2$todo = _ref2.todo,\n      todo = _ref2$todo === void 0 ? {\n    tag: []\n  } : _ref2$todo,\n      tagList = _ref2.tagList,\n      updateTodo = _ref2.updateTodo;\n\n  var _useTheme = useTheme(),\n      palette = _useTheme.palette;\n\n  var textMuted = palette.text.secondary;\n  return /*#__PURE__*/_jsxDEV(Card, {\n    sx: {\n      borderRadius: 0\n    },\n    elevation: 1,\n    children: /*#__PURE__*/_jsxDEV(FlexWrap, {\n      p: 2,\n      children: [/*#__PURE__*/_jsxDEV(StyledLink, {\n        to: \"/todo/list/\".concat(todo.id),\n        children: [/*#__PURE__*/_jsxDEV(Icon, {\n          sx: {\n            cursor: 'move'\n          },\n          children: \"open_with\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }, _this), /*#__PURE__*/_jsxDEV(Box, {\n          ml: 2,\n          children: [/*#__PURE__*/_jsxDEV(Paragraph, {\n            sx: {\n              mb: 2\n            },\n            children: todo.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 25\n          }, _this), /*#__PURE__*/_jsxDEV(Paragraph, {\n            sx: {\n              mb: '12px',\n              color: textMuted\n            },\n            children: todo.note\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 25\n          }, _this), todo.tag.map(function (tagId, index) {\n            var tagName = (tagList.find(function (tag) {\n              return tag.id === tagId;\n            }) || {}).name;\n            if (!tagName) return null;else {\n              return /*#__PURE__*/_jsxDEV(Chip, {\n                sx: {\n                  mr: '12px'\n                },\n                label: tagList.find(function (tag) {\n                  return tag.id === tagId;\n                }).name\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 52,\n                columnNumber: 37\n              }, _this);\n            }\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(FlexWrap, {\n        children: [/*#__PURE__*/_jsxDEV(IconButton, {\n          onClick: function onClick() {\n            return updateTodo(_objectSpread(_objectSpread({}, todo), {}, {\n              important: !todo.important\n            }));\n          },\n          children: /*#__PURE__*/_jsxDEV(Icon, {\n            color: todo.important ? 'error' : 'inherit',\n            children: todo.important ? 'error' : 'error_outline'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 25\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, _this), /*#__PURE__*/_jsxDEV(IconButton, {\n          onClick: function onClick() {\n            return updateTodo(_objectSpread(_objectSpread({}, todo), {}, {\n              starred: !todo.starred\n            }));\n          },\n          children: /*#__PURE__*/_jsxDEV(Icon, {\n            color: todo.starred ? 'secondary' : 'inherit',\n            children: todo.starred ? 'star' : 'star_outline'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 25\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, _this), /*#__PURE__*/_jsxDEV(MatxMenu, {\n          menuButton: /*#__PURE__*/_jsxDEV(IconButton, {\n            children: /*#__PURE__*/_jsxDEV(Icon, {\n              children: \"more_vert\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 33\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 29\n          }, _this),\n          children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n            children: /*#__PURE__*/_jsxDEV(FormControlLabel, {\n              onChange: function onChange() {\n                return updateTodo(_objectSpread(_objectSpread({}, todo), {}, {\n                  done: !todo.done\n                }));\n              },\n              control: /*#__PURE__*/_jsxDEV(Checkbox, {\n                checked: todo.done\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 98,\n                columnNumber: 42\n              }, _this),\n              label: \"Mark As \".concat(todo.done ? 'Und' : 'D', \"one\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 29\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 25\n          }, _this), /*#__PURE__*/_jsxDEV(MenuItem, {\n            children: /*#__PURE__*/_jsxDEV(FormControlLabel, {\n              onChange: function onChange() {\n                return updateTodo(_objectSpread(_objectSpread({}, todo), {}, {\n                  read: !todo.read\n                }));\n              },\n              control: /*#__PURE__*/_jsxDEV(Checkbox, {\n                checked: todo.read\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 42\n              }, _this),\n              label: \"Mark As \".concat(todo.read ? 'Unr' : 'R', \"ead\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 29\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 25\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(TodoItem, \"KSZZ7uh0OZO6dgta9vGWhMa24zw=\", false, function () {\n  return [useTheme];\n});\n\n_c = TodoItem;\nexport default TodoItem;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoItem\");","map":{"version":3,"sources":["/Users/zhaoyuliu/Desktop/matx-basic/src/app/views/todo/TodoItem.jsx"],"names":["React","Card","Icon","Chip","Checkbox","MenuItem","IconButton","FormControlLabel","MatxMenu","Link","Box","styled","useTheme","Paragraph","FlexBox","display","alignItems","FlexWrap","flexWrap","StyledLink","theme","flexGrow","TodoItem","todo","tag","tagList","updateTodo","palette","textMuted","text","secondary","borderRadius","id","cursor","mb","title","color","note","map","tagId","index","tagName","find","name","mr","important","starred","done","read"],"mappings":"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","sourcesContent":["import React from 'react'\nimport {\n    Card,\n    Icon,\n    Chip,\n    Checkbox,\n    MenuItem,\n    IconButton,\n    FormControlLabel,\n} from '@mui/material'\nimport { MatxMenu } from 'app/components'\nimport { Link } from 'react-router-dom'\nimport { Box, styled, useTheme } from '@mui/system'\nimport { Paragraph } from 'app/components/Typography'\n\nconst FlexBox = styled(Box)(() => ({\n    display: 'flex',\n    alignItems: 'center',\n}))\n\nconst FlexWrap = styled(FlexBox)(() => ({\n    flexWrap: 'wrap',\n}))\n\nconst StyledLink = styled(Link)(({ theme }) => ({\n    flexGrow: 1,\n    display: 'flex',\n    alignItems: 'center',\n}))\n\nconst TodoItem = ({ todo = { tag: [] }, tagList, updateTodo }) => {\n    const { palette } = useTheme()\n    const textMuted = palette.text.secondary\n\n    return (\n        <Card sx={{ borderRadius: 0 }} elevation={1}>\n            <FlexWrap p={2}>\n                <StyledLink to={`/todo/list/${todo.id}`}>\n                    <Icon sx={{ cursor: 'move' }}>open_with</Icon>\n                    <Box ml={2}>\n                        <Paragraph sx={{ mb: 2 }}>{todo.title}</Paragraph>\n                        <Paragraph sx={{ mb: '12px', color: textMuted }}>\n                            {todo.note}\n                        </Paragraph>\n                        {todo.tag.map((tagId, index) => {\n                            let tagName = (\n                                tagList.find((tag) => tag.id === tagId) || {}\n                            ).name\n                            if (!tagName) return null\n                            else {\n                                return (\n                                    <Chip\n                                        key={index}\n                                        sx={{ mr: '12px' }}\n                                        label={\n                                            tagList.find(\n                                                (tag) => tag.id === tagId\n                                            ).name\n                                        }\n                                    />\n                                )\n                            }\n                        })}\n                    </Box>\n                </StyledLink>\n\n                <FlexWrap>\n                    <IconButton\n                        onClick={() =>\n                            updateTodo({ ...todo, important: !todo.important })\n                        }\n                    >\n                        <Icon color={todo.important ? 'error' : 'inherit'}>\n                            {todo.important ? 'error' : 'error_outline'}\n                        </Icon>\n                    </IconButton>\n                    <IconButton\n                        onClick={() =>\n                            updateTodo({ ...todo, starred: !todo.starred })\n                        }\n                    >\n                        <Icon color={todo.starred ? 'secondary' : 'inherit'}>\n                            {todo.starred ? 'star' : 'star_outline'}\n                        </Icon>\n                    </IconButton>\n                    <MatxMenu\n                        menuButton={\n                            <IconButton>\n                                <Icon>more_vert</Icon>\n                            </IconButton>\n                        }\n                    >\n                        <MenuItem>\n                            <FormControlLabel\n                                onChange={() =>\n                                    updateTodo({ ...todo, done: !todo.done })\n                                }\n                                control={<Checkbox checked={todo.done} />}\n                                label={`Mark As ${todo.done ? 'Und' : 'D'}one`}\n                            />\n                        </MenuItem>\n                        <MenuItem>\n                            <FormControlLabel\n                                onChange={() =>\n                                    updateTodo({ ...todo, read: !todo.read })\n                                }\n                                control={<Checkbox checked={todo.read} />}\n                                label={`Mark As ${todo.read ? 'Unr' : 'R'}ead`}\n                            />\n                        </MenuItem>\n                    </MatxMenu>\n                </FlexWrap>\n            </FlexWrap>\n        </Card>\n    )\n}\n\nexport default TodoItem\n"]},"metadata":{},"sourceType":"module"}