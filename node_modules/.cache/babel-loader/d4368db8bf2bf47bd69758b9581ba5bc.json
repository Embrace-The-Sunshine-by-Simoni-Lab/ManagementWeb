{"ast":null,"code":"var _jsxFileName = \"/Users/zhaoyuliu/Desktop/matx-basic/src/app/views/list/GridView.jsx\",\n    _this = this;\n\nimport React from 'react';\nimport { Card, Icon, Grid, Checkbox, Button } from '@mui/material';\nimport { Box, styled } from '@mui/system';\nimport { Small, Paragraph } from 'app/components/Typography';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar FlexBox = styled(Box)(function () {\n  return {\n    display: 'flex',\n    alignItems: 'center'\n  };\n});\nvar StyledIcon = styled(Icon)(function () {\n  return {\n    color: '#fff',\n    cursor: 'pointer',\n    marginRight: '12px'\n  };\n});\nvar IMG = styled('img')(function () {\n  return {\n    width: '100%',\n    display: 'block'\n  };\n});\nvar CardRoot = styled(Card)(function (_ref) {\n  var theme = _ref.theme;\n  return {\n    height: '100%',\n    display: 'flex',\n    flexDirection: 'column',\n    '& .grid__card-overlay': {\n      display: 'flex',\n      flexDirection: 'column',\n      position: 'absolute',\n      top: 0,\n      left: 0,\n      right: 0,\n      bottom: 0,\n      zIndex: 2,\n      opacity: 0,\n      transition: 'all 250ms ease-in-out',\n      background: 'rgba(0, 0, 0, 0.67)',\n      '& > div:nth-of-type(2)': {\n        position: 'absolute',\n        top: 0,\n        bottom: 0,\n        right: 0,\n        left: 0,\n        zIndex: -1\n      }\n    },\n    '& .grid__card-top': {\n      textAlign: 'center',\n      position: 'relative'\n    },\n    '& .grid__card-bottom': {\n      textAlign: 'center',\n      '& .email': {\n        display: 'none'\n      }\n    },\n    '&:hover': {\n      '& .grid__card-overlay': {\n        opacity: 1\n      },\n      '& .grid__card-bottom': {\n        '& small': {\n          display: 'none',\n          color: theme.palette.text.secondary\n        }\n      }\n    }\n  };\n});\n\nvar calculateColumnPerRow = function calculateColumnPerRow(value) {\n  if (value === 25) {\n    return 2;\n  }\n\n  if (value === 50) {\n    return 3;\n  }\n\n  if (value === 75) {\n    return 4;\n  }\n\n  if (value === 100) {\n    return 6;\n  }\n};\n\nvar GridView = function GridView(_ref2) {\n  var _ref2$list = _ref2.list,\n      list = _ref2$list === void 0 ? [] : _ref2$list,\n      sliderValue = _ref2.sliderValue;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 2,\n      children: list.map(function (item, index) {\n        return /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          sm: calculateColumnPerRow(sliderValue),\n          children: /*#__PURE__*/_jsxDEV(CardRoot, {\n            elevation: 6,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"grid__card-top\",\n              children: [/*#__PURE__*/_jsxDEV(IMG, {\n                src: item.projectImage,\n                alt: \"project\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 97,\n                columnNumber: 33\n              }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"grid__card-overlay\",\n                children: [/*#__PURE__*/_jsxDEV(FlexBox, {\n                  justifyContent: \"space-between\",\n                  children: [/*#__PURE__*/_jsxDEV(Checkbox, {\n                    sx: {\n                      color: '#fff'\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 100,\n                    columnNumber: 41\n                  }, _this), /*#__PURE__*/_jsxDEV(FlexBox, {\n                    children: [/*#__PURE__*/_jsxDEV(StyledIcon, {\n                      fontSize: \"small\",\n                      children: \"filter_none\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 104,\n                      columnNumber: 45\n                    }, _this), /*#__PURE__*/_jsxDEV(StyledIcon, {\n                      fontSize: \"small\",\n                      children: \"share\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 107,\n                      columnNumber: 45\n                    }, _this), /*#__PURE__*/_jsxDEV(StyledIcon, {\n                      fontSize: \"small\",\n                      children: \"edit\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 110,\n                      columnNumber: 45\n                    }, _this), /*#__PURE__*/_jsxDEV(StyledIcon, {\n                      fontSize: \"small\",\n                      children: \"delete\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 113,\n                      columnNumber: 45\n                    }, _this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 103,\n                    columnNumber: 41\n                  }, _this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 99,\n                  columnNumber: 37\n                }, _this), /*#__PURE__*/_jsxDEV(FlexBox, {\n                  justifyContent: \"center\",\n                  children: /*#__PURE__*/_jsxDEV(Button, {\n                    variant: \"outlined\",\n                    sx: {\n                      color: '#fff',\n                      borderColor: '#fff'\n                    },\n                    children: \"View Details\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 119,\n                    columnNumber: 41\n                  }, _this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 118,\n                  columnNumber: 37\n                }, _this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 98,\n                columnNumber: 33\n              }, _this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 29\n            }, _this), /*#__PURE__*/_jsxDEV(Box, {\n              py: 1,\n              className: \"grid__card-bottom\",\n              children: [/*#__PURE__*/_jsxDEV(Paragraph, {\n                children: item.projectName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 132,\n                columnNumber: 33\n              }, _this), /*#__PURE__*/_jsxDEV(Small, {\n                sx: {\n                  display: 'none'\n                },\n                children: item.date\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 133,\n                columnNumber: 33\n              }, _this), /*#__PURE__*/_jsxDEV(Small, {\n                sx: {\n                  display: 'block'\n                },\n                children: item.email\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 136,\n                columnNumber: 33\n              }, _this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 29\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 25\n          }, _this)\n        }, item.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 21\n        }, _this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 9\n  }, _this);\n};\n\n_c = GridView;\nexport default GridView;\n\nvar _c;\n\n$RefreshReg$(_c, \"GridView\");","map":{"version":3,"sources":["/Users/zhaoyuliu/Desktop/matx-basic/src/app/views/list/GridView.jsx"],"names":["React","Card","Icon","Grid","Checkbox","Button","Box","styled","Small","Paragraph","FlexBox","display","alignItems","StyledIcon","color","cursor","marginRight","IMG","width","CardRoot","theme","height","flexDirection","position","top","left","right","bottom","zIndex","opacity","transition","background","textAlign","palette","text","secondary","calculateColumnPerRow","value","GridView","list","sliderValue","map","item","index","projectImage","borderColor","projectName","date","email","id"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,EAAeC,IAAf,EAAqBC,IAArB,EAA2BC,QAA3B,EAAqCC,MAArC,QAAmD,eAAnD;AACA,SAASC,GAAT,EAAcC,MAAd,QAA4B,aAA5B;AACA,SAASC,KAAT,EAAgBC,SAAhB,QAAiC,2BAAjC;;AAEA,IAAMC,OAAO,GAAGH,MAAM,CAACD,GAAD,CAAN,CAAY;AAAA,SAAO;AAC/BK,IAAAA,OAAO,EAAE,MADsB;AAE/BC,IAAAA,UAAU,EAAE;AAFmB,GAAP;AAAA,CAAZ,CAAhB;AAKA,IAAMC,UAAU,GAAGN,MAAM,CAACL,IAAD,CAAN,CAAa;AAAA,SAAO;AACnCY,IAAAA,KAAK,EAAE,MAD4B;AAEnCC,IAAAA,MAAM,EAAE,SAF2B;AAGnCC,IAAAA,WAAW,EAAE;AAHsB,GAAP;AAAA,CAAb,CAAnB;AAMA,IAAMC,GAAG,GAAGV,MAAM,CAAC,KAAD,CAAN,CAAc;AAAA,SAAO;AAC7BW,IAAAA,KAAK,EAAE,MADsB;AAE7BP,IAAAA,OAAO,EAAE;AAFoB,GAAP;AAAA,CAAd,CAAZ;AAKA,IAAMQ,QAAQ,GAAGZ,MAAM,CAACN,IAAD,CAAN,CAAa;AAAA,MAAGmB,KAAH,QAAGA,KAAH;AAAA,SAAgB;AAC1CC,IAAAA,MAAM,EAAE,MADkC;AAE1CV,IAAAA,OAAO,EAAE,MAFiC;AAG1CW,IAAAA,aAAa,EAAE,QAH2B;AAI1C,6BAAyB;AACrBX,MAAAA,OAAO,EAAE,MADY;AAErBW,MAAAA,aAAa,EAAE,QAFM;AAGrBC,MAAAA,QAAQ,EAAE,UAHW;AAIrBC,MAAAA,GAAG,EAAE,CAJgB;AAKrBC,MAAAA,IAAI,EAAE,CALe;AAMrBC,MAAAA,KAAK,EAAE,CANc;AAOrBC,MAAAA,MAAM,EAAE,CAPa;AAQrBC,MAAAA,MAAM,EAAE,CARa;AASrBC,MAAAA,OAAO,EAAE,CATY;AAUrBC,MAAAA,UAAU,EAAE,uBAVS;AAWrBC,MAAAA,UAAU,EAAE,qBAXS;AAYrB,gCAA0B;AACtBR,QAAAA,QAAQ,EAAE,UADY;AAEtBC,QAAAA,GAAG,EAAE,CAFiB;AAGtBG,QAAAA,MAAM,EAAE,CAHc;AAItBD,QAAAA,KAAK,EAAE,CAJe;AAKtBD,QAAAA,IAAI,EAAE,CALgB;AAMtBG,QAAAA,MAAM,EAAE,CAAC;AANa;AAZL,KAJiB;AAyB1C,yBAAqB;AACjBI,MAAAA,SAAS,EAAE,QADM;AAEjBT,MAAAA,QAAQ,EAAE;AAFO,KAzBqB;AA6B1C,4BAAwB;AACpBS,MAAAA,SAAS,EAAE,QADS;AAEpB,kBAAY;AACRrB,QAAAA,OAAO,EAAE;AADD;AAFQ,KA7BkB;AAmC1C,eAAW;AACP,+BAAyB;AACrBkB,QAAAA,OAAO,EAAE;AADY,OADlB;AAIP,8BAAwB;AACpB,mBAAW;AACPlB,UAAAA,OAAO,EAAE,MADF;AAEPG,UAAAA,KAAK,EAAEM,KAAK,CAACa,OAAN,CAAcC,IAAd,CAAmBC;AAFnB;AADS;AAJjB;AAnC+B,GAAhB;AAAA,CAAb,CAAjB;;AAgDA,IAAMC,qBAAqB,GAAG,SAAxBA,qBAAwB,CAACC,KAAD,EAAW;AACrC,MAAIA,KAAK,KAAK,EAAd,EAAkB;AACd,WAAO,CAAP;AACH;;AACD,MAAIA,KAAK,KAAK,EAAd,EAAkB;AACd,WAAO,CAAP;AACH;;AACD,MAAIA,KAAK,KAAK,EAAd,EAAkB;AACd,WAAO,CAAP;AACH;;AACD,MAAIA,KAAK,KAAK,GAAd,EAAmB;AACf,WAAO,CAAP;AACH;AACJ,CAbD;;AAeA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,QAAgC;AAAA,yBAA7BC,IAA6B;AAAA,MAA7BA,IAA6B,2BAAtB,EAAsB;AAAA,MAAlBC,WAAkB,SAAlBA,WAAkB;AAC7C,sBACI;AAAA,2BACI,QAAC,IAAD;AAAM,MAAA,SAAS,MAAf;AAAgB,MAAA,OAAO,EAAE,CAAzB;AAAA,gBACKD,IAAI,CAACE,GAAL,CAAS,UAACC,IAAD,EAAOC,KAAP;AAAA,4BACN,QAAC,IAAD;AACI,UAAA,IAAI,MADR;AAGI,UAAA,EAAE,EAAEP,qBAAqB,CAACI,WAAD,CAH7B;AAAA,iCAKI,QAAC,QAAD;AAAU,YAAA,SAAS,EAAE,CAArB;AAAA,oCACI;AAAK,cAAA,SAAS,EAAC,gBAAf;AAAA,sCACI,QAAC,GAAD;AAAK,gBAAA,GAAG,EAAEE,IAAI,CAACE,YAAf;AAA6B,gBAAA,GAAG,EAAC;AAAjC;AAAA;AAAA;AAAA;AAAA,uBADJ,eAEI;AAAK,gBAAA,SAAS,EAAC,oBAAf;AAAA,wCACI,QAAC,OAAD;AAAS,kBAAA,cAAc,EAAC,eAAxB;AAAA,0CACI,QAAC,QAAD;AACI,oBAAA,EAAE,EAAE;AAAE9B,sBAAAA,KAAK,EAAE;AAAT;AADR;AAAA;AAAA;AAAA;AAAA,2BADJ,eAII,QAAC,OAAD;AAAA,4CACI,QAAC,UAAD;AAAY,sBAAA,QAAQ,EAAC,OAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BADJ,eAII,QAAC,UAAD;AAAY,sBAAA,QAAQ,EAAC,OAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAJJ,eAOI,QAAC,UAAD;AAAY,sBAAA,QAAQ,EAAC,OAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAPJ,eAUI,QAAC,UAAD;AAAY,sBAAA,QAAQ,EAAC,OAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAVJ;AAAA;AAAA;AAAA;AAAA;AAAA,2BAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,yBADJ,eAoBI,QAAC,OAAD;AAAS,kBAAA,cAAc,EAAC,QAAxB;AAAA,yCACI,QAAC,MAAD;AACI,oBAAA,OAAO,EAAC,UADZ;AAEI,oBAAA,EAAE,EAAE;AACAA,sBAAAA,KAAK,EAAE,MADP;AAEA+B,sBAAAA,WAAW,EAAE;AAFb,qBAFR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,yBApBJ;AAAA;AAAA;AAAA;AAAA;AAAA,uBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,qBADJ,eAoCI,QAAC,GAAD;AAAK,cAAA,EAAE,EAAE,CAAT;AAAY,cAAA,SAAS,EAAC,mBAAtB;AAAA,sCACI,QAAC,SAAD;AAAA,0BAAYH,IAAI,CAACI;AAAjB;AAAA;AAAA;AAAA;AAAA,uBADJ,eAEI,QAAC,KAAD;AAAO,gBAAA,EAAE,EAAE;AAAEnC,kBAAAA,OAAO,EAAE;AAAX,iBAAX;AAAA,0BACK+B,IAAI,CAACK;AADV;AAAA;AAAA;AAAA;AAAA,uBAFJ,eAKI,QAAC,KAAD;AAAO,gBAAA,EAAE,EAAE;AAAEpC,kBAAAA,OAAO,EAAE;AAAX,iBAAX;AAAA,0BACK+B,IAAI,CAACM;AADV;AAAA;AAAA;AAAA;AAAA,uBALJ;AAAA;AAAA;AAAA;AAAA;AAAA,qBApCJ;AAAA;AAAA;AAAA;AAAA;AAAA;AALJ,WAESN,IAAI,CAACO,EAFd;AAAA;AAAA;AAAA;AAAA,iBADM;AAAA,OAAT;AADL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,WADJ;AA4DH,CA7DD;;KAAMX,Q;AA+DN,eAAeA,QAAf","sourcesContent":["import React from 'react'\nimport { Card, Icon, Grid, Checkbox, Button } from '@mui/material'\nimport { Box, styled } from '@mui/system'\nimport { Small, Paragraph } from 'app/components/Typography'\n\nconst FlexBox = styled(Box)(() => ({\n    display: 'flex',\n    alignItems: 'center',\n}))\n\nconst StyledIcon = styled(Icon)(() => ({\n    color: '#fff',\n    cursor: 'pointer',\n    marginRight: '12px',\n}))\n\nconst IMG = styled('img')(() => ({\n    width: '100%',\n    display: 'block',\n}))\n\nconst CardRoot = styled(Card)(({ theme }) => ({\n    height: '100%',\n    display: 'flex',\n    flexDirection: 'column',\n    '& .grid__card-overlay': {\n        display: 'flex',\n        flexDirection: 'column',\n        position: 'absolute',\n        top: 0,\n        left: 0,\n        right: 0,\n        bottom: 0,\n        zIndex: 2,\n        opacity: 0,\n        transition: 'all 250ms ease-in-out',\n        background: 'rgba(0, 0, 0, 0.67)',\n        '& > div:nth-of-type(2)': {\n            position: 'absolute',\n            top: 0,\n            bottom: 0,\n            right: 0,\n            left: 0,\n            zIndex: -1,\n        },\n    },\n    '& .grid__card-top': {\n        textAlign: 'center',\n        position: 'relative',\n    },\n    '& .grid__card-bottom': {\n        textAlign: 'center',\n        '& .email': {\n            display: 'none',\n        },\n    },\n    '&:hover': {\n        '& .grid__card-overlay': {\n            opacity: 1,\n        },\n        '& .grid__card-bottom': {\n            '& small': {\n                display: 'none',\n                color: theme.palette.text.secondary,\n            },\n        },\n    },\n}))\n\nconst calculateColumnPerRow = (value) => {\n    if (value === 25) {\n        return 2\n    }\n    if (value === 50) {\n        return 3\n    }\n    if (value === 75) {\n        return 4\n    }\n    if (value === 100) {\n        return 6\n    }\n}\n\nconst GridView = ({ list = [], sliderValue }) => {\n    return (\n        <div>\n            <Grid container spacing={2}>\n                {list.map((item, index) => (\n                    <Grid\n                        item\n                        key={item.id}\n                        sm={calculateColumnPerRow(sliderValue)}\n                    >\n                        <CardRoot elevation={6}>\n                            <div className=\"grid__card-top\">\n                                <IMG src={item.projectImage} alt=\"project\" />\n                                <div className=\"grid__card-overlay\">\n                                    <FlexBox justifyContent=\"space-between\">\n                                        <Checkbox\n                                            sx={{ color: '#fff' }}\n                                        ></Checkbox>\n                                        <FlexBox>\n                                            <StyledIcon fontSize=\"small\">\n                                                filter_none\n                                            </StyledIcon>\n                                            <StyledIcon fontSize=\"small\">\n                                                share\n                                            </StyledIcon>\n                                            <StyledIcon fontSize=\"small\">\n                                                edit\n                                            </StyledIcon>\n                                            <StyledIcon fontSize=\"small\">\n                                                delete\n                                            </StyledIcon>\n                                        </FlexBox>\n                                    </FlexBox>\n                                    <FlexBox justifyContent=\"center\">\n                                        <Button\n                                            variant=\"outlined\"\n                                            sx={{\n                                                color: '#fff',\n                                                borderColor: '#fff',\n                                            }}\n                                        >\n                                            View Details\n                                        </Button>\n                                    </FlexBox>\n                                </div>\n                            </div>\n                            <Box py={1} className=\"grid__card-bottom\">\n                                <Paragraph>{item.projectName}</Paragraph>\n                                <Small sx={{ display: 'none' }}>\n                                    {item.date}\n                                </Small>\n                                <Small sx={{ display: 'block' }}>\n                                    {item.email}\n                                </Small>\n                            </Box>\n                        </CardRoot>\n                    </Grid>\n                ))}\n            </Grid>\n        </div>\n    )\n}\n\nexport default GridView\n"]},"metadata":{},"sourceType":"module"}