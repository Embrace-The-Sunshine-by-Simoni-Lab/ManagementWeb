{"ast":null,"code":"var _jsxFileName = \"/Users/zhaoyuliu/Desktop/matx-pro-3.3.0/src/app/components/MatxLayout/Layout1/Layout1.jsx\",\n    _this = this;\n\nimport { Outlet } from 'react-router-dom';\nimport Footer from '../../Footer/Footer';\nimport Layout1Topbar from './Layout1Topbar';\nimport Layout1Sidenav from './Layout1Sidenav';\nimport Scrollbar from 'react-perfect-scrollbar';\nimport useSettings from 'app/hooks/useSettings';\nimport React, { useEffect, useRef } from 'react';\nimport { styled, Box, useTheme } from '@mui/system';\nimport { ThemeProvider, useMediaQuery } from '@mui/material';\nimport SidenavTheme from '../../MatxTheme/SidenavTheme/SidenavTheme';\nimport { sidenavCompactWidth, sideNavWidth } from 'app/utils/constant';\nimport SecondarySidebar from '../../SecondarySidebar/SecondarySidebar';\nimport MatxSuspense from 'app/components/MatxSuspense/MatxSuspense';\nimport Test from './test';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar Layout1Root = styled(Box)(function (_ref) {\n  var theme = _ref.theme;\n  return {\n    display: 'flex',\n    background: theme.palette.background.default\n  };\n});\nvar ContentBox = styled(Box)(function () {\n  return {\n    height: '100%',\n    display: 'flex',\n    overflowY: 'auto',\n    overflowX: 'hidden',\n    flexDirection: 'column',\n    justifyContent: 'space-between'\n  };\n});\nvar StyledScrollBar = styled(Scrollbar)(function () {\n  return {\n    height: '100%',\n    position: 'relative',\n    display: 'flex',\n    flexGrow: '1',\n    flexDirection: 'column'\n  };\n});\nvar LayoutContainer = styled(Box)(function (_ref2) {\n  var width = _ref2.width,\n      secondarySidebar = _ref2.secondarySidebar;\n  return {\n    height: '100vh',\n    display: 'flex',\n    flexGrow: '1',\n    flexDirection: 'column',\n    verticalAlign: 'top',\n    marginLeft: width,\n    position: 'relative',\n    overflow: 'hidden',\n    transition: 'all 0.3s ease',\n    marginRight: secondarySidebar.open ? 50 : 0\n  };\n});\n\nvar Layout1 = function Layout1() {\n  // const { settings, updateSettings } = useSettings()\n  // const { layout1Settings, secondarySidebar } = settings\n  // const topbarTheme = settings.themes[layout1Settings.topbar.theme]\n  // const {\n  //     leftSidebar: { mode: sidenavMode, show: showSidenav },\n  // } = layout1Settings\n  // const getSidenavWidth = () => {\n  //     switch (sidenavMode)\n  //     {\n  //         case 'full':\n  //             return sideNavWidth\n  //         case 'compact':\n  //             return sidenavCompactWidth\n  //         default:\n  //             return '0px'\n  //     }\n  // }\n  // const theme = useTheme()\n  // const sidenavWidth = getSidenavWidth()\n  // const isMdScreen = useMediaQuery(theme.breakpoints.down('md'))\n  // const ref = useRef({ isMdScreen, settings })\n  // const layoutClasses = `theme-${theme.palette.type}`\n  // useEffect(() => {\n  //     let { settings } = ref.current\n  //     let sidebarMode = settings.layout1Settings.leftSidebar.mode\n  //     if (settings.layout1Settings.leftSidebar.show)\n  //     {\n  //         let mode = isMdScreen ? 'close' : sidebarMode\n  //         updateSettings({ layout1Settings: { leftSidebar: { mode } } })\n  //     }\n  //     // eslint-disable-next-line react-hooks/exhaustive-deps\n  // }, [isMdScreen])\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"13\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 9\n  }, _this) // <Layout1Root className={layoutClasses}>\n  //     {showSidenav && sidenavMode !== 'close' && (\n  //         <SidenavTheme>\n  //             <Layout1Sidenav />\n  //         </SidenavTheme>\n  //     )}\n  //     <LayoutContainer\n  //         width={sidenavWidth}\n  //         secondarySidebar={secondarySidebar}\n  //     >\n  //         {layout1Settings.topbar.show && layout1Settings.topbar.fixed && (\n  //             // <Layout1Topbar fixed={true} />\n  //             <ThemeProvider theme={topbarTheme}>\n  //                 <Layout1Topbar fixed={true} className=\"elevation-z8\" />\n  //             </ThemeProvider>\n  //         )}\n  //         {settings.perfectScrollbar && (\n  //             <StyledScrollBar>\n  //                 {layout1Settings.topbar.show &&\n  //                     !layout1Settings.topbar.fixed && (\n  //                         // <Layout1Topbar />\n  //                         <ThemeProvider theme={topbarTheme}>\n  //                             <Layout1Topbar />\n  //                         </ThemeProvider>\n  //                     )}\n  //                 <Box flexGrow={1} position=\"relative\">\n  //                     <MatxSuspense>\n  //                         <Outlet />\n  //                     </MatxSuspense>\n  //                 </Box>\n  //                 {settings.footer.show && !settings.footer.fixed && (\n  //                     <Footer />\n  //                 )}\n  //             </StyledScrollBar>\n  //         )}\n  //         {!settings.perfectScrollbar && (\n  //             <ContentBox>\n  //                 {layout1Settings.topbar.show &&\n  //                     !layout1Settings.topbar.fixed && (\n  //                         <ThemeProvider theme={topbarTheme}>\n  //                             <Layout1Topbar />\n  //                         </ThemeProvider>\n  //                     )}\n  //                 <Box flexGrow={1} position=\"relative\">\n  //                     <MatxSuspense>\n  //                         {/* <Outlet /> */}\n  //                         <Test></Test>\n  //                     </MatxSuspense>\n  //                 </Box>\n  //                 {settings.footer.show && !settings.footer.fixed && (\n  //                     <Footer />\n  //                 )}\n  //             </ContentBox>\n  //         )}\n  //         {settings.footer.show && settings.footer.fixed && <Footer />}\n  //     </LayoutContainer>\n  //     {settings.secondarySidebar.show && <SecondarySidebar />}\n  // </Layout1Root>\n  ;\n};\n\n_c = Layout1;\nexport default _c2 = /*#__PURE__*/React.memo(Layout1);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Layout1\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/Users/zhaoyuliu/Desktop/matx-pro-3.3.0/src/app/components/MatxLayout/Layout1/Layout1.jsx"],"names":["Outlet","Footer","Layout1Topbar","Layout1Sidenav","Scrollbar","useSettings","React","useEffect","useRef","styled","Box","useTheme","ThemeProvider","useMediaQuery","SidenavTheme","sidenavCompactWidth","sideNavWidth","SecondarySidebar","MatxSuspense","Test","Layout1Root","theme","display","background","palette","default","ContentBox","height","overflowY","overflowX","flexDirection","justifyContent","StyledScrollBar","position","flexGrow","LayoutContainer","width","secondarySidebar","verticalAlign","marginLeft","overflow","transition","marginRight","open","Layout1","memo"],"mappings":"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","sourcesContent":["import { Outlet } from 'react-router-dom'\nimport Footer from '../../Footer/Footer'\nimport Layout1Topbar from './Layout1Topbar'\nimport Layout1Sidenav from './Layout1Sidenav'\nimport Scrollbar from 'react-perfect-scrollbar'\nimport useSettings from 'app/hooks/useSettings'\nimport React, { useEffect, useRef } from 'react'\nimport { styled, Box, useTheme } from '@mui/system'\nimport { ThemeProvider, useMediaQuery } from '@mui/material'\nimport SidenavTheme from '../../MatxTheme/SidenavTheme/SidenavTheme'\nimport { sidenavCompactWidth, sideNavWidth } from 'app/utils/constant'\nimport SecondarySidebar from '../../SecondarySidebar/SecondarySidebar'\nimport MatxSuspense from 'app/components/MatxSuspense/MatxSuspense'\nimport Test from './test'\nconst Layout1Root = styled(Box)(({ theme }) => ({\n    display: 'flex',\n    background: theme.palette.background.default,\n}))\n\nconst ContentBox = styled(Box)(() => ({\n    height: '100%',\n    display: 'flex',\n    overflowY: 'auto',\n    overflowX: 'hidden',\n    flexDirection: 'column',\n    justifyContent: 'space-between',\n}))\n\nconst StyledScrollBar = styled(Scrollbar)(() => ({\n    height: '100%',\n    position: 'relative',\n    display: 'flex',\n    flexGrow: '1',\n    flexDirection: 'column',\n}))\n\nconst LayoutContainer = styled(Box)(({ width, secondarySidebar }) => ({\n    height: '100vh',\n    display: 'flex',\n    flexGrow: '1',\n    flexDirection: 'column',\n    verticalAlign: 'top',\n    marginLeft: width,\n    position: 'relative',\n    overflow: 'hidden',\n    transition: 'all 0.3s ease',\n    marginRight: secondarySidebar.open ? 50 : 0,\n}))\n\nconst Layout1 = () => {\n    // const { settings, updateSettings } = useSettings()\n    // const { layout1Settings, secondarySidebar } = settings\n    // const topbarTheme = settings.themes[layout1Settings.topbar.theme]\n    // const {\n    //     leftSidebar: { mode: sidenavMode, show: showSidenav },\n    // } = layout1Settings\n\n    // const getSidenavWidth = () => {\n    //     switch (sidenavMode)\n    //     {\n    //         case 'full':\n    //             return sideNavWidth\n    //         case 'compact':\n    //             return sidenavCompactWidth\n    //         default:\n    //             return '0px'\n    //     }\n    // }\n\n    // const theme = useTheme()\n    // const sidenavWidth = getSidenavWidth()\n    // const isMdScreen = useMediaQuery(theme.breakpoints.down('md'))\n\n    // const ref = useRef({ isMdScreen, settings })\n    // const layoutClasses = `theme-${theme.palette.type}`\n\n    // useEffect(() => {\n    //     let { settings } = ref.current\n    //     let sidebarMode = settings.layout1Settings.leftSidebar.mode\n    //     if (settings.layout1Settings.leftSidebar.show)\n    //     {\n    //         let mode = isMdScreen ? 'close' : sidebarMode\n    //         updateSettings({ layout1Settings: { leftSidebar: { mode } } })\n    //     }\n    //     // eslint-disable-next-line react-hooks/exhaustive-deps\n    // }, [isMdScreen])\n\n    return (\n        <div>13</div>\n        // <Layout1Root className={layoutClasses}>\n        //     {showSidenav && sidenavMode !== 'close' && (\n        //         <SidenavTheme>\n        //             <Layout1Sidenav />\n        //         </SidenavTheme>\n        //     )}\n\n        //     <LayoutContainer\n        //         width={sidenavWidth}\n        //         secondarySidebar={secondarySidebar}\n        //     >\n        //         {layout1Settings.topbar.show && layout1Settings.topbar.fixed && (\n        //             // <Layout1Topbar fixed={true} />\n        //             <ThemeProvider theme={topbarTheme}>\n        //                 <Layout1Topbar fixed={true} className=\"elevation-z8\" />\n        //             </ThemeProvider>\n        //         )}\n        //         {settings.perfectScrollbar && (\n        //             <StyledScrollBar>\n        //                 {layout1Settings.topbar.show &&\n        //                     !layout1Settings.topbar.fixed && (\n        //                         // <Layout1Topbar />\n        //                         <ThemeProvider theme={topbarTheme}>\n        //                             <Layout1Topbar />\n        //                         </ThemeProvider>\n        //                     )}\n        //                 <Box flexGrow={1} position=\"relative\">\n        //                     <MatxSuspense>\n        //                         <Outlet />\n        //                     </MatxSuspense>\n        //                 </Box>\n        //                 {settings.footer.show && !settings.footer.fixed && (\n        //                     <Footer />\n        //                 )}\n        //             </StyledScrollBar>\n        //         )}\n\n        //         {!settings.perfectScrollbar && (\n        //             <ContentBox>\n        //                 {layout1Settings.topbar.show &&\n        //                     !layout1Settings.topbar.fixed && (\n        //                         <ThemeProvider theme={topbarTheme}>\n        //                             <Layout1Topbar />\n        //                         </ThemeProvider>\n        //                     )}\n        //                 <Box flexGrow={1} position=\"relative\">\n        //                     <MatxSuspense>\n        //                         {/* <Outlet /> */}\n        //                         <Test></Test>\n        //                     </MatxSuspense>\n        //                 </Box>\n        //                 {settings.footer.show && !settings.footer.fixed && (\n        //                     <Footer />\n        //                 )}\n        //             </ContentBox>\n        //         )}\n\n        //         {settings.footer.show && settings.footer.fixed && <Footer />}\n        //     </LayoutContainer>\n        //     {settings.secondarySidebar.show && <SecondarySidebar />}\n        // </Layout1Root>\n    )\n}\n\nexport default React.memo(Layout1)\n"]},"metadata":{},"sourceType":"module"}