{"ast":null,"code":"import _defineProperty from \"/Users/zhaoyuliu/Desktop/matx-basic/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _objectSpread from \"/Users/zhaoyuliu/Desktop/matx-basic/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _slicedToArray from \"/Users/zhaoyuliu/Desktop/matx-basic/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\n\nvar _jsxFileName = \"/Users/zhaoyuliu/Desktop/matx-basic/src/app/views/inbox/InboxComposeDialog.jsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Box, styled } from '@mui/system';\nimport { Paragraph } from 'app/components/Typography';\nimport { Dialog, Button, IconButton, Icon, Fab } from '@mui/material';\nimport { ValidatorForm, TextValidator } from 'react-material-ui-form-validator';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar FlexBox = styled(Box)(function () {\n  return {\n    display: 'flex',\n    alignItems: 'center'\n  };\n});\nvar FormController = styled('div')(function () {\n  return {\n    flexWrap: 1,\n    display: 'flex',\n    marginBottom: '16px',\n    justifyContent: 'space-between'\n  };\n});\n\nvar InboxComposeDialog = function InboxComposeDialog(_ref) {\n  _s();\n\n  var open = _ref.open,\n      handleClose = _ref.handleClose;\n\n  var _useState = useState({\n    to: '',\n    subject: '',\n    content: '',\n    attachment: null\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      state = _useState2[0],\n      setState = _useState2[1];\n\n  var handleSubmit = function handleSubmit(event) {// console.log(state);\n  };\n\n  var handleChange = function handleChange(event) {\n    event.persist();\n    setState(_objectSpread(_objectSpread({}, state), {}, _defineProperty({}, event.target.name, event.target.value)));\n  };\n\n  var handleAttachmentSelection = function handleAttachmentSelection(event) {\n    setState(_objectSpread(_objectSpread({}, state), {}, {\n      attachment: event.target.files[0]\n    }));\n  };\n\n  var to = state.to,\n      subject = state.subject,\n      attachment = state.attachment;\n  return /*#__PURE__*/_jsxDEV(Dialog, {\n    open: open,\n    onClose: handleClose,\n    maxWidth: \"md\",\n    fullWidth: true,\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      p: 3,\n      children: /*#__PURE__*/_jsxDEV(ValidatorForm, {\n        onSubmit: handleSubmit,\n        onError: function onError(errors) {\n          return null;\n        },\n        children: [/*#__PURE__*/_jsxDEV(TextValidator, {\n          label: \"To\",\n          type: \"email\",\n          name: \"to\",\n          value: to,\n          onChange: handleChange,\n          sx: {\n            mb: 2,\n            width: '100%'\n          },\n          validators: ['required', 'isEmail'],\n          errorMessages: ['this field is required', 'email is not valid']\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, _this), /*#__PURE__*/_jsxDEV(TextValidator, {\n          label: \"Subject\",\n          type: \"text\",\n          name: \"subject\",\n          value: subject,\n          onChange: handleChange,\n          validators: ['required'],\n          sx: {\n            mb: 2,\n            width: '100%'\n          },\n          errorMessages: ['this field is required']\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, _this), /*#__PURE__*/_jsxDEV(FormController, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            onClick: handleClose,\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 25\n          }, _this), /*#__PURE__*/_jsxDEV(FlexBox, {\n            children: [attachment && /*#__PURE__*/_jsxDEV(Paragraph, {\n              sx: {\n                mr: 3\n              },\n              children: attachment.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 33\n            }, _this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"attachment\",\n              children: /*#__PURE__*/_jsxDEV(IconButton, {\n                sx: {\n                  mr: 1\n                },\n                component: \"span\",\n                children: /*#__PURE__*/_jsxDEV(Icon, {\n                  children: \"attachment\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 88,\n                  columnNumber: 37\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 33\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 29\n            }, _this), /*#__PURE__*/_jsxDEV(\"input\", {\n              onChange: handleAttachmentSelection,\n              className: \"hidden\",\n              id: \"attachment\",\n              type: \"file\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 29\n            }, _this), /*#__PURE__*/_jsxDEV(Fab, {\n              size: \"medium\",\n              color: \"secondary\",\n              type: \"submit\",\n              children: /*#__PURE__*/_jsxDEV(Icon, {\n                children: \"send\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 98,\n                columnNumber: 33\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 29\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 25\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(InboxComposeDialog, \"oZnhQchKTnIph4G0UTYyVS2hfKo=\");\n\n_c = InboxComposeDialog;\nexport default InboxComposeDialog;\n\nvar _c;\n\n$RefreshReg$(_c, \"InboxComposeDialog\");","map":{"version":3,"sources":["/Users/zhaoyuliu/Desktop/matx-basic/src/app/views/inbox/InboxComposeDialog.jsx"],"names":["React","useState","Box","styled","Paragraph","Dialog","Button","IconButton","Icon","Fab","ValidatorForm","TextValidator","FlexBox","display","alignItems","FormController","flexWrap","marginBottom","justifyContent","InboxComposeDialog","open","handleClose","to","subject","content","attachment","state","setState","handleSubmit","event","handleChange","persist","target","name","value","handleAttachmentSelection","files","errors","mb","width","mr"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport { Box, styled } from '@mui/system'\nimport { Paragraph } from 'app/components/Typography'\nimport { Dialog, Button, IconButton, Icon, Fab } from '@mui/material'\nimport { ValidatorForm, TextValidator } from 'react-material-ui-form-validator'\n\nconst FlexBox = styled(Box)(() => ({\n    display: 'flex',\n    alignItems: 'center',\n}))\n\nconst FormController = styled('div')(() => ({\n    flexWrap: 1,\n    display: 'flex',\n    marginBottom: '16px',\n    justifyContent: 'space-between',\n}))\n\nconst InboxComposeDialog = ({ open, handleClose }) => {\n    const [state, setState] = useState({\n        to: '',\n        subject: '',\n        content: '',\n        attachment: null,\n    })\n    const handleSubmit = (event) => {\n        // console.log(state);\n    }\n    const handleChange = (event) => {\n        event.persist()\n        setState({ ...state, [event.target.name]: event.target.value })\n    }\n\n    const handleAttachmentSelection = (event) => {\n        setState({\n            ...state,\n            attachment: event.target.files[0],\n        })\n    }\n    let { to, subject, attachment } = state\n\n    return (\n        <Dialog\n            open={open}\n            onClose={handleClose}\n            maxWidth=\"md\"\n            fullWidth={true}\n        >\n            <Box p={3}>\n                <ValidatorForm\n                    onSubmit={handleSubmit}\n                    onError={(errors) => null}\n                >\n                    <TextValidator\n                        label=\"To\"\n                        type=\"email\"\n                        name=\"to\"\n                        value={to}\n                        onChange={handleChange}\n                        sx={{ mb: 2, width: '100%' }}\n                        validators={['required', 'isEmail']}\n                        errorMessages={[\n                            'this field is required',\n                            'email is not valid',\n                        ]}\n                    />\n                    <TextValidator\n                        label=\"Subject\"\n                        type=\"text\"\n                        name=\"subject\"\n                        value={subject}\n                        onChange={handleChange}\n                        validators={['required']}\n                        sx={{ mb: 2, width: '100%' }}\n                        errorMessages={['this field is required']}\n                    />\n                    <FormController>\n                        <Button onClick={handleClose}>Cancel</Button>\n\n                        <FlexBox>\n                            {attachment && (\n                                <Paragraph sx={{ mr: 3 }}>\n                                    {attachment.name}\n                                </Paragraph>\n                            )}\n                            <label htmlFor=\"attachment\">\n                                <IconButton sx={{ mr: 1 }} component=\"span\">\n                                    <Icon>attachment</Icon>\n                                </IconButton>\n                            </label>\n                            <input\n                                onChange={handleAttachmentSelection}\n                                className=\"hidden\"\n                                id=\"attachment\"\n                                type=\"file\"\n                            />\n                            <Fab size=\"medium\" color=\"secondary\" type=\"submit\">\n                                <Icon>send</Icon>\n                            </Fab>\n                        </FlexBox>\n                    </FormController>\n                </ValidatorForm>\n            </Box>\n        </Dialog>\n    )\n}\n\nexport default InboxComposeDialog\n"]},"metadata":{},"sourceType":"module"}