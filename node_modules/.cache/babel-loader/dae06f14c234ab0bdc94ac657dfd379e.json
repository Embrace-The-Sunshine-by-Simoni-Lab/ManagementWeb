{"ast":null,"code":"import _toConsumableArray from \"/Users/zhaoyuliu/Desktop/matx-basic/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _objectSpread from \"/Users/zhaoyuliu/Desktop/matx-basic/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _slicedToArray from \"/Users/zhaoyuliu/Desktop/matx-basic/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _defineProperty from \"/Users/zhaoyuliu/Desktop/matx-basic/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\n\nvar _jsxFileName = \"/Users/zhaoyuliu/Desktop/matx-basic/src/app/views/chat-box/AppChat.jsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { useTheme, styled } from '@mui/system';\nimport ChatSidenav from './ChatSidenav';\nimport ChatContainer from './ChatContainer';\nimport { Card, useMediaQuery } from '@mui/material';\nimport React, { useState, useEffect, useCallback, useRef } from 'react';\nimport { getAllContact, getRecentContact, sendNewMessage, getContactById, getChatRoomByContactId } from './ChatService';\nimport Breadcrumb from 'app/components/Breadcrumb/Breadcrumb';\nimport MatxSidenavContainer from 'app/components/MatxSidenav/MatxSidenavContainer';\nimport MatxSidenav from 'app/components/MatxSidenav/MatxSidenav';\nimport MatxSidenavContent from 'app/components/MatxSidenav/MatxSidenavContent';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar Container = styled('div')(function (_ref) {\n  var _ref2;\n\n  var theme = _ref.theme;\n  return _ref2 = {\n    margin: '30px'\n  }, _defineProperty(_ref2, theme.breakpoints.down('sm'), {\n    margin: '16px'\n  }), _defineProperty(_ref2, \"& .breadcrumb\", _defineProperty({\n    margin: '30px'\n  }, theme.breakpoints.down('sm'), {\n    margin: '16px'\n  })), _ref2;\n});\n\nvar AppChat = function AppChat() {\n  _s();\n\n  var chatBottomRef = document.querySelector('#chat-message-list');\n\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      open = _useState2[0],\n      setOpen = _useState2[1];\n\n  var _useState3 = useState({\n    id: '7863a6802ez0e277a0f98534'\n  }),\n      _useState4 = _slicedToArray(_useState3, 2),\n      currentUser = _useState4[0],\n      setCurrentUser = _useState4[1];\n\n  var _useState5 = useState(null),\n      _useState6 = _slicedToArray(_useState5, 2),\n      opponentUser = _useState6[0],\n      setOpponentUser = _useState6[1];\n\n  var _useState7 = useState(''),\n      _useState8 = _slicedToArray(_useState7, 2),\n      currentChatRoom = _useState8[0],\n      setCurrentChatRoom = _useState8[1];\n\n  var _useState9 = useState([]),\n      _useState10 = _slicedToArray(_useState9, 2),\n      contactList = _useState10[0],\n      setContactList = _useState10[1];\n\n  var _useState11 = useState([]),\n      _useState12 = _slicedToArray(_useState11, 2),\n      recentContactList = _useState12[0],\n      setRecentContactList = _useState12[1];\n\n  var _useState13 = useState([]),\n      _useState14 = _slicedToArray(_useState13, 2),\n      messageList = _useState14[0],\n      setMessageList = _useState14[1];\n\n  var userRef = useRef(currentUser);\n  var theme = useTheme();\n  var isMobile = useMediaQuery(theme.breakpoints.down('sm'));\n  var updateRecentContactList = useCallback(function () {\n    var id = userRef.current.id;\n    getRecentContact(id).then(function (data) {\n      setRecentContactList(data.data);\n    });\n  }, []);\n  useEffect(function () {\n    var id = userRef.current.id;\n    getContactById(id).then(function (data) {\n      setOpen(isMobile);\n      setCurrentUser(_objectSpread({}, data.data));\n    });\n    getAllContact(currentUser.id).then(function (data) {\n      return setContactList(data.data);\n    });\n    updateRecentContactList();\n  }, [isMobile, currentUser.id, updateRecentContactList]);\n\n  var handleMessageSend = function handleMessageSend(message) {\n    var id = currentUser.id;\n    if (currentChatRoom === '') return;\n    sendNewMessage({\n      chatId: currentChatRoom,\n      text: message,\n      contactId: id,\n      time: new Date()\n    }).then(function (data) {\n      setMessageList(_toConsumableArray(data.data));\n      scrollToBottom();\n    }); // bot message\n\n    setTimeout(function () {\n      sendNewMessage({\n        chatId: currentChatRoom,\n        text: \"Hi, I'm \".concat(opponentUser.name, \". Your imaginary friend.\"),\n        contactId: opponentUser.id,\n        time: new Date()\n      }).then(function (data) {\n        setMessageList(_toConsumableArray(data.data));\n        scrollToBottom();\n      });\n    }, 750); // bot message ends here\n  };\n\n  var handleContactClick = function handleContactClick(contactId) {\n    if (isMobile) toggleSidenav();\n    getContactById(contactId).then(function (_ref3) {\n      var data = _ref3.data;\n      setOpponentUser(_objectSpread({}, data));\n    });\n    getChatRoomByContactId(currentUser.id, contactId).then(function (_ref4) {\n      var data = _ref4.data;\n      var chatId = data.chatId,\n          messageList = data.messageList,\n          recentListUpdated = data.recentListUpdated;\n      setCurrentChatRoom(chatId);\n      setMessageList(messageList);\n      scrollToBottom();\n\n      if (recentListUpdated) {\n        updateRecentContactList();\n      }\n    });\n  };\n\n  var scrollToBottom = function scrollToBottom() {\n    if (chatBottomRef) {\n      chatBottomRef.scrollTo({\n        top: chatBottomRef.scrollHeight,\n        behavior: 'smooth'\n      });\n    }\n  };\n\n  var toggleSidenav = function toggleSidenav() {\n    setOpen(!open);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"breadcrumb\",\n      children: /*#__PURE__*/_jsxDEV(Breadcrumb, {\n        routeSegments: [{\n          name: 'Chat'\n        }]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 17\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(Card, {\n      elevation: 6,\n      children: /*#__PURE__*/_jsxDEV(MatxSidenavContainer, {\n        children: [/*#__PURE__*/_jsxDEV(MatxSidenav, {\n          width: \"230px\",\n          open: open,\n          toggleSidenav: toggleSidenav,\n          children: /*#__PURE__*/_jsxDEV(ChatSidenav, {\n            currentUser: currentUser,\n            contactList: contactList,\n            recentContactList: recentContactList,\n            handleContactClick: handleContactClick\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 25\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 21\n        }, _this), /*#__PURE__*/_jsxDEV(MatxSidenavContent, {\n          children: /*#__PURE__*/_jsxDEV(ChatContainer, {\n            id: currentUser === null || currentUser === void 0 ? void 0 : currentUser.id,\n            opponentUser: opponentUser,\n            messageList: messageList,\n            currentChatRoom: currentChatRoom,\n            handleMessageSend: handleMessageSend,\n            toggleSidenav: toggleSidenav\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 25\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 21\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 17\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 13\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 129,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(AppChat, \"g9bjhMQRd8UHl2T/J44SK2oavdU=\", false, function () {\n  return [useTheme, useMediaQuery];\n});\n\n_c = AppChat;\nexport default AppChat;\n\nvar _c;\n\n$RefreshReg$(_c, \"AppChat\");","map":{"version":3,"sources":["/Users/zhaoyuliu/Desktop/matx-basic/src/app/views/chat-box/AppChat.jsx"],"names":["useTheme","styled","ChatSidenav","ChatContainer","Card","useMediaQuery","React","useState","useEffect","useCallback","useRef","getAllContact","getRecentContact","sendNewMessage","getContactById","getChatRoomByContactId","Breadcrumb","MatxSidenavContainer","MatxSidenav","MatxSidenavContent","Container","theme","margin","breakpoints","down","AppChat","chatBottomRef","document","querySelector","open","setOpen","id","currentUser","setCurrentUser","opponentUser","setOpponentUser","currentChatRoom","setCurrentChatRoom","contactList","setContactList","recentContactList","setRecentContactList","messageList","setMessageList","userRef","isMobile","updateRecentContactList","current","then","data","handleMessageSend","message","chatId","text","contactId","time","Date","scrollToBottom","setTimeout","name","handleContactClick","toggleSidenav","recentListUpdated","scrollTo","top","scrollHeight","behavior"],"mappings":"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","sourcesContent":["import { useTheme, styled } from '@mui/system'\nimport ChatSidenav from './ChatSidenav'\nimport ChatContainer from './ChatContainer'\nimport { Card, useMediaQuery } from '@mui/material'\nimport React, { useState, useEffect, useCallback, useRef } from 'react'\nimport {\n    getAllContact,\n    getRecentContact,\n    sendNewMessage,\n    getContactById,\n    getChatRoomByContactId,\n} from './ChatService'\nimport Breadcrumb from 'app/components/Breadcrumb/Breadcrumb'\nimport MatxSidenavContainer from 'app/components/MatxSidenav/MatxSidenavContainer'\nimport MatxSidenav from 'app/components/MatxSidenav/MatxSidenav'\nimport MatxSidenavContent from 'app/components/MatxSidenav/MatxSidenavContent'\n\nconst Container = styled('div')(({ theme }) => ({\n    margin: '30px',\n    [theme.breakpoints.down('sm')]: {\n        margin: '16px',\n    },\n    \"& .breadcrumb\": {\n        margin: '30px',\n        [theme.breakpoints.down('sm')]: {\n            margin: '16px',\n        },\n    }\n}))\n\nconst AppChat = () => {\n    const chatBottomRef = document.querySelector('#chat-message-list')\n    const [open, setOpen] = useState(true)\n    const [currentUser, setCurrentUser] = useState({\n        id: '7863a6802ez0e277a0f98534',\n    })\n    const [opponentUser, setOpponentUser] = useState(null)\n    const [currentChatRoom, setCurrentChatRoom] = useState('')\n    const [contactList, setContactList] = useState([])\n    const [recentContactList, setRecentContactList] = useState([])\n    const [messageList, setMessageList] = useState([])\n    const userRef = useRef(currentUser)\n\n    const theme = useTheme()\n    const isMobile = useMediaQuery(theme.breakpoints.down('sm'))\n\n    const updateRecentContactList = useCallback(() => {\n        let { id } = userRef.current\n        getRecentContact(id).then((data) => {\n            setRecentContactList(data.data)\n        })\n    }, [])\n\n    useEffect(() => {\n        let { id } = userRef.current\n\n        getContactById(id).then((data) => {\n            setOpen(isMobile)\n            setCurrentUser({ ...data.data })\n        })\n\n        getAllContact(currentUser.id).then((data) => setContactList(data.data))\n        updateRecentContactList()\n    }, [isMobile, currentUser.id, updateRecentContactList])\n\n    const handleMessageSend = (message) => {\n        let { id } = currentUser\n\n        if (currentChatRoom === '') return\n        sendNewMessage({\n            chatId: currentChatRoom,\n            text: message,\n            contactId: id,\n            time: new Date(),\n        }).then((data) => {\n            setMessageList([...data.data])\n            scrollToBottom()\n        })\n\n        // bot message\n        setTimeout(() => {\n            sendNewMessage({\n                chatId: currentChatRoom,\n                text: `Hi, I'm ${opponentUser.name}. Your imaginary friend.`,\n                contactId: opponentUser.id,\n                time: new Date(),\n            }).then((data) => {\n                setMessageList([...data.data])\n                scrollToBottom()\n            })\n        }, 750)\n        // bot message ends here\n    }\n\n    const handleContactClick = (contactId) => {\n        if (isMobile) toggleSidenav()\n\n        getContactById(contactId).then(({ data }) => {\n            setOpponentUser({ ...data })\n        })\n        getChatRoomByContactId(currentUser.id, contactId).then(({ data }) => {\n            let { chatId, messageList, recentListUpdated } = data\n            setCurrentChatRoom(chatId)\n            setMessageList(messageList)\n            scrollToBottom()\n\n            if (recentListUpdated)\n            {\n                updateRecentContactList()\n            }\n        })\n    }\n\n    const scrollToBottom = () => {\n        if (chatBottomRef)\n        {\n            chatBottomRef.scrollTo({\n                top: chatBottomRef.scrollHeight,\n                behavior: 'smooth',\n            })\n        }\n    }\n\n    const toggleSidenav = () => {\n        setOpen(!open)\n    }\n\n    return (\n        <Container>\n            <div className=\"breadcrumb\">\n                <Breadcrumb routeSegments={[{ name: 'Chat' }]} />\n            </div>\n            <Card elevation={6}>\n                <MatxSidenavContainer>\n                    <MatxSidenav\n                        width=\"230px\"\n                        open={open}\n                        toggleSidenav={toggleSidenav}\n                    >\n                        <ChatSidenav\n                            currentUser={currentUser}\n                            contactList={contactList}\n                            recentContactList={recentContactList}\n                            handleContactClick={handleContactClick}\n                        />\n                    </MatxSidenav>\n                    <MatxSidenavContent>\n                        <ChatContainer\n                            id={currentUser?.id}\n                            opponentUser={opponentUser}\n                            messageList={messageList}\n                            currentChatRoom={currentChatRoom}\n                            handleMessageSend={handleMessageSend}\n                            toggleSidenav={toggleSidenav}\n                        />\n                    </MatxSidenavContent>\n                </MatxSidenavContainer>\n            </Card>\n        </Container>\n    )\n}\n\nexport default AppChat\n"]},"metadata":{},"sourceType":"module"}