{"ast":null,"code":"import _objectSpread from \"/Users/zhaoyuliu/Desktop/matx-pro-3.3.0/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _slicedToArray from \"/Users/zhaoyuliu/Desktop/matx-pro-3.3.0/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _defineProperty from \"/Users/zhaoyuliu/Desktop/matx-pro-3.3.0/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\n\nvar _jsxFileName = \"/Users/zhaoyuliu/Desktop/matx-pro-3.3.0/src/app/views/ecommerce/Checkout.jsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { countries } from './Country';\nimport { useSelector } from 'react-redux';\nimport PaymentDialog from './PaymentDialog';\nimport React, { Fragment, useState } from 'react';\nimport { ValidatorForm, TextValidator } from 'react-material-ui-form-validator';\nimport { Card, Grid, FormControlLabel, Checkbox, Button, MenuItem, Divider } from '@mui/material';\nimport { Box, styled, useTheme } from '@mui/system';\nimport { H4, H5, Span } from 'app/components/Typography';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar CartRoot = styled(Card)(function (_ref) {\n  var theme = _ref.theme;\n  return _defineProperty({\n    margin: '30px',\n    padding: '24px'\n  }, theme.breakpoints.down('sm'), {\n    margin: '16px',\n    padding: '16px '\n  });\n});\n\nvar Checkout = function Checkout() {\n  _s();\n\n  var _useState = useState({}),\n      _useState2 = _slicedToArray(_useState, 2),\n      state = _useState2[0],\n      setState = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      open = _useState4[0],\n      setOpen = _useState4[1];\n\n  var _useSelector = useSelector(function (state) {\n    return state.ecommerce;\n  }),\n      _useSelector$cartList = _useSelector.cartList,\n      cartList = _useSelector$cartList === void 0 ? [] : _useSelector$cartList;\n\n  var getTotalCost = function getTotalCost() {\n    var totalCost = 0;\n    cartList.forEach(function (product) {\n      totalCost += product.amount * product.price;\n    });\n    return totalCost;\n  };\n\n  var handleChange = function handleChange(event) {\n    event.persist();\n    setState(_objectSpread(_objectSpread({}, state), {}, _defineProperty({}, event.target.name, event.target.value)));\n  };\n\n  var handleSubmit = function handleSubmit() {\n    console.log(state);\n    toggleDialog();\n  };\n\n  var toggleDialog = function toggleDialog() {\n    setOpen(!open);\n  };\n\n  var firstName = state.firstName,\n      lastName = state.lastName,\n      company = state.company,\n      email = state.email,\n      mobile = state.mobile,\n      country = state.country,\n      city = state.city,\n      address = state.address;\n\n  var _useTheme = useTheme(),\n      palette = _useTheme.palette;\n\n  var textMuted = palette.text.secondary;\n  return /*#__PURE__*/_jsxDEV(CartRoot, {\n    className: \"checkout\",\n    children: [/*#__PURE__*/_jsxDEV(ValidatorForm, {\n      onSubmit: handleSubmit,\n      onError: function onError(errors) {\n        return null;\n      },\n      children: [/*#__PURE__*/_jsxDEV(H4, {\n        sx: {\n          mt: 0,\n          mb: 3,\n          fontWeight: '500'\n        },\n        children: \"Billing Details\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 3,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          lg: 7,\n          md: 7,\n          sm: 12,\n          xs: 12,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            spacing: 3,\n            sx: {\n              mb: '20px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 6,\n              children: /*#__PURE__*/_jsxDEV(TextValidator, {\n                variant: \"outlined\",\n                label: \"First Name\",\n                onChange: handleChange,\n                type: \"text\",\n                name: \"firstName\",\n                value: firstName || '',\n                validators: ['required'],\n                errorMessages: ['this field is required'],\n                fullWidth: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 33\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 29\n            }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 6,\n              children: /*#__PURE__*/_jsxDEV(TextValidator, {\n                variant: \"outlined\",\n                label: \"Last Name\",\n                onChange: handleChange,\n                type: \"text\",\n                name: \"lastName\",\n                value: lastName || '',\n                validators: ['required'],\n                errorMessages: ['this field is required'],\n                fullWidth: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 33\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 29\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 25\n          }, _this), /*#__PURE__*/_jsxDEV(TextValidator, {\n            sx: {\n              mb: '20px'\n            },\n            variant: \"outlined\",\n            label: \"Company\",\n            onChange: handleChange,\n            type: \"text\",\n            name: \"company\",\n            value: company || '',\n            fullWidth: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 25\n          }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            spacing: 3,\n            sx: {\n              mb: '20px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 6,\n              children: /*#__PURE__*/_jsxDEV(TextValidator, {\n                variant: \"outlined\",\n                label: \"Email\",\n                onChange: handleChange,\n                type: \"email\",\n                name: \"email\",\n                value: email || '',\n                validators: ['required', 'isEmail'],\n                errorMessages: ['this field is required', 'email is not valid'],\n                fullWidth: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 115,\n                columnNumber: 33\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 29\n            }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 6,\n              children: /*#__PURE__*/_jsxDEV(TextValidator, {\n                variant: \"outlined\",\n                label: \"Mobile\",\n                onChange: handleChange,\n                type: \"number\",\n                name: \"mobile\",\n                value: mobile || '',\n                validators: ['required'],\n                errorMessages: ['this field is required'],\n                fullWidth: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 131,\n                columnNumber: 33\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 29\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 25\n          }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            spacing: 3,\n            sx: {\n              mb: '20px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 6,\n              children: /*#__PURE__*/_jsxDEV(TextValidator, {\n                label: \"Country\",\n                select: true,\n                name: \"country\",\n                variant: \"outlined\",\n                value: country || '',\n                onChange: handleChange,\n                fullWidth: true,\n                children: countries.map(function (country) {\n                  return /*#__PURE__*/_jsxDEV(MenuItem, {\n                    value: country.name,\n                    children: country.name\n                  }, country.code, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 157,\n                    columnNumber: 41\n                  }, _this);\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 147,\n                columnNumber: 33\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 29\n            }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 6,\n              children: /*#__PURE__*/_jsxDEV(TextValidator, {\n                variant: \"outlined\",\n                label: \"City\",\n                onChange: handleChange,\n                type: \"text\",\n                name: \"city\",\n                value: city || '',\n                validators: ['required'],\n                errorMessages: ['this field is required'],\n                fullWidth: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 167,\n                columnNumber: 33\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 29\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 25\n          }, _this), /*#__PURE__*/_jsxDEV(TextValidator, {\n            variant: \"outlined\",\n            sx: {\n              mb: '20px'\n            },\n            label: \"Address\",\n            onChange: handleChange,\n            type: \"text\",\n            name: \"address\",\n            value: address || '',\n            validators: ['required'],\n            errorMessages: ['this field is required'],\n            fullWidth: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 25\n          }, _this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n            control: /*#__PURE__*/_jsxDEV(Checkbox, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 38\n            }, _this),\n            label: \"Create an account?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 25\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          lg: 5,\n          md: 5,\n          sm: 12,\n          xs: 12,\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            mb: 2,\n            display: \"flex\",\n            justifyContent: \"space-between\",\n            children: [/*#__PURE__*/_jsxDEV(H5, {\n              sx: {\n                m: 0\n              },\n              children: \"Porduct\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 205,\n              columnNumber: 29\n            }, _this), /*#__PURE__*/_jsxDEV(H5, {\n              sx: {\n                m: 0\n              },\n              children: \"Total Price\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 29\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 25\n          }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [cartList.map(function (product, ind) {\n              return /*#__PURE__*/_jsxDEV(Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(Box, {\n                  py: 2,\n                  display: \"flex\",\n                  justifyContent: \"space-between\",\n                  children: [/*#__PURE__*/_jsxDEV(Span, {\n                    sx: {\n                      pr: 4,\n                      color: textMuted\n                    },\n                    children: product.title\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 216,\n                    columnNumber: 41\n                  }, _this), /*#__PURE__*/_jsxDEV(Span, {\n                    sx: {\n                      color: textMuted\n                    },\n                    children: [\"$\", product.price * product.amount]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 219,\n                    columnNumber: 41\n                  }, _this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 211,\n                  columnNumber: 37\n                }, _this), ind !== cartList.length - 1 && /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 224,\n                  columnNumber: 41\n                }, _this)]\n              }, product.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 210,\n                columnNumber: 33\n              }, _this);\n            }), /*#__PURE__*/_jsxDEV(Box, {\n              mt: 2,\n              mb: 4,\n              display: \"flex\",\n              justifyContent: \"space-between\",\n              children: [/*#__PURE__*/_jsxDEV(H5, {\n                sx: {\n                  m: 0\n                },\n                children: \"Total\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 234,\n                columnNumber: 33\n              }, _this), /*#__PURE__*/_jsxDEV(H5, {\n                sx: {\n                  m: 0\n                },\n                children: [\"$\", getTotalCost().toFixed(2)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 235,\n                columnNumber: 33\n              }, _this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 228,\n              columnNumber: 29\n            }, _this), /*#__PURE__*/_jsxDEV(Button, {\n              color: \"primary\",\n              variant: \"contained\",\n              type: \"submit\",\n              sx: {\n                width: '100%'\n              },\n              children: \"Place Order\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 239,\n              columnNumber: 29\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 25\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 21\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(PaymentDialog, {\n      open: open,\n      toggleDialog: toggleDialog\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 13\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(Checkout, \"Sj54/t1VhzvCYyv6Sr97yzsS+Rw=\", false, function () {\n  return [useSelector, useTheme];\n});\n\n_c = Checkout;\nexport default Checkout;\n\nvar _c;\n\n$RefreshReg$(_c, \"Checkout\");","map":{"version":3,"sources":["/Users/zhaoyuliu/Desktop/matx-pro-3.3.0/src/app/views/ecommerce/Checkout.jsx"],"names":["countries","useSelector","PaymentDialog","React","Fragment","useState","ValidatorForm","TextValidator","Card","Grid","FormControlLabel","Checkbox","Button","MenuItem","Divider","Box","styled","useTheme","H4","H5","Span","CartRoot","theme","margin","padding","breakpoints","down","Checkout","state","setState","open","setOpen","ecommerce","cartList","getTotalCost","totalCost","forEach","product","amount","price","handleChange","event","persist","target","name","value","handleSubmit","console","log","toggleDialog","firstName","lastName","company","email","mobile","country","city","address","palette","textMuted","text","secondary","errors","mt","mb","fontWeight","map","code","m","ind","pr","color","title","length","id","toFixed","width"],"mappings":"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","sourcesContent":["import { countries } from './Country'\nimport { useSelector } from 'react-redux'\nimport PaymentDialog from './PaymentDialog'\nimport React, { Fragment, useState } from 'react'\nimport { ValidatorForm, TextValidator } from 'react-material-ui-form-validator'\nimport {\n    Card,\n    Grid,\n    FormControlLabel,\n    Checkbox,\n    Button,\n    MenuItem,\n    Divider,\n} from '@mui/material'\nimport { Box, styled, useTheme } from '@mui/system'\nimport { H4, H5, Span } from 'app/components/Typography'\n\nconst CartRoot = styled(Card)(({ theme }) => ({\n    margin: '30px',\n    padding: '24px',\n    [theme.breakpoints.down('sm')]: {\n        margin: '16px',\n        padding: '16px ',\n    },\n}))\n\nconst Checkout = () => {\n    const [state, setState] = useState({})\n    const [open, setOpen] = useState(false)\n    const { cartList = [] } = useSelector((state) => state.ecommerce)\n\n    const getTotalCost = () => {\n        let totalCost = 0\n        cartList.forEach((product) => {\n            totalCost += product.amount * product.price\n        })\n        return totalCost\n    }\n    const handleChange = (event) => {\n        event.persist()\n        setState({ ...state, [event.target.name]: event.target.value })\n    }\n    const handleSubmit = () => {\n        console.log(state)\n        toggleDialog()\n    }\n    const toggleDialog = () => {\n        setOpen(!open)\n    }\n\n    let {\n        firstName,\n        lastName,\n        company,\n        email,\n        mobile,\n        country,\n        city,\n        address,\n    } = state\n\n    const { palette } = useTheme()\n    const textMuted = palette.text.secondary\n\n    return (\n        <CartRoot className=\"checkout\">\n            <ValidatorForm onSubmit={handleSubmit} onError={(errors) => null}>\n                <H4 sx={{ mt: 0, mb: 3, fontWeight: '500' }}>\n                    Billing Details\n                </H4>\n                <Grid container spacing={3}>\n                    <Grid item lg={7} md={7} sm={12} xs={12}>\n                        <Grid container spacing={3} sx={{ mb: '20px' }}>\n                            <Grid item xs={6}>\n                                <TextValidator\n                                    variant=\"outlined\"\n                                    label=\"First Name\"\n                                    onChange={handleChange}\n                                    type=\"text\"\n                                    name=\"firstName\"\n                                    value={firstName || ''}\n                                    validators={['required']}\n                                    errorMessages={['this field is required']}\n                                    fullWidth\n                                />\n                            </Grid>\n                            <Grid item xs={6}>\n                                <TextValidator\n                                    variant=\"outlined\"\n                                    label=\"Last Name\"\n                                    onChange={handleChange}\n                                    type=\"text\"\n                                    name=\"lastName\"\n                                    value={lastName || ''}\n                                    validators={['required']}\n                                    errorMessages={['this field is required']}\n                                    fullWidth\n                                />\n                            </Grid>\n                        </Grid>\n\n                        <TextValidator\n                            sx={{ mb: '20px' }}\n                            variant=\"outlined\"\n                            label=\"Company\"\n                            onChange={handleChange}\n                            type=\"text\"\n                            name=\"company\"\n                            value={company || ''}\n                            fullWidth\n                        />\n\n                        <Grid container spacing={3} sx={{ mb: '20px' }}>\n                            <Grid item xs={6}>\n                                <TextValidator\n                                    variant=\"outlined\"\n                                    label=\"Email\"\n                                    onChange={handleChange}\n                                    type=\"email\"\n                                    name=\"email\"\n                                    value={email || ''}\n                                    validators={['required', 'isEmail']}\n                                    errorMessages={[\n                                        'this field is required',\n                                        'email is not valid',\n                                    ]}\n                                    fullWidth\n                                />\n                            </Grid>\n                            <Grid item xs={6}>\n                                <TextValidator\n                                    variant=\"outlined\"\n                                    label=\"Mobile\"\n                                    onChange={handleChange}\n                                    type=\"number\"\n                                    name=\"mobile\"\n                                    value={mobile || ''}\n                                    validators={['required']}\n                                    errorMessages={['this field is required']}\n                                    fullWidth\n                                />\n                            </Grid>\n                        </Grid>\n\n                        <Grid container spacing={3} sx={{ mb: '20px' }}>\n                            <Grid item xs={6}>\n                                <TextValidator\n                                    label=\"Country\"\n                                    select\n                                    name=\"country\"\n                                    variant=\"outlined\"\n                                    value={country || ''}\n                                    onChange={handleChange}\n                                    fullWidth\n                                >\n                                    {countries.map((country) => (\n                                        <MenuItem\n                                            key={country.code}\n                                            value={country.name}\n                                        >\n                                            {country.name}\n                                        </MenuItem>\n                                    ))}\n                                </TextValidator>\n                            </Grid>\n                            <Grid item xs={6}>\n                                <TextValidator\n                                    variant=\"outlined\"\n                                    label=\"City\"\n                                    onChange={handleChange}\n                                    type=\"text\"\n                                    name=\"city\"\n                                    value={city || ''}\n                                    validators={['required']}\n                                    errorMessages={['this field is required']}\n                                    fullWidth\n                                />\n                            </Grid>\n                        </Grid>\n\n                        <TextValidator\n                            variant=\"outlined\"\n                            sx={{ mb: '20px' }}\n                            label=\"Address\"\n                            onChange={handleChange}\n                            type=\"text\"\n                            name=\"address\"\n                            value={address || ''}\n                            validators={['required']}\n                            errorMessages={['this field is required']}\n                            fullWidth\n                        />\n\n                        <FormControlLabel\n                            control={<Checkbox />}\n                            label=\"Create an account?\"\n                        />\n                    </Grid>\n                    <Grid item lg={5} md={5} sm={12} xs={12}>\n                        <Box\n                            mb={2}\n                            display=\"flex\"\n                            justifyContent=\"space-between\"\n                        >\n                            <H5 sx={{ m: 0 }}>Porduct</H5>\n                            <H5 sx={{ m: 0 }}>Total Price</H5>\n                        </Box>\n                        <div>\n                            {cartList.map((product, ind) => (\n                                <Fragment key={product.id}>\n                                    <Box\n                                        py={2}\n                                        display=\"flex\"\n                                        justifyContent=\"space-between\"\n                                    >\n                                        <Span sx={{ pr: 4, color: textMuted }}>\n                                            {product.title}\n                                        </Span>\n                                        <Span sx={{ color: textMuted }}>\n                                            ${product.price * product.amount}\n                                        </Span>\n                                    </Box>\n                                    {ind !== cartList.length - 1 && (\n                                        <Divider></Divider>\n                                    )}\n                                </Fragment>\n                            ))}\n                            <Box\n                                mt={2}\n                                mb={4}\n                                display=\"flex\"\n                                justifyContent=\"space-between\"\n                            >\n                                <H5 sx={{ m: 0 }}>Total</H5>\n                                <H5 sx={{ m: 0 }}>\n                                    ${getTotalCost().toFixed(2)}\n                                </H5>\n                            </Box>\n                            <Button\n                                color=\"primary\"\n                                variant=\"contained\"\n                                type=\"submit\"\n                                sx={{ width: '100%' }}\n                            >\n                                Place Order\n                            </Button>\n                        </div>\n                    </Grid>\n                </Grid>\n            </ValidatorForm>\n            <PaymentDialog open={open} toggleDialog={toggleDialog} />\n        </CartRoot>\n    )\n}\n\nexport default Checkout\n"]},"metadata":{},"sourceType":"module"}