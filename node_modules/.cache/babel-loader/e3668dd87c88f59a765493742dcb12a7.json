{"ast":null,"code":"import _toConsumableArray from \"/Users/zhaoyuliu/Desktop/matx-basic/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _classCallCheck from \"/Users/zhaoyuliu/Desktop/matx-basic/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/zhaoyuliu/Desktop/matx-basic/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/Users/zhaoyuliu/Desktop/matx-basic/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/zhaoyuliu/Desktop/matx-basic/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport _objectSpread from \"/Users/zhaoyuliu/Desktop/matx-basic/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _defineProperty from \"/Users/zhaoyuliu/Desktop/matx-basic/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\n\nvar _jsxFileName = \"/Users/zhaoyuliu/Desktop/matx-basic/src/app/views/todo/TodoEditor.jsx\",\n    _this = this;\n\nimport { Icon, Chip, Grid, Button, Hidden, Tooltip, Checkbox, MenuItem, IconButton, FormControlLabel, TextField } from '@mui/material';\nimport { getTodoById, getAllTodoTag, updateTodoById, deleteTodo, addTodo } from './TodoService';\nimport TagDialog from './TagDialog';\nimport React, { Component } from 'react';\nimport { Box, styled } from '@mui/system';\nimport { MatxMenu } from 'app/components';\nimport { Link, useParams, useNavigate } from 'react-router-dom';\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\nimport { ValidatorForm, TextValidator } from 'react-material-ui-form-validator';\nimport { themeShadows } from 'app/components/MatxTheme/themeColors';\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\nimport { DatePicker } from '@mui/lab';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar Container = styled('div')(function (_ref) {\n  var theme = _ref.theme;\n  return _defineProperty({\n    margin: '30px',\n    zIndex: 2000,\n    background: '#fff',\n    borderRadius: '4px',\n    boxShadow: themeShadows[5]\n  }, theme.breakpoints.down('sm'), {\n    margin: '16px'\n  });\n});\nvar FlexBox = styled(Box)(function () {\n  return {\n    display: 'flex',\n    flexWrap: 'wrap',\n    alignItems: 'center'\n  };\n});\nvar JustifyBox = styled(FlexBox)(function () {\n  return {\n    paddingTop: '8px',\n    paddingBottom: '8px',\n    justifyContent: 'space-between',\n    background: 'rgba(0, 0, 0, 0.01)'\n  };\n});\nvar StyledValidator = styled(TextValidator)(function () {\n  return {\n    width: '100%',\n    marginBottom: '16px !important'\n  };\n});\n\nvar withRouter = function withRouter(WrappedComponent) {\n  var _s = $RefreshSig$();\n\n  return _s(function (props) {\n    _s();\n\n    var params = useParams();\n    var navigate = useNavigate();\n    return /*#__PURE__*/_jsxDEV(WrappedComponent, _objectSpread(_objectSpread({}, props), {}, {\n      params: params,\n      navigate: navigate // etc...\n\n    }), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }, _this);\n  }, \"lSYLabgCnDLruuq/SSKUMozqso0=\", false, function () {\n    return [useParams, useNavigate];\n  });\n};\n\nvar TodoEditor = /*#__PURE__*/function (_Component) {\n  _inherits(TodoEditor, _Component);\n\n  var _super = _createSuper(TodoEditor);\n\n  function TodoEditor() {\n    var _this2;\n\n    _classCallCheck(this, TodoEditor);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this2 = _super.call.apply(_super, [this].concat(args));\n    _this2.state = {\n      todo: {\n        title: '',\n        note: '',\n        done: false,\n        read: false,\n        starred: false,\n        important: false,\n        startDate: new Date(),\n        dueDate: new Date(),\n        tag: []\n      },\n      tagList: [],\n      shouldOpenTagDialog: false\n    };\n\n    _this2.addNewTodo = function () {\n      var id = _this2.state.tagList.length + 1;\n      addTodo(_objectSpread(_objectSpread({}, _this2.state.todo), {}, {\n        id: id\n      })).then(function () {\n        _this2.props.navigate('/todo/list');\n      });\n    };\n\n    _this2.updateTodo = function (todo) {\n      updateTodoById(todo);\n\n      _this2.setState({\n        todo: _objectSpread(_objectSpread({}, _this2.state.todo), todo)\n      });\n    };\n\n    _this2.reloadTagList = function () {\n      getAllTodoTag().then(function (_ref3) {\n        var data = _ref3.data;\n\n        _this2.setState({\n          tagList: _toConsumableArray(data)\n        });\n      });\n    };\n\n    _this2.addTagInTodo = function (id) {\n      var tag = _this2.state.todo.tag;\n\n      if (!tag.includes(id)) {\n        tag.push(id);\n\n        _this2.setState({\n          todo: _objectSpread(_objectSpread({}, _this2.state.todo), {}, {\n            tag: tag\n          })\n        });\n      }\n    };\n\n    _this2.handleTagDelete = function (tagId) {\n      var _this2$state$todo$tag = _this2.state.todo.tag,\n          tagList = _this2$state$todo$tag === void 0 ? [] : _this2$state$todo$tag;\n      tagList = tagList.filter(function (id) {\n        return id !== tagId;\n      });\n\n      _this2.setState({\n        todo: _objectSpread(_objectSpread({}, _this2.state.todo), {}, {\n          tag: _toConsumableArray(tagList)\n        })\n      }, function () {\n        return updateTodoById(_objectSpread({}, _this2.state.todo));\n      });\n    };\n\n    _this2.handleTodoDelete = function () {\n      deleteTodo(_objectSpread({}, _this2.state.todo)).then(function () {\n        _this2.props.navigate('/todo/list');\n      });\n    };\n\n    _this2.handleChange = function (event) {\n      event.persist();\n\n      _this2.setState({\n        todo: _objectSpread(_objectSpread({}, _this2.state.todo), {}, _defineProperty({}, event.target.name, event.target.value))\n      });\n    };\n\n    _this2.handleDateChange = function (filedName, date) {\n      _this2.setState(_this2.setState({\n        todo: _objectSpread(_objectSpread({}, _this2.state.todo), {}, _defineProperty({}, filedName, date))\n      }));\n    };\n\n    _this2.handleSubmit = function (event) {\n      var todoId = _this2.props.params.id;\n\n      if (todoId === 'add') {\n        _this2.addNewTodo();\n      } else {\n        updateTodoById(_objectSpread({}, _this2.state.todo)).then(function () {\n          _this2.props.navigate('/todo/list');\n        });\n      }\n    };\n\n    _this2.handleTagDialogToggle = function () {\n      _this2.setState({\n        shouldOpenTagDialog: !_this2.state.shouldOpenTagDialog\n      });\n    };\n\n    return _this2;\n  }\n\n  _createClass(TodoEditor, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this3 = this;\n\n      var id = this.props.params.id;\n      getAllTodoTag().then(function (_ref4) {\n        var tagList = _ref4.data;\n\n        if (id !== 'add') {\n          getTodoById(id).then(function (_ref5) {\n            var data = _ref5.data;\n\n            if (!data) {\n              _this3.props.navigate('/todo/list');\n\n              return;\n            }\n\n            _this3.setState({\n              todo: _objectSpread({}, data),\n              tagList: _toConsumableArray(tagList)\n            });\n          });\n        } else {\n          _this3.setState({\n            tagList: tagList\n          });\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n\n      var _this$state$todo = this.state.todo,\n          title = _this$state$todo.title,\n          note = _this$state$todo.note,\n          done = _this$state$todo.done,\n          read = _this$state$todo.read,\n          starred = _this$state$todo.starred,\n          important = _this$state$todo.important,\n          startDate = _this$state$todo.startDate,\n          dueDate = _this$state$todo.dueDate,\n          _this$state$todo$tag = _this$state$todo.tag,\n          tagIdList = _this$state$todo$tag === void 0 ? [] : _this$state$todo$tag;\n      var tagList = this.state.tagList;\n      return /*#__PURE__*/_jsxDEV(Container, {\n        children: [/*#__PURE__*/_jsxDEV(JustifyBox, {\n          children: [/*#__PURE__*/_jsxDEV(FlexBox, {\n            children: [/*#__PURE__*/_jsxDEV(Link, {\n              to: \"/todo/list\",\n              children: /*#__PURE__*/_jsxDEV(IconButton, {\n                children: /*#__PURE__*/_jsxDEV(Icon, {\n                  children: \"arrow_back\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 232,\n                  columnNumber: 33\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 231,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 230,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Hidden, {\n              smDown: true,\n              children: /*#__PURE__*/_jsxDEV(FormControlLabel, {\n                sx: {\n                  ml: 1\n                },\n                onChange: function onChange() {\n                  return _this4.updateTodo(_objectSpread(_objectSpread({}, _this4.state), {}, {\n                    done: !done\n                  }));\n                },\n                control: /*#__PURE__*/_jsxDEV(Checkbox, {\n                  checked: done\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 244,\n                  columnNumber: 42\n                }, this),\n                label: \"Mark As \".concat(done ? 'Und' : 'D', \"one\")\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 236,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 235,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            display: \"flex\",\n            flexWrap: \"wrap\",\n            children: [/*#__PURE__*/_jsxDEV(Tooltip, {\n              title: \"Mark As \".concat(read ? 'Unr' : 'R', \"ead\"),\n              fontSize: \"large\",\n              children: /*#__PURE__*/_jsxDEV(IconButton, {\n                onClick: function onClick() {\n                  return _this4.updateTodo(_objectSpread(_objectSpread({}, _this4.state), {}, {\n                    read: !read\n                  }));\n                },\n                children: /*#__PURE__*/_jsxDEV(Icon, {\n                  children: read ? 'drafts' : 'markunread'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 262,\n                  columnNumber: 33\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 254,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 250,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n              title: \"Mark As \".concat(important ? 'Uni' : 'I', \"mportant\"),\n              fontSize: \"large\",\n              children: /*#__PURE__*/_jsxDEV(IconButton, {\n                onClick: function onClick() {\n                  return _this4.updateTodo(_objectSpread(_objectSpread({}, _this4.state), {}, {\n                    important: !important\n                  }));\n                },\n                children: /*#__PURE__*/_jsxDEV(Icon, {\n                  color: important ? 'error' : 'inherit',\n                  children: important ? 'error' : 'error_outline'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 278,\n                  columnNumber: 33\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 270,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 266,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n              title: \"Mark As \".concat(starred ? 'Uns' : 'S', \"tarred\"),\n              fontSize: \"large\",\n              children: /*#__PURE__*/_jsxDEV(IconButton, {\n                onClick: function onClick() {\n                  return _this4.updateTodo(_objectSpread(_objectSpread({}, _this4.state), {}, {\n                    starred: !starred\n                  }));\n                },\n                children: /*#__PURE__*/_jsxDEV(Icon, {\n                  color: starred ? 'secondary' : 'inherit',\n                  children: starred ? 'star' : 'star_outline'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 296,\n                  columnNumber: 33\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 288,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 284,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Hidden, {\n              smDown: true,\n              children: /*#__PURE__*/_jsxDEV(Tooltip, {\n                title: \"Manage tags\",\n                fontSize: \"large\",\n                children: /*#__PURE__*/_jsxDEV(IconButton, {\n                  onClick: this.handleTagDialogToggle,\n                  children: /*#__PURE__*/_jsxDEV(Icon, {\n                    children: \"library_add\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 307,\n                    columnNumber: 37\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 304,\n                  columnNumber: 33\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 303,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 302,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(MatxMenu, {\n              menuButton: /*#__PURE__*/_jsxDEV(Tooltip, {\n                title: \"Add tags\",\n                fontSize: \"large\",\n                children: /*#__PURE__*/_jsxDEV(IconButton, {\n                  children: /*#__PURE__*/_jsxDEV(Icon, {\n                    children: \"label\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 316,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 315,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 314,\n                columnNumber: 33\n              }, this),\n              children: this.state.tagList.map(function (tag) {\n                return /*#__PURE__*/_jsxDEV(MenuItem, {\n                  sx: {\n                    textTransform: 'capitalize'\n                  },\n                  onClick: function onClick() {\n                    return _this4.addTagInTodo(tag.id);\n                  },\n                  children: tag.name\n                }, tag.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 322,\n                  columnNumber: 33\n                }, _this4);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 312,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n              title: \"Delete\",\n              fontSize: \"large\",\n              children: /*#__PURE__*/_jsxDEV(IconButton, {\n                onClick: this.handleTodoDelete,\n                children: /*#__PURE__*/_jsxDEV(Icon, {\n                  children: \"delete_outline\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 334,\n                  columnNumber: 33\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 333,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 332,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          p: 2,\n          children: [tagIdList.length ? /*#__PURE__*/_jsxDEV(Box, {\n            mb: 2,\n            children: tagIdList.map(function (tagId) {\n              var tagName = (tagList.find(function (tag) {\n                return tag.id === tagId;\n              }) || {}).name;\n              if (!tagName) return null;else return /*#__PURE__*/_jsxDEV(Chip, {\n                label: tagName,\n                onDelete: function onDelete() {\n                  return _this4.handleTagDelete(tagId);\n                },\n                sx: {\n                  mr: 1,\n                  textTransform: 'capitalize'\n                }\n              }, tagId, false, {\n                fileName: _jsxFileName,\n                lineNumber: 351,\n                columnNumber: 41\n              }, _this4);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 342,\n            columnNumber: 25\n          }, this) : null, /*#__PURE__*/_jsxDEV(ValidatorForm, {\n            ref: \"form\",\n            onSubmit: this.handleSubmit,\n            onError: function onError(errors) {\n              return null;\n            },\n            children: [/*#__PURE__*/_jsxDEV(StyledValidator, {\n              label: \"Title*\",\n              onChange: this.handleChange,\n              type: \"text\",\n              name: \"title\",\n              value: title,\n              validators: ['required'],\n              errorMessages: ['this field is required']\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 372,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(StyledValidator, {\n              label: \"Put your notes*\",\n              onChange: this.handleChange,\n              type: \"text\",\n              name: \"note\",\n              multiline: true,\n              value: note,\n              validators: ['required'],\n              errorMessages: ['this field is required']\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 381,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              mb: 2,\n              children: /*#__PURE__*/_jsxDEV(LocalizationProvider, {\n                dateAdapter: AdapterDateFns,\n                children: /*#__PURE__*/_jsxDEV(Grid, {\n                  container: true,\n                  spacing: 2,\n                  children: [/*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    lg: 6,\n                    md: 6,\n                    sm: 12,\n                    xs: 12,\n                    children: /*#__PURE__*/_jsxDEV(DatePicker, {\n                      value: new Date(startDate),\n                      onChange: function onChange(date) {\n                        return _this4.handleDateChange('startDate', date);\n                      },\n                      renderInput: function renderInput(props) {\n                        return /*#__PURE__*/_jsxDEV(TextField, _objectSpread(_objectSpread({}, props), {}, {\n                          variant: \"standard\",\n                          id: \"mui-pickers-date\",\n                          label: \"Start Date*\"\n                        }), void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 404,\n                          columnNumber: 49\n                        }, _this4);\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 395,\n                      columnNumber: 41\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 394,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    lg: 6,\n                    md: 6,\n                    sm: 12,\n                    xs: 12,\n                    children: /*#__PURE__*/_jsxDEV(DatePicker, {\n                      value: new Date(dueDate),\n                      onChange: function onChange(date) {\n                        return _this4.handleDateChange('dueDate', date);\n                      },\n                      renderInput: function renderInput(props) {\n                        return /*#__PURE__*/_jsxDEV(TextField, _objectSpread(_objectSpread({}, props), {}, {\n                          variant: \"standard\",\n                          id: \"mui-pickers-date\",\n                          label: \"End Date*\"\n                        }), void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 423,\n                          columnNumber: 49\n                        }, _this4);\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 414,\n                      columnNumber: 41\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 413,\n                    columnNumber: 37\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 393,\n                  columnNumber: 33\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 392,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 391,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/todo/list\",\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"outlined\",\n                color: \"secondary\",\n                sx: {\n                  mr: 2\n                },\n                type: \"submit\",\n                children: \"cancel\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 436,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 435,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              color: \"primary\",\n              variant: \"contained\",\n              type: \"submit\",\n              children: \"save\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 445,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 367,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 340,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(TagDialog, {\n          reloadTagList: this.reloadTagList,\n          open: this.state.shouldOpenTagDialog,\n          handleClose: this.handleTagDialogToggle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 454,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 13\n      }, this);\n    }\n  }]);\n\n  return TodoEditor;\n}(Component);\n\nexport default _c = withRouter(TodoEditor);\n\nvar _c;\n\n$RefreshReg$(_c, \"%default%\");","map":{"version":3,"sources":["/Users/zhaoyuliu/Desktop/matx-basic/src/app/views/todo/TodoEditor.jsx"],"names":["Icon","Chip","Grid","Button","Hidden","Tooltip","Checkbox","MenuItem","IconButton","FormControlLabel","TextField","getTodoById","getAllTodoTag","updateTodoById","deleteTodo","addTodo","TagDialog","React","Component","Box","styled","MatxMenu","Link","useParams","useNavigate","AdapterDateFns","ValidatorForm","TextValidator","themeShadows","LocalizationProvider","DatePicker","Container","theme","margin","zIndex","background","borderRadius","boxShadow","breakpoints","down","FlexBox","display","flexWrap","alignItems","JustifyBox","paddingTop","paddingBottom","justifyContent","StyledValidator","width","marginBottom","withRouter","WrappedComponent","props","params","navigate","TodoEditor","state","todo","title","note","done","read","starred","important","startDate","Date","dueDate","tag","tagList","shouldOpenTagDialog","addNewTodo","id","length","then","updateTodo","setState","reloadTagList","data","addTagInTodo","includes","push","handleTagDelete","tagId","filter","handleTodoDelete","handleChange","event","persist","target","name","value","handleDateChange","filedName","date","handleSubmit","todoId","handleTagDialogToggle","tagIdList","ml","map","textTransform","tagName","find","mr","errors"],"mappings":"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","sourcesContent":["import {\n    Icon,\n    Chip,\n    Grid,\n    Button,\n    Hidden,\n    Tooltip,\n    Checkbox,\n    MenuItem,\n    IconButton,\n    FormControlLabel,\n    TextField,\n} from '@mui/material'\nimport {\n    getTodoById,\n    getAllTodoTag,\n    updateTodoById,\n    deleteTodo,\n    addTodo,\n} from './TodoService'\nimport TagDialog from './TagDialog'\nimport React, { Component } from 'react'\nimport { Box, styled } from '@mui/system'\nimport { MatxMenu } from 'app/components'\nimport { Link, useParams, useNavigate } from 'react-router-dom'\nimport AdapterDateFns from '@mui/lab/AdapterDateFns'\nimport { ValidatorForm, TextValidator } from 'react-material-ui-form-validator'\nimport { themeShadows } from 'app/components/MatxTheme/themeColors'\nimport LocalizationProvider from '@mui/lab/LocalizationProvider'\nimport { DatePicker } from '@mui/lab'\n\nconst Container = styled('div')(({ theme }) => ({\n    margin: '30px',\n    zIndex: 2000,\n    background: '#fff',\n    borderRadius: '4px',\n    boxShadow: themeShadows[5],\n    [theme.breakpoints.down('sm')]: {\n        margin: '16px',\n    },\n}))\n\nconst FlexBox = styled(Box)(() => ({\n    display: 'flex',\n    flexWrap: 'wrap',\n    alignItems: 'center',\n}))\n\nconst JustifyBox = styled(FlexBox)(() => ({\n    paddingTop: '8px',\n    paddingBottom: '8px',\n    justifyContent: 'space-between',\n    background: 'rgba(0, 0, 0, 0.01)',\n}))\n\nconst StyledValidator = styled(TextValidator)(() => ({\n    width: '100%',\n    marginBottom: '16px !important',\n}))\n\nconst withRouter = (WrappedComponent) => (props) => {\n    const params = useParams()\n    const navigate = useNavigate()\n\n    return (\n        <WrappedComponent\n            {...props}\n            params={params}\n            navigate={navigate}\n            // etc...\n        />\n    )\n}\n\nclass TodoEditor extends Component {\n    state = {\n        todo: {\n            title: '',\n            note: '',\n            done: false,\n            read: false,\n            starred: false,\n            important: false,\n            startDate: new Date(),\n            dueDate: new Date(),\n            tag: [],\n        },\n        tagList: [],\n        shouldOpenTagDialog: false,\n    }\n\n    componentDidMount() {\n        let { id } = this.props.params\n\n        getAllTodoTag().then(({ data: tagList }) => {\n            if (id !== 'add') {\n                getTodoById(id).then(({ data }) => {\n                    if (!data) {\n                        this.props.navigate('/todo/list')\n                        return\n                    }\n                    this.setState({\n                        todo: { ...data },\n                        tagList: [...tagList],\n                    })\n                })\n            } else {\n                this.setState({\n                    tagList,\n                })\n            }\n        })\n    }\n\n    addNewTodo = () => {\n        let id = this.state.tagList.length + 1\n        addTodo({ ...this.state.todo, id }).then(() => {\n            this.props.navigate('/todo/list')\n        })\n    }\n\n    updateTodo = (todo) => {\n        updateTodoById(todo)\n        this.setState({\n            todo: {\n                ...this.state.todo,\n                ...todo,\n            },\n        })\n    }\n\n    reloadTagList = () => {\n        getAllTodoTag().then(({ data }) => {\n            this.setState({\n                tagList: [...data],\n            })\n        })\n    }\n\n    addTagInTodo = (id) => {\n        let { tag } = this.state.todo\n        if (!tag.includes(id)) {\n            tag.push(id)\n            this.setState({\n                todo: {\n                    ...this.state.todo,\n                    tag,\n                },\n            })\n        }\n    }\n\n    handleTagDelete = (tagId) => {\n        let { tag: tagList = [] } = this.state.todo\n        tagList = tagList.filter((id) => id !== tagId)\n        this.setState(\n            {\n                todo: {\n                    ...this.state.todo,\n                    tag: [...tagList],\n                },\n            },\n            () => updateTodoById({ ...this.state.todo })\n        )\n    }\n\n    handleTodoDelete = () => {\n        deleteTodo({ ...this.state.todo }).then(() => {\n            this.props.navigate('/todo/list')\n        })\n    }\n\n    handleChange = (event) => {\n        event.persist()\n        this.setState({\n            todo: {\n                ...this.state.todo,\n                [event.target.name]: event.target.value,\n            },\n        })\n    }\n\n    handleDateChange = (filedName, date) => {\n        this.setState(\n            this.setState({\n                todo: {\n                    ...this.state.todo,\n                    [filedName]: date,\n                },\n            })\n        )\n    }\n\n    handleSubmit = (event) => {\n        let { id: todoId } = this.props.params\n\n        if (todoId === 'add') {\n            this.addNewTodo()\n        } else {\n            updateTodoById({ ...this.state.todo }).then(() => {\n                this.props.navigate('/todo/list')\n            })\n        }\n    }\n\n    handleTagDialogToggle = () => {\n        this.setState({\n            shouldOpenTagDialog: !this.state.shouldOpenTagDialog,\n        })\n    }\n\n    render() {\n        let {\n            title,\n            note,\n            done,\n            read,\n            starred,\n            important,\n            startDate,\n            dueDate,\n            tag: tagIdList = [],\n        } = this.state.todo\n        let { tagList } = this.state\n\n        return (\n            <Container>\n                <JustifyBox>\n                    <FlexBox>\n                        <Link to=\"/todo/list\">\n                            <IconButton>\n                                <Icon>arrow_back</Icon>\n                            </IconButton>\n                        </Link>\n                        <Hidden smDown>\n                            <FormControlLabel\n                                sx={{ ml: 1 }}\n                                onChange={() =>\n                                    this.updateTodo({\n                                        ...this.state,\n                                        done: !done,\n                                    })\n                                }\n                                control={<Checkbox checked={done} />}\n                                label={`Mark As ${done ? 'Und' : 'D'}one`}\n                            />\n                        </Hidden>\n                    </FlexBox>\n                    <Box display=\"flex\" flexWrap=\"wrap\">\n                        <Tooltip\n                            title={`Mark As ${read ? 'Unr' : 'R'}ead`}\n                            fontSize=\"large\"\n                        >\n                            <IconButton\n                                onClick={() =>\n                                    this.updateTodo({\n                                        ...this.state,\n                                        read: !read,\n                                    })\n                                }\n                            >\n                                <Icon>{read ? 'drafts' : 'markunread'}</Icon>\n                            </IconButton>\n                        </Tooltip>\n\n                        <Tooltip\n                            title={`Mark As ${important ? 'Uni' : 'I'}mportant`}\n                            fontSize=\"large\"\n                        >\n                            <IconButton\n                                onClick={() =>\n                                    this.updateTodo({\n                                        ...this.state,\n                                        important: !important,\n                                    })\n                                }\n                            >\n                                <Icon color={important ? 'error' : 'inherit'}>\n                                    {important ? 'error' : 'error_outline'}\n                                </Icon>\n                            </IconButton>\n                        </Tooltip>\n\n                        <Tooltip\n                            title={`Mark As ${starred ? 'Uns' : 'S'}tarred`}\n                            fontSize=\"large\"\n                        >\n                            <IconButton\n                                onClick={() =>\n                                    this.updateTodo({\n                                        ...this.state,\n                                        starred: !starred,\n                                    })\n                                }\n                            >\n                                <Icon color={starred ? 'secondary' : 'inherit'}>\n                                    {starred ? 'star' : 'star_outline'}\n                                </Icon>\n                            </IconButton>\n                        </Tooltip>\n\n                        <Hidden smDown>\n                            <Tooltip title=\"Manage tags\" fontSize=\"large\">\n                                <IconButton\n                                    onClick={this.handleTagDialogToggle}\n                                >\n                                    <Icon>library_add</Icon>\n                                </IconButton>\n                            </Tooltip>\n                        </Hidden>\n\n                        <MatxMenu\n                            menuButton={\n                                <Tooltip title=\"Add tags\" fontSize=\"large\">\n                                    <IconButton>\n                                        <Icon>label</Icon>\n                                    </IconButton>\n                                </Tooltip>\n                            }\n                        >\n                            {this.state.tagList.map((tag) => (\n                                <MenuItem\n                                    sx={{ textTransform: 'capitalize' }}\n                                    key={tag.id}\n                                    onClick={() => this.addTagInTodo(tag.id)}\n                                >\n                                    {tag.name}\n                                </MenuItem>\n                            ))}\n                        </MatxMenu>\n\n                        <Tooltip title=\"Delete\" fontSize=\"large\">\n                            <IconButton onClick={this.handleTodoDelete}>\n                                <Icon>delete_outline</Icon>\n                            </IconButton>\n                        </Tooltip>\n                    </Box>\n                </JustifyBox>\n\n                <Box p={2}>\n                    {tagIdList.length ? (\n                        <Box mb={2}>\n                            {tagIdList.map((tagId) => {\n                                let tagName = (\n                                    tagList.find((tag) => tag.id === tagId) ||\n                                    {}\n                                ).name\n                                if (!tagName) return null\n                                else\n                                    return (\n                                        <Chip\n                                            key={tagId}\n                                            label={tagName}\n                                            onDelete={() =>\n                                                this.handleTagDelete(tagId)\n                                            }\n                                            sx={{\n                                                mr: 1,\n                                                textTransform: 'capitalize',\n                                            }}\n                                        />\n                                    )\n                            })}\n                        </Box>\n                    ) : null}\n\n                    <ValidatorForm\n                        ref=\"form\"\n                        onSubmit={this.handleSubmit}\n                        onError={(errors) => null}\n                    >\n                        <StyledValidator\n                            label=\"Title*\"\n                            onChange={this.handleChange}\n                            type=\"text\"\n                            name=\"title\"\n                            value={title}\n                            validators={['required']}\n                            errorMessages={['this field is required']}\n                        />\n                        <StyledValidator\n                            label=\"Put your notes*\"\n                            onChange={this.handleChange}\n                            type=\"text\"\n                            name=\"note\"\n                            multiline={true}\n                            value={note}\n                            validators={['required']}\n                            errorMessages={['this field is required']}\n                        />\n                        <Box mb={2}>\n                            <LocalizationProvider dateAdapter={AdapterDateFns}>\n                                <Grid container spacing={2}>\n                                    <Grid item lg={6} md={6} sm={12} xs={12}>\n                                        <DatePicker\n                                            value={new Date(startDate)}\n                                            onChange={(date) =>\n                                                this.handleDateChange(\n                                                    'startDate',\n                                                    date\n                                                )\n                                            }\n                                            renderInput={(props) => (\n                                                <TextField\n                                                    {...props}\n                                                    variant=\"standard\"\n                                                    id=\"mui-pickers-date\"\n                                                    label=\"Start Date*\"\n                                                />\n                                            )}\n                                        />\n                                    </Grid>\n                                    <Grid item lg={6} md={6} sm={12} xs={12}>\n                                        <DatePicker\n                                            value={new Date(dueDate)}\n                                            onChange={(date) =>\n                                                this.handleDateChange(\n                                                    'dueDate',\n                                                    date\n                                                )\n                                            }\n                                            renderInput={(props) => (\n                                                <TextField\n                                                    {...props}\n                                                    variant=\"standard\"\n                                                    id=\"mui-pickers-date\"\n                                                    label=\"End Date*\"\n                                                />\n                                            )}\n                                        />\n                                    </Grid>\n                                </Grid>\n                            </LocalizationProvider>\n                        </Box>\n                        <Link to=\"/todo/list\">\n                            <Button\n                                variant=\"outlined\"\n                                color=\"secondary\"\n                                sx={{ mr: 2 }}\n                                type=\"submit\"\n                            >\n                                cancel\n                            </Button>\n                        </Link>\n                        <Button\n                            color=\"primary\"\n                            variant=\"contained\"\n                            type=\"submit\"\n                        >\n                            save\n                        </Button>\n                    </ValidatorForm>\n                </Box>\n                <TagDialog\n                    reloadTagList={this.reloadTagList}\n                    open={this.state.shouldOpenTagDialog}\n                    handleClose={this.handleTagDialogToggle}\n                />\n            </Container>\n        )\n    }\n}\n\nexport default withRouter(TodoEditor)\n"]},"metadata":{},"sourceType":"module"}