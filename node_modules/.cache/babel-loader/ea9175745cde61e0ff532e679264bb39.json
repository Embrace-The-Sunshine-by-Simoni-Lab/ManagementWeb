{"ast":null,"code":"import _toConsumableArray from \"/Users/zhaoyuliu/Desktop/matx-pro-3.3.0/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _slicedToArray from \"/Users/zhaoyuliu/Desktop/matx-pro-3.3.0/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _defineProperty from \"/Users/zhaoyuliu/Desktop/matx-pro-3.3.0/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\n\nvar _jsxFileName = \"/Users/zhaoyuliu/Desktop/matx-pro-3.3.0/src/app/views/inbox/AppInbox.jsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { MatxSidenavContainer, MatxSidenav, MatxSidenavContent } from 'app/components';\nimport InboxMessageList from './InboxMessagList';\nimport InboxSidenav from './InboxSidenav';\nimport InboxTopBar from './InboxTopbar';\nimport { getAllMessage } from './InboxService';\nimport { useMediaQuery } from '@mui/material';\nimport { useTheme } from '@mui/system';\nimport { Box, styled } from '@mui/system';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar Container = styled('div')(function (_ref) {\n  var theme = _ref.theme;\n  return _defineProperty({\n    margin: '30px',\n    display: 'flex'\n  }, theme.breakpoints.down('sm'), {\n    margin: '16px'\n  });\n});\n\nvar AppInbox = function AppInbox() {\n  _s();\n\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      isAlive = _useState2[0],\n      setIsAlive = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      open = _useState4[0],\n      setOpen = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      masterCheckbox = _useState6[0],\n      setMasterCheckbox = _useState6[1];\n\n  var _useState7 = useState([]),\n      _useState8 = _slicedToArray(_useState7, 2),\n      messageList = _useState8[0],\n      setMessageList = _useState8[1];\n\n  var theme = useTheme();\n  var isMobile = useMediaQuery(theme.breakpoints.down('sm'));\n\n  var toggleSidenav = function toggleSidenav() {\n    setOpen(!open);\n  };\n\n  var handleMasterCheckbox = function handleMasterCheckbox(event) {\n    var temp = messageList;\n    var isChecked = event.target.checked;\n\n    if (isChecked) {\n      temp.map(function (message) {\n        message.selected = true;\n        return message;\n      });\n    } else {\n      temp.map(function (message) {\n        message.selected = false;\n        return message;\n      });\n    }\n\n    setMessageList(temp);\n    setMasterCheckbox(isChecked);\n  };\n\n  var handleCheckboxSelection = function handleCheckboxSelection(event, index) {\n    event.persist();\n    var temp = messageList;\n    temp[index].selected = event.target.checked;\n    setMessageList(_toConsumableArray(temp));\n  };\n\n  useEffect(function () {\n    if (isMobile) setOpen(false);\n  }, [isMobile]);\n  useEffect(function () {\n    getAllMessage().then(function (_ref3) {\n      var data = _ref3.data;\n      if (isAlive) setMessageList(data);\n    });\n  }, [isAlive]);\n  useEffect(function () {\n    return function () {\n      return setIsAlive(false);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      width: \"100%\",\n      children: /*#__PURE__*/_jsxDEV(MatxSidenavContainer, {\n        children: [/*#__PURE__*/_jsxDEV(MatxSidenav, {\n          width: \"220px\",\n          toggleSidenav: toggleSidenav,\n          open: open,\n          children: /*#__PURE__*/_jsxDEV(InboxSidenav, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 25\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, _this), /*#__PURE__*/_jsxDEV(MatxSidenavContent, {\n          children: [/*#__PURE__*/_jsxDEV(InboxTopBar, {\n            masterCheckbox: masterCheckbox,\n            handleMasterCheckbox: handleMasterCheckbox,\n            toggleSidenav: toggleSidenav\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 25\n          }, _this), /*#__PURE__*/_jsxDEV(InboxMessageList, {\n            handleCheckboxSelection: handleCheckboxSelection,\n            messageList: messageList\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 25\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(AppInbox, \"xVCikW+NN/Pufcl8uGY2r6FE0Kg=\", false, function () {\n  return [useTheme, useMediaQuery];\n});\n\n_c = AppInbox;\nexport default AppInbox;\n\nvar _c;\n\n$RefreshReg$(_c, \"AppInbox\");","map":{"version":3,"sources":["/Users/zhaoyuliu/Desktop/matx-pro-3.3.0/src/app/views/inbox/AppInbox.jsx"],"names":["React","useState","useEffect","MatxSidenavContainer","MatxSidenav","MatxSidenavContent","InboxMessageList","InboxSidenav","InboxTopBar","getAllMessage","useMediaQuery","useTheme","Box","styled","Container","theme","margin","display","breakpoints","down","AppInbox","isAlive","setIsAlive","open","setOpen","masterCheckbox","setMasterCheckbox","messageList","setMessageList","isMobile","toggleSidenav","handleMasterCheckbox","event","temp","isChecked","target","checked","map","message","selected","handleCheckboxSelection","index","persist","then","data"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport {\n    MatxSidenavContainer,\n    MatxSidenav,\n    MatxSidenavContent,\n} from 'app/components'\nimport InboxMessageList from './InboxMessagList'\nimport InboxSidenav from './InboxSidenav'\nimport InboxTopBar from './InboxTopbar'\nimport { getAllMessage } from './InboxService'\nimport { useMediaQuery } from '@mui/material'\nimport { useTheme } from '@mui/system'\nimport { Box, styled } from '@mui/system'\n\nconst Container = styled('div')(({ theme }) => ({\n    margin: '30px',\n    display: 'flex',\n    [theme.breakpoints.down('sm')]: {\n        margin: '16px',\n    },\n}))\n\nconst AppInbox = () => {\n    const [isAlive, setIsAlive] = useState(true)\n    const [open, setOpen] = useState(false)\n    const [masterCheckbox, setMasterCheckbox] = useState(false)\n    const [messageList, setMessageList] = useState([])\n\n    const theme = useTheme()\n    const isMobile = useMediaQuery(theme.breakpoints.down('sm'))\n\n    const toggleSidenav = () => {\n        setOpen(!open)\n    }\n\n    const handleMasterCheckbox = (event) => {\n        let temp = messageList\n        let isChecked = event.target.checked\n        if (isChecked) {\n            temp.map((message) => {\n                message.selected = true\n                return message\n            })\n        } else {\n            temp.map((message) => {\n                message.selected = false\n                return message\n            })\n        }\n        setMessageList(temp)\n        setMasterCheckbox(isChecked)\n    }\n\n    const handleCheckboxSelection = (event, index) => {\n        event.persist()\n        let temp = messageList\n        temp[index].selected = event.target.checked\n        setMessageList([...temp])\n    }\n\n    useEffect(() => {\n        if (isMobile) setOpen(false)\n    }, [isMobile])\n\n    useEffect(() => {\n        getAllMessage().then(({ data }) => {\n            if (isAlive) setMessageList(data)\n        })\n    }, [isAlive])\n\n    useEffect(() => {\n        return () => setIsAlive(false)\n    }, [])\n\n    return (\n        <Container>\n            <Box width=\"100%\">\n                <MatxSidenavContainer>\n                    <MatxSidenav\n                        width=\"220px\"\n                        toggleSidenav={toggleSidenav}\n                        open={open}\n                    >\n                        <InboxSidenav />\n                    </MatxSidenav>\n                    <MatxSidenavContent>\n                        <InboxTopBar\n                            masterCheckbox={masterCheckbox}\n                            handleMasterCheckbox={handleMasterCheckbox}\n                            toggleSidenav={toggleSidenav}\n                        />\n                        <InboxMessageList\n                            handleCheckboxSelection={handleCheckboxSelection}\n                            messageList={messageList}\n                        />\n                    </MatxSidenavContent>\n                </MatxSidenavContainer>\n            </Box>\n        </Container>\n    )\n}\n\nexport default AppInbox\n"]},"metadata":{},"sourceType":"module"}